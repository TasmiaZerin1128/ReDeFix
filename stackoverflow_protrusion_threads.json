[
    {
        "title": "How to align checkboxes and their labels consistently cross-browsers",
        "question_body": "This is one of the minor CSS problems that plague me constantly.  How do folks around Stack Overflow vertically align <code>checkboxes</code> and their <code>labels</code> consistently cross-browser ?  Whenever I align them correctly in Safari (usually using <code>vertical-align: baseline</code> on the <code>input</code> ), they're completely off in Firefox and IE.  Fix it in Firefox, and Safari and IE are inevitably messed up. I waste time on this every time I code a form.  Here's the standard code that I work with:    <code><form>\n    <div>\n        <label><input type=\"checkbox\" /> Label text</label>\n    </div>\n</form></code>    I usually use Eric Meyer's reset, so form elements are relatively clean of overrides. Looking forward to any tips or tricks that you have to offer! ",
        "link": "https://stackoverflow.com/questions/306252/how-to-align-checkboxes-and-their-labels-consistently-cross-browsers",
        "score": 1901,
        "tags": [
            "html",
            "css",
            "cross-browser",
            "alignment",
            "forms"
        ],
        "question_id": 306252,
        "answer_count": 40,
        "view_count": 1261627,
        "comment_count": 5,
        "comments": [
            {
                "body": "Put each checkbox and label within an <li> element. Add overflow:hidden to the <li> and float the label and checkbox left. Then they all align perfectly fine. Don't put the checkbox within the label element obviously."
            },
            {
                "body": "I have acieved it by using <code>height</code> and <code>line-height</code> attributes, give a look to jsfiddle.net/wepw5o57/3"
            },
            {
                "body": "Manipulation with <code>position</code> and <code>top</code> will solve this problem Example: jsfiddle.net/ynkjc22s"
            }
        ],
        "answers": [
            {
                "score": 1,
                "body": "Yay thanks! This too has been driving me nuts forever.  In my particular case, this worked for me:  <code>input {\n    width: 13px;\n    height: 13px;\n    padding: 0;\n    margin:0;\n    vertical-align: top;\n    position: relative;\n    *top: 1px;\n    *overflow: hidden;\n}\nlabel {\n    display: block;\n    padding: 0;\n    padding-left: 15px;\n    text-indent: -15px;\n    border: 0px solid;\n    margin-left: 5px;\n    vertical-align: top;\n}\n</code>  I am using the reset.css which might explain some of the differences, but this seems to work well for me. "
            },
            {
                "score": 1,
                "body": "Maybe some folk are making the same mistake I did? Which was... I had set a width for the input boxes, because they were mostly of type 'text' , but then forgotten to over-ride that width for checkboxes - so my checkbox was trying to occupy a lot of excess width and so it was tough to align a label beside it.  <code>.checkboxlabel {\n    width: 100%;\n    vertical-align: middle;\n}\n.checkbox {\n    width: 20px !important;\n}\n</code>  <code><label for='acheckbox' class='checkboxlabel'>\n    <input name=\"acheckbox\" id='acheckbox' type=\"checkbox\" class='checkbox'>Contact me</label>\n</code>  Gives clickable labels and and proper alignment as far back as IE6 (using a class selector) and in late versions of Firefox, Safari and Chrome "
            },
            {
                "score": 1,
                "body": "Simple solution:  <code><label style=\"display:block\">\n  <input style=\"vertical-align:middle\" type=\"checkbox\">\n  <span  style=\"vertical-align:middle\">Label</span>\n</label>\n</code>  Tested in Chrome, Firefox, IE9 +, Safari, iOS 9+ "
            },
            {
                "score": 1,
                "body": "<code>label {\n    display: inline-block;\n    padding-right: 10px;\n}\ninput[type=checkbox] {\n    position: relative;\n    top: 2px;\n}\n</code> "
            },
            {
                "score": 2,
                "body": "This is not the best way of going about solving the issue  <code>vertical-align: middle\n</code>   Adding <code>style=\"position:relative;top:2px;\"</code> to the input box would move it down <code>2px</code> . So depending on your font size, you can move it along. "
            },
            {
                "score": 2,
                "body": "<code>position: relative;</code> has some issues in IE with z-index and animations like jQuery's slideUp/slideDown.  CSS:  <code>input[type=checkbox], input[type=radio] {\n    vertical-align: baseline;\n    position: relative;\n    top: 3px;\n    margin: 0 3px 0 0;\n    padding: 0px;\n}\ninput.ie7[type=checkbox], input.ie7[type=radio] {\n    vertical-align: middle;\n    position: static;\n    margin-bottom: -2px;\n    height: 13px;\n    width: 13px;\n}\n</code>  jQuery:  <code>$(document).ready(function () {\n    if ($.browser.msie && $.browser.version <= 7) {\n        $('input[type=checkbox]').addClass('ie7');\n        $('input[type=radio]').addClass('ie7');\n    }\n});\n</code>  The styling probably needs tweaks depending on the font-size used in <code><label></code>  PS: I use ie7js to make the css work in IE6. "
            },
            {
                "score": 3,
                "body": "I usually leave a checkbox unlabeled and then make its \"label\" a separate element. It's a pain, but there's so much cross-browser difference between how checkboxes and their labels are displayed (as you've noticed) that this is the only way I can come close to controlling how everything looks.  I also end up doing this in winforms development, for the same reason. I think the fundamental problem with the checkbox control is that it is really two different controls: the box and the label. By using a checkbox, you're leaving it up to the implementers of the control to decide how those two elements are displayed next to each other (and they always get it wrong, where wrong = not what you want).  I really hope someone has a better answer to your question. "
            },
            {
                "score": 3,
                "body": "CSS:  <code>.threeCol .listItem {\n    width:13.9em;\n    padding:.2em;\n    margin:.2em;\n    float:left;\n    border-bottom:solid #f3f3f3 1px;\n}\n.threeCol input {\n    float:left;\n    width:auto;\n    margin:.2em .2em .2em 0;\n    border:none;\n    background:none;\n}\n.threeCol label {\n    float:left;\n    margin:.1em 0 .1em 0;\n}\n</code>  HTML:  <code><div class=\"threeCol\">\n    <div class=\"listItem\">\n        <input type=\"checkbox\" name=\"name\" id=\"id\" value=\"checkbox1\" />\n        <label for=\"name\">This is your checkBox</label>\n    </div>\n</div>\n</code>  The above code will place your list items in threecols and just change widths to suit. "
            },
            {
                "score": 3,
                "body": "So I know this has been answered many times, but I feel I have a way more elegant solution than those that have been provided already. And not only 1 elegant solution, but 2 separate solutions to tickle your fancy. With that said, everything you need to know and see are contained in 2 JS Fiddle's, with comments.   Solution #1 relies on the native \"Checkbox\" of the given browser, though with a twist... Its contained in a div which is easier to position cross-browser, with an overflow: hidden to chop the excess of a 1px stretched checkbox (this is so you cant see the ugly borders of FF)  Simple HTML: (follow the link to review the css with comments, code block is to satisfy stackoverflow)  http://jsfiddle.net/KQghJ/  <code><label><div class=\"checkbox\"><input type=\"checkbox\" /></div> Label text</label>\n</code>   Solution #2 uses the \"Checkbox Toggle Hack\" to toggle the CSS state of a DIV, which has been properly positioned across browser, and setup with a simple sprite for the checkbox unchecked and checked states. All that is needed is to adjust the background-position with said Checkbox Toggle Hack. This, in my opinion, is the more elegant solution as you have more control over your checkboxes & radios, and can guarantee they look the same across browser.  Simple HTML: (follow the link to review the CSS with comments, code block is to satisfy StackOverflow)  http://jsfiddle.net/Sx5M2/  <code><label><input type=\"checkbox\" /><div class=\"checkbox\"></div>Label text</label>\n</code>   If anyone disagree's with these methods, please leave me a comment, I would love to hear some feedback on why others have not come across these solutions, or if they have, why I see no answers here regarding them? If anyone sees one of these methods fail, it would be nice to see that too, but these have been tested in the latest browsers and rely on HTML / CSS methods that are quite old, and universal as far as I have seen. "
            },
            {
                "score": 4,
                "body": "Hardcode the checkbox's height and width, remove its padding, and make its height plus vertical margins equal to the label's line-height. If the label text is inline, float the checkbox. Firefox, Chrome, and IE7+ all render the following example identically: http://www.kornea.com/css-checkbox-align "
            },
            {
                "score": 4,
                "body": "The following gives pixel-perfect consistency across browsers, even IE9:  The approach is quite sensible, to the point of being obvious:   Create an input and a label.  Display them as block, so you can float them as you like.  Set the height and the line-height to the same value to ensure they center and align vertically.  For em measurements, to calculate the height of the elements, the browser must know the height of the font for those elements, and it must not itself be set in em measurements.   This results in a globally applicable general rule:  <code>input, label {display:block;float:left;height:1em;line-height:1em;}\n</code>  With font size adaptable per form, fieldset or element.  <code>#myform input, #myform label {font-size:20px;}\n</code>  Tested in latest Chrome, Safari, and Firefox on Mac, Windows, Iphone, and Android. And IE9.  This method is likely applicable to all input types that are not higher than one line of text. Apply a type rule to suit. "
            },
            {
                "score": 5,
                "body": "With an input type checkbox wrapped inside the label and floated to the left like so:  <code><label for=\"id\" class=\"checkbox\">\n    <input type=\"checkbox\" id=\"id\">\n    <span>The Label</span>\n</label>\n</code>  this worked for me:  <code>label.checkbox {\n    display: block;\n}\n.checkbox input {\n    float: left;\n    height: 18px;\n    vertical-align: middle;\n}\n.checkbox span {\n    float: left;\n    line-height: 18px;\n    margin: 0 0 0 20px;\n}\n</code>  Make sure the height of the is identical to the line-height of the (blocklevel) . "
            },
            {
                "score": 7,
                "body": "If you use ASP.NET Web Forms you don't need to worry about DIVs and other elements or fixed sizes. We can align the <code><asp:CheckBoxList></code> text by setting <code>float:left</code> to the CheckboxList input type in CSS.  Please check the following example code:  <code>.CheckboxList\n{\n    font-size: 14px;\n    color: #333333;\n}\n.CheckboxList input\n{\n    float: left;\n    clear: both;\n}\n</code>  .ASPX code:  <code><asp:CheckBoxList runat=\"server\" ID=\"c1\" RepeatColumns=\"2\" CssClass=\"CheckboxList\">\n</asp:CheckBoxList>\n</code> "
            },
            {
                "score": 10,
                "body": "The chosen answer with 400+ upvotes did not work for me in Chrome 28 OSX, probably because it wasn't tested in OSX or that it did work in whatever was around in 2008 when this question was answered.  The times have changed, and new CSS3 solutions are now feasible. My solution uses pseudoelements to create a custom checkbox . So the stipulations (pros or cons, however you look at it) are as follows:   Only works in modern browsers (FF3.6+, IE9+, Chrome, Safari)  Relies on a custom designed checkbox, that will be rendered exactly the same in every browser/OS. Here I've just chosen some simple colors, but you could always add linear gradients and such to give it more of a bang.  Is geared to a certain font/font size, which if changed, you'd simply change the positioning and size of the checkbox to make it appear vertically aligned. If tweaked correctly, the end result should still be near to exactly the same in all browser / operating systems.  No vertical-alignment properties, no floats  Must use the provided markup in my example, it will not work if structured like the question, however, the layout will essentially look the same. If you want to move things around, you'll have to also move the associated CSS     <code>div.checkbox {\r\n    position: relative;\r\n    font-family: Arial;\r\n    font-size: 13px;\r\n}\r\nlabel {\r\n    position: relative;\r\n    padding-left: 16px;\r\n}\r\nlabel::before {\r\n    content :\"\";\r\n    display: inline-block;\r\n    width: 10px;\r\n    height: 10px;\r\n    background-color: white;\r\n    border: solid 1px #9C9C9C;\r\n    position: absolute;\r\n    top: 1px;\r\n    left: 0px;\r\n}\r\nlabel::after {\r\n    content:\"\";\r\n    width: 8px;\r\n    height: 8px;\r\n    background-color: #666666;\r\n    position: absolute;\r\n    left: 2px;\r\n    top: 3px;\r\n    display: none;\r\n}\r\ninput[type=checkbox] {\r\n    visibility: hidden;\r\n    position: absolute;\r\n}\r\ninput[type=checkbox]:checked + label::after {\r\n    display: block;\r\n}\r\ninput[type=checkbox]:active + label::before {\r\n    background-color: #DDDDDD;\r\n}</code>  <code><form>\r\n    <div class=\"checkbox\">\r\n        <input id=\"check_me\" type=checkbox />\r\n        <label for=\"check_me\">Label for checkbox</label>\r\n    </div>\r\n</form></code>    This solution hides the checkbox , and adds and styles pseudoelements to the label to create the visible checkbox. Because the label is tied to the hidden checkbox, the input field will still get updated and the value will be submitted with the form.  And if you're interested, here's my take on radio buttons: http://jsfiddle.net/DtKrV/2/  Hope someone finds this useful! "
            },
            {
                "score": 11,
                "body": "This works well for me:    <code>fieldset {\r\n  text-align:left;\r\n  border:none\r\n}\r\nfieldset ol, fieldset ul {\r\n  padding:0;\r\n  list-style:none\r\n}\r\nfieldset li {\r\n  padding-bottom:1.5em;\r\n  float:none;\r\n  clear:left\r\n}\r\nlabel {\r\n  float:left;\r\n  width:7em;\r\n  margin-right:1em\r\n}\r\nfieldset.checkboxes li {\r\n  clear:both;\r\n  padding:.75em\r\n}\r\nfieldset.checkboxes label {\r\n  margin:0 0 0 1em;\r\n  width:20em\r\n}\r\nfieldset.checkboxes input {\r\n  float:left\r\n}</code>  <code><form>\r\n  <fieldset class=\"checkboxes\">\r\n    <ul>\r\n      <li>\r\n        <input type=\"checkbox\" name=\"happy\" value=\"yep\" id=\"happy\" />\r\n        <label for=\"happy\">Happy?</label>\r\n      </li>\r\n      <li>\r\n        <input type=\"checkbox\" name=\"hungry\" value=\"yep\" id=\"hungry\" />\r\n        <label for=\"hungry\">Hungry?</label>\r\n      </li>\r\n    </ul>\r\n  </fieldset>\r\n</form></code>   "
            },
            {
                "score": 11,
                "body": "I don't like relative positioning because it makes element rendered above everything else on its level (it can get on top of something if you have complex layout).  I've discovered that <code>vertical-align: sub</code> makes checkboxes look good enough aligned in Chrome, Firefox and Opera. Can't check Safari since I don't have MacOS and IE10 is slightly off, but I've found it to be good enough solution for me.  Another solution might be to try and make specific CSS for every browser and fine-tune it with some vertical-align in %/pixels/EMs: http://css-tricks.com/snippets/css/browser-specific-hacks/ "
            },
            {
                "score": 14,
                "body": "I think this is the easiest way    <code>input {\r\n    position: relative;\r\n    top: 1px;\r\n}</code>  <code><form>\r\n    <div>\r\n        <label><input type=\"checkbox\" /> Label text</label>\r\n    </div>\r\n<form></code>   "
            },
            {
                "score": 16,
                "body": "  <code><form>\r\n    <div>\r\n        <label style=\"display: inline-block\">\r\n            <input style=\"vertical-align: middle\" type=\"checkbox\" />\r\n            <span style=\"vertical-align: middle\">Label text</span>\r\n         </label>\r\n    </div>\r\n</form></code>    The trick is to use vertical-align only in table cells or inline-block if using label tag. "
            },
            {
                "score": 16,
                "body": "Now that flexbox is supported in all modern browsers, something like this seems like an easier approach to me.  <code><style>\nlabel {\n  display: flex;\n  align-items: center;\n}\ninput[type=radio], input[type=checkbox]{\n  flex: none;\n}\n</style>\n<form>\n  <div>\n    <label><input type=\"checkbox\" /> Label text</label>\n  </div>\n</form>\n</code>   Here's the complete prefixed version demo:    <code>label {\r\n\tdisplay: -webkit-box;\r\n\tdisplay: -webkit-flex;\r\n\tdisplay: -ms-flexbox;\r\n\tdisplay: flex;\r\n\t-webkit-box-align: center;\r\n\t-webkit-align-items: center;\r\n\t-ms-flex-align: center;\r\n\talign-items: center;\r\n}\r\ninput[type=radio], \r\ninput[type=checkbox] {\r\n\t-webkit-box-flex: 0;\r\n\t-webkit-flex: none;\r\n\t-ms-flex: none;\r\n\tflex: none;\r\n\tmargin-right: 10px; \r\n}\r\n/* demo only (to show alignment) */\r\nform {\r\n  max-width: 200px\r\n}</code>  <code><form>\r\n  <label>\r\n    <input type=\"radio\" checked>\r\n    I am an aligned radio and label\r\n  </label>\r\n  <label>\r\n      <input type=\"checkbox\" checked>\r\n    I am an aligned checkbox and label\r\n  </label>\r\n</form></code>   "
            }
        ]
    },
    {
        "title": "Can&#39;t scroll to top of flex item that is overflowing container",
        "question_body": "In attempting to make a useful modal using flexbox, I found what seems to be a browser issue and am wondering if there is a known fix or workaround -- or ideas on how to resolve it.  The thing I'm trying to solve has two aspects. First, getting the modal window vertically centered, which works as expected. The second is to get the modal window to scroll -- externally, so the whole modal window scrolls, not the contents within it (this is so you can have dropdowns and other UI elements that can extend outside of the bounds of the modal -- like a custom date picker, etc.)  However, when combining the vertical centering with scroll bars, the top of the modal can become inaccessible as it begins to overflow. In the above example, you can resize to force the overflow, and in doing so it allows you to scroll to the bottom of the modal, but not to the top (first paragraph is cut off).    <code>.modal-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.5);\n  overflow-x: auto;\n}\n.modal-container .modal-window {\n  display: -ms-flexbox;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  /* Optional support to confirm scroll behavior makes sense in IE10\n  //-ms-flex-direction: column;\n  //-ms-flex-align: center;\n  //-ms-flex-pack: center; */\n  height: 100%;\n}\n.modal-container .modal-window .modal-content {\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  background: #fff;\n  width: 100%;\n  max-width: 500px;\n  padding: 10px\n}</code>  <code><div class=\"modal-container\">\n    <div class=\"modal-window\">\n        <div class=\"modal-content\">\n            <p class=\"p3\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\n            <p class=\"p3\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\n            <p class=\"p3\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\n        </div>\n    </div>\n</div></code>    This affects (current) Firefox, Safari, Chrome, and Opera. It does interestingly behave correctly in IE10 if you comment in the IE10 vendor prefixed CSS -- I did not bother testing in IE11 yet, but assume the behavior matches that of IE10.  Here's the link to the example code (highly simplified)  https://jsfiddle.net/dh9k18k0/2/ ",
        "link": "https://stackoverflow.com/questions/33454533/cant-scroll-to-top-of-flex-item-that-is-overflowing-container",
        "score": 529,
        "tags": [
            "html",
            "css",
            "flexbox"
        ],
        "question_id": 33454533,
        "answer_count": 13,
        "view_count": 130388,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 1,
                "body": "My case uses horizontal flex and overflow, and is indeed a boomer. I'm trying to make scrollable content on horizontal flex, like example below:    <code>div {\n  display: flex;\n  justify-content: center;\n  overflow-x: auto;\n}\npre {\n  padding: 30px;\n  background: gray;\n  margin: 20px;\n}</code>  <code><div>\n  <pre>Item</pre>\n  <pre>Item</pre>\n  <pre>Item</pre>\n  <pre>Item</pre>\n  <pre>Item</pre>\n  <pre>Item</pre>\n</div></code>    The solution was by using <code>margin:auto</code> on the first and last element instead:    <code>div {\n  display: flex;\n  justify-content: flex-start;\n  overflow-x: auto;\n}\npre {\n  padding: 30px;\n  background: gray;\n  margin: 20px;\n}\npre:first-child { margin-left: auto; }\npre:last-child { margin-right: auto; }</code>  <code><p>When overflow:</p>\n<div>\n  <pre>Item</pre>\n  <pre>Item</pre>\n  <pre>Item</pre>\n  <pre>Item</pre>\n  <pre>Item</pre>\n  <pre>Item</pre>\n  <pre>Item</pre>\n</div>\n<p>When not overflow:</p>\n<div>\n  <pre>Item</pre>\n  <pre>Item</pre>\n  <pre>Item</pre>\n</div></code>    Hope it helps "
            },
            {
                "score": 2,
                "body": "You should probably use the <code>margin: auto</code> technique, but if you would like to not use flexbox for whatever reason, you can use the pseudo element with vertical align hack to accomplish this.  Example  If codepen does not work  <code><div class=\"wrapper\">\n  <div class=\"modal\"></div>\n</div>\n<style>\n.wrapper {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #000;\n  overflow-y: auto;\n  text-align: center;\n}\n/* Required for centering */\n.wrapper:before {\n  content: '';\n  height: 100%;\n  width: 0;\n  vertical-align: middle;\n  display: inline-block;\n}\n.modal {\n  /* Required for centering */\n  display: inline-block;\n  vertical-align: middle;\n  text-align: left;\n  width: 320px;\n  height: 320px;\n  background-color: #fff;\n  border-radius: 25px;\n}\n</style>\n</code>  It works by creating an inline element, which as the full height of the parent and is displayed as inline-block, just as your target element ( .modal ), then <code>vertical-align: middle</code> is used on both, and the browser does its magic - it aligns the .modal and the pseudo element as though they were regular text. You can also use top/bottom vertical align on the modal div. Combined with text-align, the modal can be placed in any position.  You can use <code>text-align: center</code> on the parent to center the dialog horizontally. Should be supported in any browser and the overflow also works.  At the time of writing ( 9/15/2021 ), going to Google in incognito mode shows a cookie policy modal, which uses this technique for centering. "
            },
            {
                "score": 4,
                "body": "I think I found a solution. It works with lots of text and a little text . You don't need to specify the widths of anything, and it should work in IE8.    <code>.wrap1 {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  overflow-y: auto;\r\n}\r\n.wrap2 {\r\n  display: table;\r\n  width: 100%;\r\n  height: 100%;\r\n  text-align: center;\r\n}\r\n.wrap3 {\r\n  vertical-align: middle;\r\n  display: table-cell;\r\n}\r\n.wrap4 {\r\n  margin: 10px;\r\n}\r\n.dialog {\r\n  text-align: left;\r\n  background-color: white;\r\n  padding: 5px;\r\n  border-radius: 3px;\r\n  margin: auto;\r\n  display: inline-block;\r\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, .5);\r\n}</code>  <code><div class=\"wrap1\">\r\n  <div class=\"wrap2\">\r\n    <div class=\"wrap3\">\r\n      <div class=\"wrap4\">\r\n        <div class=\"dialog\">\r\n          <p>Lorem ipsum dolor sit amet.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div></code>   "
            },
            {
                "score": 6,
                "body": "Try this!  <code><div class=\"flex-container\">\n    <div class=\"item\">First item</div>\n    <div class=\"item\">Second item</div>\n    <div class=\"item\">Third item</div>\n</div>\n</code>  <code>.flex-container {\n    display: flex;\n    flex-wrap: nowrap;\n    white-space: nowrap;\n    overflow-x: auto;\n    .item:first-child {\n        margin-left: auto;\n    }\n    .item:last-child {\n        margin-right: auto;\n    }\n}\n</code> "
            },
            {
                "score": 28,
                "body": "I played around with min-height a bit before posting, but was not aware of the intrinsic sizing constraints that are fairly new to the spec.  http://caniuse.com/#feat=intrinsic-width  Adding a <code>min-height: min-content</code> to the flexbox area does resolve the issue in Chrome, and with vendor prefixes also fixes Opera and Safari, though Firefox remains unresolved.  <code>min-height: -moz-min-content; // not implemented\nmin-height: -webkit-min-content // works for opera and safari\nmin-height: min-content // works for chrome\n</code>  Still looking for ideas on Firefox, and other potential solutions. "
            },
            {
                "score": 38,
                "body": "I managed to pull this off with just 3 containers. The trick is to separate the flexbox container from the container that controls the scrolling. Lastly, put everything into a root container to center it all. Here are the essential styles to create the effect:    <code>.root {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.scroll-container {\n  margin: auto;\n  max-height: 100%;\n  overflow: auto;\n}\n.flex-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}</code>  <code><div class=\"root\">\n  <div class=\"scroll-container\">\n    <div class=\"flex-container\">\n      <p>Lorem ipsum dolor sit amet.</p>\n    </div>\n  </div>\n</div></code>    I've created a demo here: https://jsfiddle.net/r5jxtgba/14/ "
            },
            {
                "score": 948,
                "body": "The Problem  Flexbox makes centering very easy.  By simply applying <code>align-items: center</code> and <code>justify-content: center</code> to the flex container, your flex item(s) will be vertically and horizontally centered.  However, there is a problem with this method when the flex item is bigger than the flex container.  As noted in the question, when the flex item overflows the container the top becomes inaccessible.   For horizontal overflow, the left section becomes inaccessible (or right section, in RTL languages).  Here's an example with an LTR container having <code>justify-content: center</code> and three flex items:   See the bottom of this answer for an explanation of this behavior.   Solution #1  To fix this problem use flexbox auto margins , instead of <code>justify-content</code> .  With <code>auto</code> margins, an overflowing flex item can be vertically and horizontally centered without losing access to any part of it.  So instead of this code on the flex container:  <code>#flex-container {\n    align-items: center;\n    justify-content: center;\n}\n</code>  Use this code on the flex item:  <code>.flex-item {\n    margin: auto;\n}\n</code>   Revised Demo   Solution #2 (not yet implemented in safari)  Add the <code>safe</code> value to your keyword alignment rule, like this:  <code>justify-content: safe center\n</code>  or  <code>align-self: safe center\n</code>  From the CSS Box Alignment Module specification :   4.4. Overflow Alignment: the <code>safe</code> and <code>unsafe</code> keywords and scroll safety limits  When the [flex item] is larger than the [flex container], it will overflow. Some alignment modes, if honored in this situation, may cause data loss: for example, if the contents of a sidebar are centered, when they overflow they may send part of their boxes past the viewport’s start edge, which can’t be scrolled to.  To control this situation, an overflow alignment mode can be explicitly specified. <code>Unsafe</code> alignment honors the specified alignment mode in overflow situations, even if it causes data loss, while <code>safe</code> alignment changes the alignment mode in overflow situations in an attempt to avoid data loss.  The default behavior is to contain the alignment subject within the scrollable area, though at the time of writing this safety feature is not yet implemented.  <code>safe</code>  If the size of the [flex item] overflows the [flex container], the [flex item] is instead aligned as if the alignment mode were [ <code>flex-start</code> ].  <code>unsafe</code>  Regardless of the relative sizes of the [flex item] and [flex container], the given alignment value is honored.   Note: The Box Alignment Module is for use across multiple box layout models, not just flex. So in the spec excerpt above, the terms in brackets actually say \"alignment subject\", \"alignment container\" and \" <code>start</code> \". I used flex-specific terms to keep the focus on this particular problem.   Explanation for scroll limitation from MDN:   Flex item considerations  Flexbox's alignment properties do \"true\" centering, unlike other centering methods in CSS. This means that the flex items will stay centered, even if they overflow the flex container.  This can sometimes be problematic, however, if they overflow past the top edge of the page, or the left edge [...], as you can't scroll to that area, even if there is content there!  In a future release, the alignment properties will be extended to have a \"safe\" option as well.  For now, if this is a concern, you can instead use margins to achieve centering, as they'll respond in a \"safe\" way and stop centering if they overflow.  Instead of using the <code>align-</code> properties, just put <code>auto</code> margins on the flex items you wish to center.  Instead of the <code>justify-</code> properties, put auto margins on the outside edges of the first and last flex items in the flex container.  The <code>auto</code> margins will \"flex\" and assume the leftover space, centering the flex items when there is leftover space, and switching to normal alignment when not.  However, if you're trying to replace <code>justify-content</code> with margin-based centering in a multi-line flexbox, you're probably out of luck, as you need to put the margins on the first and last flex item on each line. Unless you can predict ahead of time which items will end up on which line, you can't reliably use margin-based centering in the main axis to replace the <code>justify-content</code> property.  "
            }
        ]
    },
    {
        "title": "&lt;fieldset&gt; resizes wrong; appears to have unremovable `min-width: min-content`",
        "question_body": "Problem  I have a <code><select></code> where one of its <code><option></code> ’s text values is very long. I want the <code><select></code> to resize so it is never wider than its parent, even if it has to cut off its displayed text. <code>max-width: 100%</code> should do that.  Before resize:   What I want after resize:   But if you load this jsFiddle example and resize the Result panel’s width to be smaller than that of the <code><select></code> , you can see that the select inside the <code><fieldset></code> fails to scale its width down.  What I’m actually seeing after resize:   However, the equivalent page with a <code><div></code> instead of a <code><fieldset></code> does scale properly. You can see that and test your changes more easily if you have a <code><fieldset></code> and a <code><div></code> next to each other on one page . And if you delete the surrounding <code><fieldset></code> tags , the resizing works. The <code><fieldset></code> tag is somehow causing horizontal resizing to break.  The <code><fieldset></code> acts is as if there is a CSS rule <code>fieldset { min-width: min-content; }</code> . ( <code>min-content</code> means, roughly, the smallest width that doesn’t cause a child to overflow.) If I replace the <code><fieldset></code> with a <code><div></code> with <code>min-width: min-content</code> , it looks exactly the same. Yet there is no rule with <code>min-content</code> in my styles, in the browser default stylesheet, or visible in Firebug’s CSS Inspector. I tried to override every style visible on the <code><fieldset></code> in Firebug’s CSS Inspector and in Firefox’s default stylesheet forms.css , but that didn’t help. Specifically overriding <code>min-width</code> and <code>width</code> didn’t do anything either.  Code  HTML of the fieldset:  <code><fieldset>\n    <div class=\"wrapper\">\n        <select id=\"section\" name=\"section\">\n            <option value=\"-1\"></option>\n            <option value=\"1501\" selected=\"selected\">Sphinx of black quartz, judge my vow. The quick brown fox jumps over the lazy dog.</option>\n            <option value=\"1480\">Subcontractor</option>\n            <option value=\"3181\">Valley</option>\n            <option value=\"3180\">Ventura</option>\n            <option value=\"3220\">Very Newest Section</option>\n            <option value=\"1481\">Visitor</option>\n            <option value=\"3200\">N/A</option>\n        </select>\n    </div>\n</fieldset>\n</code>  My CSS that should be working but isn’t:  <code>fieldset {\n    /* hide fieldset-specific visual features: */\n    margin: 0;\n    padding: 0;\n    border: none;\n}\nselect {\n    max-width: 100%;\n}\n</code>  Resetting the <code>width</code> properties to the defaults does nothing:  <code>fieldset {\n    width: auto;\n    min-width: 0;\n    max-width: none;\n}\n</code>  Further CSS in which I try and fail to fix the problem :  <code>/* try lots of things to fix the width, with no success: */\nfieldset {\n    display: block;\n    min-width: 0;\n    max-width: 100%;\n    width: 100%;\n    text-overflow: clip;\n}\ndiv.wrapper {\n    width: 100%;\n}\nselect {\n    overflow: hidden;\n}\n</code>  More details  The problem also occurs in this more comprehensive, more complicated jsFiddle example , which is more similar to the web page I’m actually trying to fix. You can see from that that the <code><select></code> is not the problem – an inline-block <code>div</code> also fails to resize. Though this example is more complicated, I assume that the fix for the simple case above will also fix this more complicated case.  [Edit: see browser support details below.]  One curious thing about this problem is that if you set <code>div.wrapper { width: 50%; }</code> , the <code><fieldset></code> stops resizing itself at the point then the full-size <code><select></code> would have hit the edge of the viewport. The resizing happens as if the <code><select></code> has <code>width: 100%</code> , even though the <code><select></code> looks like it has <code>width: 50%</code> .   If you give the <code><select></code> itself <code>width: 50%</code> , that behavior does not occur; the width is simply correctly set.   I don’t understand the reason for that difference. But it may not be relevant.  I also found the very similar question HTML fieldset allows children to expand indefinitely . The asker couldn’t find a solution and guesses that there is no solution apart from removing the <code><fieldset></code> . But I’m wondering, if it really is impossible to make the <code><fieldset></code> display right, why is that? What in <code><fieldset></code> ’s spec or default CSS ( as of this question ) causes this behavior? This special behavior is probably be documented somewhere, since multiple browsers work like this.  Background goal and requirements  The reason I’m trying to do this is as part of writing mobile styles for an existing page with a big form. The form has multiple sections, and one part of it is wrapped in a <code><fieldset></code> . On a smartphone (or if you make your browser window small), the part of the page with the <code><fieldset></code> is much wider than the rest of the form. Most of the form constrains its width just fine, but the section with the <code><fieldset></code> does not, forcing the user to zoom out or scroll right to see all of that section.  I’m wary of simply removing the <code><fieldset></code> , as it is generated on many pages in a big app, and I’m not sure what selectors in CSS or JavaScript might depend on it.  I can use JavaScript if I need to, and a JavaScript solution is better than nothing. But if JavaScript is the only way to do this, I’d be curious to hear an explanation for why this is not possible using only CSS and HTML.   Edit: browser support  On the site, I need to support Internet Explorer 8 and later (we just dropped support for IE7), the latest Firefox, and the latest Chrome. This particular page should also work on iOS and Android smartphones. Slightly degraded but still usable behavior is acceptable for Internet Explorer 8.  I retested my broken <code>fieldset</code> example on different browsers. It actually already works in these browsers:   Internet Explorer 8, 9, and 10  Chrome  Chrome for Android   It breaks in these browsers:   Firefox  Firefox for Android  Internet Explorer 7   Thus, the only browser I care about that the current code breaks in is Firefox (on both desktop and mobile). If the code were fixed so it worked in Firefox without breaking it in any other browsers, that would solve my problem.  The site HTML template uses Internet Explorer conditional comments to add classes such <code>.ie8</code> and <code>.oldie</code> to the <code><html></code> element. You can use those classes in your CSS if you need to work around styling differences in IE. The classes added are the same as in this old version of HTML5 Boilerplate . ",
        "link": "https://stackoverflow.com/questions/17408815/fieldset-resizes-wrong-appears-to-have-unremovable-min-width-min-content",
        "score": 230,
        "tags": [
            "html",
            "width",
            "fieldset",
            "css"
        ],
        "question_id": 17408815,
        "answer_count": 4,
        "view_count": 99902,
        "comment_count": 7,
        "comments": [
            {
                "body": "Your simple example: give <code><fieldset></code> (or <code>div.wrapper</code> ) whatever width it needs, and <code>select { width:100% }</code> . <code>max-width</code> appears to give the element some % of its parent's original width, then does not scale, whereas <code>width</code> does scale with its parent. I think that will do what you want (but I could have misunderstood). In your more complex fiddle, try giving the fields in the left column a %-width, and a min- pixel-width. Then give the fields on the right 100 - (left-fields-%-width) % width."
            },
            {
                "body": "I just had another thought: what if you set the fieldset's min-width to 0? That by itself probably won't solve the problem, but possibly worth trying to work out. I'm working down a different path now, but if it doesn't work I'll try that out too"
            },
            {
                "body": "@trojansdestroy On the real site, I already have CSS with a media query that makes labels and fields be on separate lines at 640px width or narrower. For larger widths I need the label and field to stay on the same line, but you probably don’t need to do anything special for that to work."
            },
            {
                "body": "I realise I didn't quite address your specific request for a cross-browser solution because just adding <code>display: table-*</code> breaks rendering in IE. With that in mind, I've described a means for limiting that declaration to just Firefox and an explanation of why I think it's justified."
            },
            {
                "body": "Related question: How to make select elements shrink to max-width percent style within fieldset"
            }
        ],
        "answers": [
            {
                "score": 2,
                "body": "<code>.fake-select { white-space:nowrap; }</code> caused the fieldset to interpret the <code>.fake-select</code> element by its original width, rather than its forced width (even when the overflow is hidden).  Remove that rule, and change <code>.fake-select</code> 's <code>max-width:100%</code> to just <code>width:100%</code> and everything fits. The caveat is that you see all of the content of the fake-select, but I don't think this is all that bad, and it fits horizontally now.  Update: with the current rules in the following fiddle (which contains only real selects), the fieldset's children are constrained to correct widths. Other than removing rules for <code>.fake-select</code> and fixing comments (from <code>// comment</code> to <code>/* comment */</code> , I've noted changes in the fiddle's CSS.  I understand your problem better now, and the fiddle reflects some progress. I set default rules for all <code><select></code> s, and reserve <code>.xxlarge</code> for those which you know will be wider than 480px (and this only works because you know the width of <code>#viewport</code> , and can manually add the class to those too wide. Just requires a little bit of testing)  Proof "
            },
            {
                "score": 3,
                "body": "I’ve struggled for many hours with this, and basically, the browser is applying computed styling that you need to override in your CSS. I forget the exact property that is being set on <code>fieldset</code> elements versus <code>div</code> s (perhaps <code>min-width</code> ?).  My best advice would be to change your element to a <code>div</code> , copy the computed styles from your inspector, then change your element back to <code>fieldset</code> and compare the computed styles to find the culprit.  Hope that helps.  Update: Adding <code>display: table-cell</code> helps in non-Chrome browsers. "
            },
            {
                "score": 11,
                "body": "Safari on iOS issue with selected answer  I found the answer from Jordan Gray to be particularly helpful. However it didn't seem to solve this issue on Safari iOS for me.  The issue for me is simply that the fieldset cannot have an auto width if the element within has a max-width as a % width.  Fix for issue  Simply setting the fieldset to have a 100% width of it's container seems to get around this issue.  Example  <code>fieldset {\n    min-width: 0; \n    width: 100%; \n}\n</code>  Please refer to the below for working examples - if you remove the % width off the fieldset or replace it with auto, it will not continue to function.  JSFiddle | Codepen  "
            },
            {
                "score": 357,
                "body": "Update (25 Sept 2017)  The Firefox bug described below is fixed as of Firefox 53 and the link to this answer has finally been removed from Bootstrap's documentation .  Also, my sincere apologies to the Mozilla contributors who had to block removing support for <code>-moz-document</code> partly due to this answer.  The fix  In WebKit and Firefox 53+, you just set <code>min-width: 0;</code> on the fieldset to override the default value of <code>min-content</code> .¹  Still, Firefox is a bit… odd when it comes to fieldsets. To make this work in earlier versions, you must change the <code>display</code> property of the fieldset to one of the following values:   <code>table-cell</code>  (recommended)  <code>table-column</code>  <code>table-column-group</code>  <code>table-footer-group</code>  <code>table-header-group</code>  <code>table-row</code>  <code>table-row-group</code>   Of these, I recommend <code>table-cell</code> . Both <code>table-row</code> and <code>table-row-group</code> prevent you from changing width, while <code>table-column</code> and <code>table-column-group</code> prevent you from changing height.  This will (somewhat reasonably) break rendering in IE. Since only Gecko needs this, you can justifiably use <code>@-moz-document</code> —one of Mozilla's proprietary CSS extensions —to hide it from other browsers:  <code>@-moz-document url-prefix() {\n    fieldset {\n        display: table-cell;\n    }\n}\n</code>  (Here's a jsFiddle demo .)   That fixes things, but if you're anything like me your reaction was something like…  What.  There is a reason, but it's not pretty.  The default presentation of the fieldset element is absurd and essentially impossible to specify in CSS. Think about it: the fieldset's border disappears where it's overlapped by a legend element, but the background remains visible! There's no way to reproduce this with any other combination of elements.  To top it off, implementations are full of concessions to legacy behaviour. One such is that the minimum width of a fieldset is never less than the intrinsic width of its content. WebKit gives you a way to override this behaviour by specifying it in the default stylesheet, but Gecko² goes a step further and enforces it in the rendering engine .  However, internal table elements constitute a special frame type in Gecko. Dimensional constraints for elements with these <code>display</code> values set are calculated in a separate code path , entirely circumventing the enforced minimum width imposed on fieldsets.  Again—the bug for this has been fixed as of Firefox 53, so you do not need this hack if you are only targeting newer versions.  Is using <code>@-moz-document</code> safe?  For this one issue, yes.  <code>@-moz-document</code> works as intended in all versions of Firefox up until 53, where this bug is fixed.  This is no accident. Due in part to this answer, the bug to limit <code>@-moz-document</code> to user/UA stylesheets was made dependent on the underlying fieldset bug being fixed first.  Beyond this, do not use <code>@-moz-document</code> to target Firefox in your CSS , other resources notwithstanding.³   ¹ Value may be prefixed. According to one reader, this has no effect in Android 4.1.2 Stock Browser and possibly other old versions; I have not had time to verify this.  ² All links to the Gecko source in this answer refer to the 5065fdc12408 changeset , committed 29ᵗʰ July 2013; you may wish to compare notes with the most recent revision from Mozilla Central .  ³ See e.g. SO #953491: Targeting only Firefox with CSS and CSS Tricks: CSS hacks targeting Firefox for widely referenced articles on high-profile sites. "
            }
        ]
    },
    {
        "title": "Horizontal scroll on overflow of table",
        "question_body": "I have a basic table in a container. The table will have about 25 columns. I am trying to add a horizontal scroll bar on overflow of the table and am having a really tough time.  What is happening now, is the table cells are accommodating the cells contents by automatically adjusting the height of the cell and maintaining a fixed table width.  I appreciate any suggestions on why my method is not working on how to fix this.  CSS  <code>.search-table-outter {margin-bottom:30px; }\n.search-table{table-layout: fixed; margin:40px auto 0px auto;  overflow-x:scroll; }\n.search-table, td, th{border-collapse:collapse; border:1px solid #777;}\nth{padding:20px 7px; font-size:15px; color:#444; background:#66C2E0;}\ntd{padding:5px 10px; height:35px;}\ntr:nth-child(even)  {background: #f5f5f5;}\ntr:nth-child(odd)   {background: #FFF;}\n</code>  HTML  <code><div class=\"search-table-outter wrapper\">\n    <table class=\"search-table inner\">\n        <tr>\n            <th>Col1</th>\n            <th>col2</th>\n            <th>col3</th>\n            <th>col4</th>\n            <th>col5</th>\n            <th>col5</th>\n        </tr>\n        <?php echo $rows; ?>\n    </table>\n</div>\n</code>  JS fiddle (Note: if possible, I would like the horizontal scroll bar to be in the container with the red border): http://jsfiddle.net/ZXnqM/3/ ",
        "link": "https://stackoverflow.com/questions/19794211/horizontal-scroll-on-overflow-of-table",
        "score": 110,
        "tags": [
            "html",
            "css",
            "styling",
            "usability"
        ],
        "question_id": 19794211,
        "answer_count": 7,
        "view_count": 325181,
        "comment_count": 1,
        "comments": [],
        "answers": [
            {
                "score": 7,
                "body": "Unless I grossly misunderstood your question, move <code>overflow-x:scroll</code> from <code>.search-table</code> to <code>.search-table-outter</code> .  http://jsfiddle.net/ZXnqM/4/  <code>.search-table-outter {border:2px solid red; overflow-x:scroll;}\n.search-table{table-layout: fixed; margin:40px auto 0px auto;   }\n</code>  As far as I know you can't give scrollbars to tables themselves. "
            },
            {
                "score": 25,
                "body": "A solution that nobody mentioned is use <code>white-space: nowrap</code> for the table and add <code>overflow-x</code> to the wrapper.  ( http://jsfiddle.net/xc7jLuyx/11/ )  CSS  <code>.wrapper { overflow-x: auto; }\n.wrapper table { white-space: nowrap; }\n</code>  HTML  <code><div class=\"wrapper\">\n    <table></table>\n</div>\n</code>  This is an ideal scenario if you don't want rows with multiple lines. To add break lines you need to use <code><br/></code> . "
            },
            {
                "score": 112,
                "body": "The solution for those who cannot or do not want to wrap the <code>table</code> in a <code>div</code> (e.g. if the HTML is generated from Markdown) but still want to have scrollbars:    <code>table {\r\n  display: block;\r\n  max-width: -moz-fit-content;\r\n  max-width: fit-content;\r\n  margin: 0 auto;\r\n  overflow-x: auto;\r\n  white-space: nowrap;\r\n}</code>  <code><table>\r\n  <tr>\r\n    <td>Especially on mobile, a table can easily become wider than the viewport.</td>\r\n    <td>Using the right CSS, you can get scrollbars on the table without wrapping it.</td>\r\n  </tr>\r\n</table>\r\n<table>\r\n  <tr>\r\n    <td>A centered table.</td>\r\n  </tr>\r\n</table></code>    Explanation: <code>display: block;</code> makes it possible to have scrollbars. By default (and unlike tables), blocks span the full width of the parent element. This can be prevented with <code>max-width: fit-content;</code> , which allows you to still horizontally center tables with less content using <code>margin: 0 auto;</code> . <code>white-space: nowrap;</code> is optional (but useful for this demonstration). "
            },
            {
                "score": 158,
                "body": "I think your <code>overflow</code> should be on the outer container. You can also explicitly set a min width for the columns. Like this:  <code>.search-table-outter { overflow-x: scroll; }\nth, td { min-width: 200px; }\n</code>  Fiddle: http://jsfiddle.net/5WsEt/ "
            }
        ]
    },
    {
        "title": "Ellipsis for overflow text in dropdown boxes",
        "question_body": "I'm fixing the width of one of my dropdown boxes (yes I know there are cross-browser issues with doing this).  Is there a non-js way to cut off overflowing text and append ellipses? text-overflow:ellipsis doesn't work for <code><select></code> elements (at least in Chrome).    <code>select, div {\r\n    width:100px; \r\n    overflow:hidden; \r\n    white-space:nowrap; \r\n    text-overflow:ellipsis;\r\n}</code>  <code><!--works for a div-->\r\n<div>\r\n    A long option that gets cut off\r\n</div>\r\n<!--but not for a select-->\r\n<select>\r\n    <option>One - A long option that gets cut off</option>\r\n    <option>Two - A long option that gets cut off</option>\r\n</select></code>    Example here: http://jsfiddle.net/t5eUe/ ",
        "link": "https://stackoverflow.com/questions/7289769/ellipsis-for-overflow-text-in-dropdown-boxes",
        "score": 89,
        "tags": [
            "html",
            "css"
        ],
        "question_id": 7289769,
        "answer_count": 9,
        "view_count": 162302,
        "comment_count": 2,
        "comments": [
            {
                "body": "@JamesKhoury What do you mean, nothing gets cut off? Of course, when you open the dropdown, the full text shows. But when closed, it is cut off, e.g. only something like \"One - A long\" is displayed."
            }
        ],
        "answers": [
            {
                "score": 1,
                "body": "You can use this jQuery function instead of plus Bootstrap tooltip  <code>function DDLSToolTipping(ddlsArray) {\n    $(ddlsArray).each(function (index, ddl) {\n        DDLToolTipping(ddl)\n    });\n}\nfunction DDLToolTipping(ddlID, maxLength, allowDots) {\n    if (maxLength == null) { maxLength = 12 }\n    if (allowDots == null) { allowDots = true }\n    var selectedOption = $(ddlID).find('option:selected').text();\n    if (selectedOption.length > maxLength) {\n        $(ddlID).attr('data-toggle', \"tooltip\")\n                .attr('title', selectedOption);\n        if (allowDots) {\n            $(ddlID).prev('sup').remove();\n            $(ddlID).before(\n            \"<sup style='font-size: 9.5pt;position: relative;top: -1px;left: -17px;z-index: 1000;background-color: #f7f7f7;border-radius: 229px;font-weight: bold;color: #666;'>...</sup>\"\n               )\n        }\n    }\n    else if ($(ddlID).attr('title') != null) {\n        $(ddlID).removeAttr('data-toggle')\n                .removeAttr('title');\n    }\n}\n</code> "
            },
            {
                "score": 2,
                "body": "quirksmode has a good description of the 'text-overflow' property, but you may need to apply some additional properties like 'white-space: nowrap'  Whilst I'm not 100% how this will behave in a select object, it could be worth trying this first:  http://www.quirksmode.org/css/textoverflow.html "
            },
            {
                "score": 2,
                "body": "I used this approach in a recent project and I was pretty happy with the result:  <code>.select-wrapper {\n    position: relative;\n    &::after {\n        position: absolute;\n        top: 0;\n        right: 0;\n        width: 100px;\n        height: 100%;\n        content: \"\";\n        background: linear-gradient(to right, transparent, white);\n        pointer-events: none;\n    }\n}\n</code>  Basically, wrap the select in a div and insert a pseudo element to overlay the end of the text to create the appearance that the text fades out.  "
            },
            {
                "score": 3,
                "body": "  <code>$(document).ready(function () {\n   $(\"#selectDropdownID\").next().children().eq(0).addClass(\"selectDD\");\n});</code>  <code>.selectDD {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;     \n}</code>  <code><script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\n<select id=\"selectDropdownID\">\n    <option>One - A long option that gets cut off</option>\n    <option>Two - A long option that gets cut off</option>\n</select></code>   "
            },
            {
                "score": 4,
                "body": "Found this absolute hack that actually works quite well:  https://codepen.io/nikitahl/pen/vyZbwR  Not CSS only though.  The basic gist is to have a container on the dropdown, <code>.select-container</code> in this case. That container has it's <code>::before</code> set up to display <code>content</code> based on its <code>data-content</code> attribute/dataset, along with all of the <code>overflow:hidden; text-overflow: ellipsis;</code> and sizing necessary to make the ellipsis work.  When the select changes, javascript assigns the value (or you could retrieve the text of the option out of the <code>select.options</code> list) to the dataset.content of the container, and voila!  Copying content of the codepen here:    <code>var selectContainer = document.querySelector(\".select-container\");\r\nvar select = selectContainer.querySelector(\".select\");\r\nselect.value = \"lingua latina non penis canina\";\r\nselectContainer.dataset.content = select.value;\r\nfunction handleChange(e) {\r\n  selectContainer.dataset.content = e.currentTarget.value;\r\n  console.log(select.value);\r\n}\r\nselect.addEventListener(\"change\", handleChange);</code>  <code>span {\r\n  margin: 0 10px 0 0;\r\n}\r\n.select-container {\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n.select-container::before {\r\n  content: attr(data-content);\r\n  position: absolute;\r\n  top: 0;\r\n  right: 10px;\r\n  bottom: 0;\r\n  left: 0;\r\n  padding: 7px;\r\n  font: 11px Arial, sans-serif;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  text-transform: capitalize;\r\n  pointer-events: none;\r\n}\r\n.select {\r\n  width: 80px;\r\n  padding: 5px;\r\n  appearance: none;\r\n  background: transparent url(\"https://cdn4.iconfinder.com/data/icons/ionicons/512/icon-arrow-down-b-128.png\") no-repeat calc(~\"100% - 5px\") 7px;\r\n  background-size: 10px 10px;\r\n  color: transparent;\r\n}\r\n.regular {\r\n  display: inline-block;\r\n  margin: 10px 0 0;\r\n  .select {\r\n    color: #000;\r\n  }\r\n}</code>  <code><span>Hack:</span><div class=\"select-container\" data-content=\"\">\r\n  <select class=\"select\" id=\"words\">\r\n    <option value=\"lingua latina non penis canina\">Lingua latina non penis canina</option>\r\n    <option value=\"lorem\">Lorem</option>\r\n    <option value=\"ipsum\">Ipsum</option>\r\n    <option value=\"dolor\">Dolor</option>\r\n    <option value=\"sit\">Sit</option>\r\n    <option value=\"amet\">Amet</option>\r\n    <option value=\"lingua\">Lingua</option>\r\n    <option value=\"latina\">Latina</option>\r\n    <option value=\"non\">Non</option>\r\n    <option value=\"penis\">Penis</option>\r\n    <option value=\"canina\">Canina</option>\r\n  </select>\r\n</div>\r\n<br />\r\n<span>Regular:</span>\r\n<div class=\"regular\">\r\n  <select style=\"width: 80px;\">\r\n    <option value=\"lingua latina non penis canina\">Lingua latina non penis canina</option>\r\n    <option value=\"lorem\">Lorem</option>\r\n    <option value=\"ipsum\">Ipsum</option>\r\n    <option value=\"dolor\">Dolor</option>\r\n    <option value=\"sit\">Sit</option>\r\n    <option value=\"amet\">Amet</option>\r\n    <option value=\"lingua\">Lingua</option>\r\n    <option value=\"latina\">Latina</option>\r\n    <option value=\"non\">Non</option>\r\n    <option value=\"penis\">Penis</option>\r\n    <option value=\"canina\">Canina</option>\r\n  </select>\r\n</div></code>   "
            },
            {
                "score": 9,
                "body": "The simplest solution might be to limit the number of characters in the HTML itself. Rails has a truncate(string, length) helper, and I'm certain that whichever backend you're using provides something similar.  Due to the cross-browser issues you're already familiar with regarding the width of select boxes, this seems to me to be the most straightforward and least error-prone option.  <code><select>\n  <option value=\"1\">One</option>\n  <option value=\"100\">One hund...</option>\n<select>\n</code> "
            },
            {
                "score": 12,
                "body": "You can use this:  <code>select {\n    width:100px; \n    overflow:hidden; \n    white-space:nowrap; \n    text-overflow:ellipsis;\n}\nselect option {\n    width:100px;\n    text-overflow:ellipsis;\n    overflow:hidden;\n}\ndiv {\n    border-style:solid; \n    width:100px; \n    overflow:hidden; \n    white-space:nowrap; \n    text-overflow:ellipsis;\n}\n</code> "
            },
            {
                "score": 47,
                "body": "If you are finding this question because you have a custom arrow on your select box and the text is going over your arrow, I found a solution that works in some browsers. Just add some padding, to the <code>select</code> , on the right side.  Before:   After:   CSS:  <code>select {\n    padding:0 30px 0 10px !important;\n    -webkit-padding-end: 30px !important;\n    -webkit-padding-start: 10px !important;\n}\n</code>  iOS ignores the <code>padding</code> properties but uses the <code>-webkit-</code> properties instead.  http://jsfiddle.net/T7ST2/4/ "
            }
        ]
    },
    {
        "title": "Make TBODY scrollable in Webkit browsers",
        "question_body": "I'm aware of this question , but none of the answers work in Safari, Chrome, etc.  The accepted strategy ( as demonstrated here ) is to set the tbody height and overflow properties like so:  <code><table>\n    <thead>\n        <tr><th>This is the header and doesn't scroll</th></tr>\n    </thead>\n    <tbody style=\"height:100px; overflow:auto;\">\n        <tr><td>content that scrolls</td></tr>\n        <tr><td>content that scrolls</td></tr>\n        <tr><td>content that scrolls</td></tr>\n        <tr><td>content that scrolls</td></tr>\n        <tr><td>content that scrolls</td></tr>\n        <tr><td>content that scrolls</td></tr>\n        <tr><td>content that scrolls</td></tr>\n    </tbody>\n</table>\n</code>  Unfortunately, this does not work in any webkit browsers. There is a bug report about it that doesn't seem to be a high priority (reported June 05).  So my question is: are there alternate strategies that do actually work? I've tried the two-table approach, but it's impossible to guarantee that the header will line up with the content. Do I just have to wait for Webkit to fix it? ",
        "link": "https://stackoverflow.com/questions/1019938/make-tbody-scrollable-in-webkit-browsers",
        "score": 70,
        "tags": [
            "html",
            "css",
            "webkit"
        ],
        "question_id": 1019938,
        "answer_count": 15,
        "view_count": 95644,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 1,
                "body": "I developed javascript solution for the above problem which works only in Firefox 7+ as i have tested only in FF  I came to this thread and found solution pointed by Michael Koper  In this solution three important things are done 1) fix the column width 2) thead > tr display is set to block 3) tbody display is set to block  as others have mentioned there problem to fix the width , i am also in same position; even i cant fix the width statically  so i thought i will fix the width dynamically ( after table is rendered in browser) and this did the trick :)  following is the solution in javascript which works only in FF ( i have tested only in FF , i dont have access to other browsers )  <code>       function test1(){                \n            var tbodys = document.getElementsByTagName(\"TBODY\");\n            for(var i=0;i<tbodys.length;i++){\n                do_tbodyscroll(tbodys[i]);\n            }\n        }\n      function do_tbodyscroll(_tbody){\n            // get the table node \n            var table = _tbody.parentNode;\n            // first row of tbody \n            var _fr = _tbody.getElementsByTagName(\"TR\")[0];\n            // first row cells .. \n            var _frcells = _fr.cells;\n            // Width array , width of each element is stored in this array \n            var widtharray = new Array(_frcells.length);\n            for(var i=0;i<_frcells.length;i++){                    \n                widtharray[i] = _frcells[i].scrollWidth;\n            }                \n            // Apply width to first row                  \n            for(var i=0;i<_frcells.length;i++){\n                _frcells[i].width = widtharray[i];                   \n            }                 \n            // Get the Last row in Thead ... \n            // COLGROUPS USING COLSPAN NOT YET SUPPORTED\n            var thead = table.getElementsByTagName(\"THEAD\")[0];\n            var _rows = thead.getElementsByTagName(\"TR\");\n            var tableheader = _rows[_rows.length - 1];\n            var headercells = tableheader.cells;\n            // Apply width to header ..                                \n            for(var i=0;i<headercells.length;i++){\n                headercells[i].width = widtharray[i];\n            }\n            // ADD 16 Pixel of scroll bar to last column ..\n            headercells[headercells.length -1 ].width = widtharray[headercells.length -1] + 16;\n            tableheader.style.display = \"block\";\n            _tbody.style.display = \"block\";  \n        }\n</code>  This solutions finds out what is the width of column from browser and set again the same width to columns ( header and first row of tbody ) after the width is set; thead > tr and tbody display is set to block  Hope this solution is useful for all of you .. if you can extend it to other browsers please reply to this post "
            },
            {
                "score": 2,
                "body": "Thought I'd throw my solution into the mix - http://tjvantoll.com/2012/11/10/creating-cross-browser-scrollable-tbody/ .  It takes the same basic route as @Michael Koper's solution but includes a workaround so the table will look correct in IE back to IE6.  I solve the width issue by giving the <code><table></code> a <code>table-layout: fixed</code> and explicitly assigning width to cells in each column. Not ideal but it does produce a semantic table that will align cross browser regardless of whether a scrollbar is needed.  Demo: http://codepen.io/tjvantoll/pen/JEKIu "
            },
            {
                "score": 3,
                "body": "A faced the same problem long ago, and I finally set out the two tables approach. This is the result: http://jsfiddle.net/bGr4V/3/ , it works for all browsers (IE6+ incl).  In this jsFiddle you can play with a clean version.  My solution was to add a fix cell  <code><th class=\"fix\"> </th></code> in <code>thead</code> to fill the space of the scroll bar in the <code>tbody</code> , then give one column a variable width ( <code><td class=\"grow\"></code> ), so the header fix cell wouldn't unmatch on resizing.  HTML:  <code><div class=\"fixed_table\">\n  <div class=\"head\">\n    <table>\n      <thead>\n        <tr>\n          <th>Column header</th>\n          <th class=\"grow\">Column header</th>\n          <th class=\"fix\"> </th>\n        </tr>\n      </thead>\n    </table>\n  <div class=\"body\">\n    <table class=\"full_table\">\n      <caption class=\"caption\">Caption</caption>\n      <tbody>\n        <tr>\n          <td>Data</td>\n          <td class=\"grow\">Data</td>\n        </tr>\n        <tr>\n          <td>...</td>\n          <td>...</td>\n        </tr>\n        <tr>\n          <td>...</td>\n          <td>...</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n</code>  CSS: has <code>*</code> and <code>_</code> hack for ie6-7, and a <code>-webkit</code> specific for the header fix-cell matching scroll width in each case.  <code>.fixed_table table {\n  table-layout: fixed;\n  width: auto;\n  border-width: 0;\n  padding: 0;\n  border-collapse: collapse;\n}\n.fixed_table .body {\n  overflow: scroll;\n  overflow-x: hidden;\n  max-height: 10.75em;\n  min-height: 2.5em;\n  padding-bottom: 0.8em;\n  *padding-right: 17px; /*ie7 & ie6*/\n  _padding-right: 0; /*ie6*/\n  _height: 10em ;\n}\n.fixed_table th, .fixed_table td {\n  width: 4.7em;\n}\n.fixed_table .grow {\n  width: auto;\n}\n.fixed_table .fix {\n  width: 16px;\n  *width: 17px; /*ie7 & ie6*/\n  _width: 16px; /*ie6*/\n}\n/* webkit specific */\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n  .fixed_table .fix{ width: 17px }\n}\n</code> "
            },
            {
                "score": 5,
                "body": "I saw Sean Haddy's excellent solution and took the liberty of making some edits :   Use classes instead of ID, so one jQuery script could be reused for multiple tables on one page  Added support for semantic HTML table elements like caption, thead, tfoot, and tbody  Made scrollbar optional so it won't appear for tables that are \"shorter\" than the scrollable height  Adjusted scrolling div's width to bring the scrollbar up to the right edge of the table  Made concept accessible by  using aria-hidden=\"true\" on injected static table header  and leaving original thead in place, just hidden with jQuery and set <code>aria-hidden=\"false\"</code>   Showed examples of multiple tables with different sizes   Sean did the heavy lifting, though. Thanks to Matt Burland, too, for pointing out need to support tfoot.  Please see for yourself at http://jsfiddle.net/jhfrench/eNP2N/ "
            },
            {
                "score": 12,
                "body": "Try the first method of this page, pure CSS with a single table (2 divs around the table, and the thead is positionned absolute) : http://www.cssplay.co.uk/menu/tablescroll.html Seems to work on FF4/IE9/IE8 in addition to IE7/FF3.6. "
            },
            {
                "score": 17,
                "body": "Using the display:block style only works if you have 1 column. If you have multiple data columns - with multiple fields - then display:block appears to make all data columns scrollable but under the 1st column (does the same in Firefox - which is the only browser I know that does tbody scrolling nicely). Incidentally, on Firefox - you can use the overflow-x: hidden style to suppress the horizontal scroll.  I realized that the issue I mention only occurs if you are not specifying a width for the th & td elements - if you can fix the column widths then it works. Problem for me is I can't fix the column widths. "
            },
            {
                "score": 32,
                "body": "Here is a working example:  http://www.imaputz.com/cssStuff/bigFourVersion.html  You have to add the display:block to the thead > tr and tbody "
            }
        ]
    },
    {
        "title": "IE6 + IE7 CSS problem with overflow: hidden; - position: relative; combo",
        "question_body": "So I have created a slider for a homepage, that slides some images with a title and teaser text using jQuery. Everything works fine, and I went to check IE and found that IE 6 and 7 kills my slider css completely. I can't figure out why, but for some reason I can't hide the non active slides with overflow: hidden; I've tried tweaking the css back and forth, but haven't been able to figure out what's causing the problem.  I've recreated the problem in a more isolated html page.  <code><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"da\" lang=\"da\" dir=\"ltr\">\n  <head>\n    <style>\n      body {\n       width: 900px;\n      }\n      .column-1 {\n        width: 500px;\n        float: left;\n      }\n      .column-2 {\n        width: 200px;\n        float: left;\n      }\n      .column-3 {\n        width: 200px;\n        float: left;\n      } \n      ul {\n        width: 2000px;\n        left: -499px;\n        position: relative;\n      }\n      li {\n        list-style: none;\n        display: block;\n        float: left;\n      }\n      .item-list {\n        overflow: hidden;\n        width: 499px;\n      }\n    </style>\n  </head>\n  <body>\n    <div class=\"column-1\">\n      <div class=\"item-list clearfix\">\n        <ul>\n          <li class=\"first\">\n            <div class=\"node-slide\">\n              <img src=\"http://www.hanselman.com/blog/content/binary/lolcats-funny-pictures-leroy-jenkins.jpg\" />\n              <div class=\"infobox\">\n                <h4>Title 1</h4>\n                <p>Teaser 1</p>\n              </div>\n            </div>\n          </li>\n          <li>\n            <div class=\"slide\">\n              <img src=\"http://www.hanselman.com/blog/content/binary/lolcats-funny-pictures-leroy-jenkins.jpg\" />\n              <div class=\"infobox\">\n                <h4>Title 2</h4>\n                <p>Teaser 2</p>\n              </div>\n            </div>\n          </li>\n          <li class=\"last\">\n            <div class=\"slide\">\n              <img src=\"http://www.hanselman.com/blog/content/binary/lolcats-funny-pictures-leroy-jenkins.jpg\" />\n              <div class=\"infobox\">\n                <h4>Title 3</h4>\n                <p>Teaser 3</p>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <div class=\"column-2\">\n      ...\n    </div>\n    <div class=\"column-3\">\n      ...\n    </div>\n  </body>\n</html>\n</code>  I've tracked down that it is the  <code>ul {\n  position: relative;\n}\n</code>  on the ul element that is causing the overflow: hidden not to work, but why that is, I don't know. Also this is needed to make the slider javascript work using the left attribute on the ul to slide it. Any ideas as to how you can fix this is most welcome. ",
        "link": "https://stackoverflow.com/questions/2403011/ie6-ie7-css-problem-with-overflow-hidden-position-relative-combo",
        "score": 65,
        "tags": [
            "html",
            "css",
            "internet-explorer-6",
            "internet-explorer-7",
            "overflow"
        ],
        "question_id": 2403011,
        "answer_count": 2,
        "view_count": 72546,
        "comment_count": 2,
        "comments": [],
        "answers": [
            {
                "score": 25,
                "body": "This problem is apparently a known bug for IE 6 + 7, which was fixed in IE8.  To avoid this, in this case you can replace:  <code>ul {\n    left: -499px;\n    position: relative;\n  }\n</code>  with:  <code>ul {\n    margin-left: -499px;\n  }\n</code>  This however gave some problems with the background I used on the infobox div, but nothing I couldn't solve with a few style hacks. "
            },
            {
                "score": 182,
                "body": "It is a well-known bug in IE6 and IE7. To solve it, you need to add position:relative to the container. Since in your case body is the container, I'd suggest you add a div directly under the body and give it position:relative. It should solve your problem. "
            }
        ]
    },
    {
        "title": "overflow-y:visible not working when overflow-x:hidden is present",
        "question_body": "Doesn't work properly in Chrome or Firefox. Is there any workaround to this?  <code>   <!DOCTYPE html>\n   <html>\n   <head></head>\n   <body>\n    <h3>overflow-y:visible</h3>\n    with overflow-x:hidden\n    <div style=\"overflow-x:hidden;overflow-y:visible;width:100px;height:100px;   position:relative;background:#666;\">\n        <div style=\"top:20px;left:20px;    width:420px;height:420px;position:absolute;background:#420;\">\n        </div>\n    </div>\n    without overflow-x:hidden\n    <div style=\"overflow-y:visible;width:100px;height:100px;position:relative;background:#666;\">\n        <div style=\"top:20px;left:20px; width:420px;height:420px;position:absolute;background:#420;\">\n        </div>\n    </div>\n   </body>\n   </html>\n</code>  http://jsfiddle.net/sMNyK/  The real life scenario involves components that absolutely must have overflow-x:hidden, but that will trigger popup-menus that need to be able to break free from the element in y-direction. Should I just position those menus outside their parent components, or is there a better fix? ",
        "link": "https://stackoverflow.com/questions/11520728/overflow-yvisible-not-working-when-overflow-xhidden-is-present",
        "score": 62,
        "tags": [
            "html",
            "css"
        ],
        "question_id": 11520728,
        "answer_count": 2,
        "view_count": 49105,
        "comment_count": 5,
        "comments": [
            {
                "body": "you getting problem because position:relative;"
            },
            {
                "body": "lol It's now almost 2020 and this is still an issue. I found a sort-of workaround by not setting a static height on the element, but it's not a great solution."
            }
        ],
        "answers": [
            {
                "score": 5,
                "body": "I think you can get what you want with an extra wrapping <code>div</code> that does the hiding but does not have the <code>position: relative</code> set ( see fiddle ):  <code><div style=\"overflow-y:visible;width:100px;height:100px;position:relative;background:#666;\">\n    <div style=\"overflow-x:hidden\">\n    ooooooooooooooooooooooooooooooooooooooooooooooo  \n        <div style=\"top:20px;left:20px; width:420px;height:420px;position:absolute;background:#420;\">\n        </div>\n    </div>\n</div>\n</code> "
            }
        ]
    },
    {
        "title": "Why don&#39;t UL bullets stay within their containing DIV?",
        "question_body": "I have a really simple set up:  <code><div class=\"container\">\n  <ul>\n    <li>Item one</li>\n    <li>Item two</li>\n  </ul>\n</div>\n</code>  I had assumed that all contents and the bullets of the UL would be within the div, but currently this is not the case.  The bullet points for the UL appear outside of the div and effectively disappear when overflow is hidden.  To me this is somewhat broken and cross browser compatible, and I've scanned the HTML spec but couldn't find anything saying this should happen.  Is there a CSS fix for it or other layout fix? ",
        "link": "https://stackoverflow.com/questions/1461015/why-dont-ul-bullets-stay-within-their-containing-div",
        "score": 57,
        "tags": [
            "html",
            "css",
            "html-lists"
        ],
        "question_id": 1461015,
        "answer_count": 7,
        "view_count": 53392,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 1,
                "body": "Are you floating your List items to the left or right? If so then the following will solve your problem.  <code><div class=\"container\">\n  <ul>\n    <li>Item one</li>\n    <li>Item two</li>\n  </ul>\n  <div style=\"clear:both;\"></div>\n</div>\n</code> "
            },
            {
                "score": 5,
                "body": "You usually lose the list decorations to the overflow of a div when your UL/OL and LI don't have enough padding, or you are floating elements or display: inline.  Try adding some padding/margins to your list items (LI element). "
            },
            {
                "score": 11,
                "body": "<code>list-style-position: inside</code> works great unless your bullet points will need multiple lines on small screens as your text will align with the bullet point rather than where the text begins.   Keeping the default <code>text-align: outside</code> , allowing for a small margin and aligning the text to the left to override any centered containers gets around the bullet point alignment problem.  <code>ul, ol {\n  margin-left: 0.75em;\n  text-align: left;\n}\n</code> "
            },
            {
                "score": 148,
                "body": "You'll want to use <code>list-style-position</code> :  <code>ul {\n   list-style-position: inside;\n}\n</code> "
            }
        ]
    },
    {
        "title": "Fixed Header, Footer, and Sidebars with scrolling content area in center",
        "question_body": "Starting with this Demo Template , I would like to create this layout:   But I have the following problems:   The two sidebars are not contained inside the scrollable content div.  The content div does not take a fixed size  The scrollable content does not present a scrollbar when it overflows  It is preferred if the browser's main scrollbar is used   Can someone help me to fix these issues? ",
        "link": "https://stackoverflow.com/questions/10056583/fixed-header-footer-and-sidebars-with-scrolling-content-area-in-center",
        "score": 46,
        "tags": [
            "html",
            "css"
        ],
        "question_id": 10056583,
        "answer_count": 2,
        "view_count": 88222,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 2,
                "body": "EDIT 1.Add <code>position</code> property as <code>absolute</code> for the div you wish to fix . 2.Keep the body <code>overflow</code> property <code>auto</code> .  Note: setting the z-index of the body to -1 will make the rest of body inaccessible. Reference : http://limpid.nl/lab/css/fixed/ "
            },
            {
                "score": 53,
                "body": "Using <code>display:grid</code>  This uses several new features of CSS that may or may not be supported in your browser of choice. These include Grid Layout , CSS Variables , and <code>position:sticky</code> . CSS Variables can be worked around with static values and Grid/ <code>position:sticky</code> can degrade gracefully with <code>@supports</code> .    <code>/* Remove unnecessary margins/padding */\r\nhtml, body { margin: 0; padding: 0 }\r\n.wrapper {\r\n  display: grid;\r\n  /* Header and footer span the entire width, sidebars and content are fixed, with empty space on sides */\r\n  grid-template-areas:\r\n    \"header header header header header\"\r\n    \"empty_left sidebar_1 content sidebar_2 empty_right\"\r\n    \"footer footer footer footer footer\";\r\n  /* Only expand middle section vertically (content and sidebars) */\r\n  grid-template-rows: 0fr 1fr 0fr;\r\n  /* 100% width, but static widths for content and sidebars */\r\n  grid-template-columns: 1fr 100px 400px 100px 1fr;\r\n  /* Force grid to be at least the height of the screen */\r\n  min-height: 100vh;\r\n}\r\n.header {\r\n  grid-area: header;\r\n  /* Stick header to top of grid */\r\n  position: sticky;\r\n  top: 0;\r\n  /* Ensure header appears on top of content/sidebars */\r\n  z-index: 1;\r\n  /* General appearance */\r\n  background-color: #FCFF34;\r\n  text-align: center;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  padding: 1rem;\r\n}\r\n/* Save header height to properly set `padding-top` and `margin-top` for sticky content */\r\n:root {\r\n  --header-height: calc(1rem * 1.5 + 1rem * 2);\r\n}\r\n.sidebar-1 {\r\n  grid-area: sidebar_1;\r\n}\r\n.sidebar-2 {\r\n  grid-area: sidebar_2;\r\n}\r\n.sidebar-1,\r\n.sidebar-2 {\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: sticky;\r\n  top: 0;\r\n  /* Styling to match reference */\r\n  background-color: #BC514F;\r\n}\r\n.content {\r\n  grid-area: content;\r\n  /* General appearance */\r\n  background-color: #99BB5E;\r\n}\r\n.footer {\r\n  grid-area: footer;\r\n  /* Stick footer to bottom of grid */\r\n  position: sticky;\r\n  bottom: 0;\r\n  /* General appearance */\r\n  background-color: #FCFF34;\r\n  text-align: center;\r\n  font-size: .8rem;\r\n  line-height: 1.5;\r\n  padding: .5rem;\r\n}\r\n/* Save footer height to properly set `bottom` and `min-height` for sticky content */\r\n:root {\r\n  --footer-height: calc(.8rem * 1.5 + .5rem * 2);\r\n}\r\n.sticky-spacer {\r\n  flex-grow: 1;\r\n}\r\n.sticky-content {\r\n  position: sticky;\r\n  bottom: var(--footer-height);\r\n  min-height: calc(100vh - var(--footer-height));\r\n  box-sizing: border-box;\r\n  --padding: 10px;\r\n  padding:\r\n    calc(var(--header-height) + var(--padding))\r\n    var(--padding)\r\n    var(--padding);\r\n  margin-top: calc(0px - var(--header-height));\r\n}</code>  <code><div class=\"wrapper\">\r\n<div class=\"header\">Header (Absolute)</div>\r\n<div class=\"sidebar-1\">\r\n  <div class=\"sticky-spacer\"></div>\r\n  <div class=\"sticky-content\">Sidebar 1 Absolute position, Fixed width</div>\r\n</div>\r\n<div class=\"content\">\r\n  <div class=\"sticky-spacer\"></div>\r\n  <div class=\"sticky-content\">\r\n    Scrollable content<br><br>\r\n    line 1<br><br>\r\n    line 2<br><br>\r\n    line 3<br><br>\r\n    line 4<br><br>\r\n    line 5<br><br>\r\n    line 6<br><br>\r\n    line 7<br><br>\r\n    line 8<br><br>\r\n    line 9<br><br>\r\n    line 10<br><br>\r\n    line 11<br><br>\r\n    line 12<br><br>\r\n    line 13<br><br>\r\n    line 14<br><br>\r\n    line 15<br><br>\r\n    line 16<br><br>\r\n    line 17<br><br>\r\n    line 18<br><br>\r\n    line 19<br><br>\r\n    line 20\r\n  </div>\r\n</div>\r\n<div class=\"sidebar-2\">\r\n  <div class=\"sticky-spacer\"></div>\r\n  <div class=\"sticky-content\">\r\n    Sidebar 2 Absolute position, Fixed width<br><br>\r\n  line 1<br><br>\r\n  line 2<br><br>\r\n  line 3<br><br>\r\n  line 4<br><br>\r\n  line 5<br><br>\r\n  line 6<br><br>\r\n  line 7<br><br>\r\n  line 8<br><br>\r\n  line 9<br><br>\r\n  line 10\r\n  </div>\r\n</div>\r\n<div class=\"footer\">Footer (Absolute)</div>\r\n</div></code>    Scrollbar in main content container  The content box (including the sidebars) can be set to any type of width (percent, pixel, etc). Only the scrollable content area will scroll (sidebars/footer/header will just overflow the box). I'd suggest adding some media queries to break out of the sidebars so content isn't hidden on smaller devices, or set a <code>min-height</code> on the content box and a <code>min-width</code> on the <code>body</code> .    <code>html, body {\r\n    height:100%;\r\n    margin:0;\r\n    padding:0;\r\n}\r\nheader{\r\n    width: 100%;\r\n    background: yellow;\r\n    position: fixed; \r\n    top: 0;\r\n    height: 60px !important;\r\n    opacity:.8;\r\n}\r\n.content {\r\n    position:relative;\r\n    height: 100%;\r\n    width:600px; /* Sizing - any length */\r\n    padding:60px 0 30px 0; /* Header height and footer height */\r\n    margin:0 auto 0 auto; /* Center content */\r\n    -moz-box-sizing:border-box;\r\n    -webkit-box-sizing:border-box;\r\n    -o-box-sizing:border-box;\r\n    -ms-box-sizing:border-box;\r\n    box-sizing:border-box;\r\n}\r\n.sidebar1, .sidebar2 {\r\n    background: red;\r\n    top:60px;\r\n    bottom:30px;\r\n    width: 100px;\r\n    position:absolute;\r\n    -moz-box-sizing:border-box;\r\n    -webkit-box-sizing:border-box;\r\n    -o-box-sizing:border-box;\r\n    -ms-box-sizing:border-box;\r\n    box-sizing:border-box;\r\n}\r\n.sidebar1 {\r\n    left:0;\r\n}\r\n.sidebar2 {\r\n    right: 0;\r\n}\r\n#scrollable2 {\r\n    background:green;\r\n    height: 100%;\r\n    min-width: 300px;\r\n    margin-left: 100px;\r\n    margin-right: 100px;\r\n    overflow:auto;\r\n    -moz-box-sizing:border-box;\r\n    -webkit-box-sizing:border-box;\r\n    -o-box-sizing:border-box;\r\n    -ms-box-sizing:border-box;\r\n    box-sizing:border-box;\r\n}\r\nfooter {\r\n    width: 100%;\r\n    background: yellow;\r\n    position: fixed; \r\n    bottom: 0;\r\n    height: 30px;\r\n}</code>  <code><!-- Always on top: Position Fixed-->\r\n<header>\r\n    header\r\n</header>\r\n<!-- Fixed size after header-->\r\n<div class=\"content\">\r\n    <!-- Always on top. Fixed position, fixed width, relative to content width-->\r\n    <div class=\"sidebar1\">\r\n        sidebar-left\r\n    </div>\r\n    <!-- Scrollable div with main content -->\r\n    <div id=\"scrollable2\">\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n    </div>\r\n    <!-- Always on top. Fixed position, fixed width, relative to content width -->\r\n    <div class=\"sidebar2\">\r\n        sidebar-right\r\n    </div>\r\n</div>\r\n<!-- Always at the end of the page -->\r\n<footer>\r\n    footer\r\n</footer></code>    Using the browser's main scrollbar  While using the browser's main scrollbar is possible, it also causes the sidebars to scroll with the page.    <code>html, body {\r\n    height:100%;\r\n    margin:0;\r\n    padding:0;\r\n}\r\nheader{\r\n    width: 100%;\r\n    background: yellow;\r\n    position: fixed; \r\n    top: 0;\r\n    height: 60px !important;\r\n    z-index:100;\r\n}\r\n.content {\r\n    position:relative;\r\n    min-height: 100%;\r\n    width:600px; /* Sizing - any length */\r\n    padding:60px 0 30px 0; /* Header height and footer height */\r\n    margin:0 auto 0 auto; /* Center content */\r\n}\r\n.sidebar1, .sidebar2 {\r\n    background: red;\r\n    height:100%;\r\n    width: 100px;\r\n    top:0;\r\n    padding-top:60px;\r\n    position:absolute;\r\n    -moz-box-sizing:border-box;\r\n    -webkit-box-sizing:border-box;\r\n    -o-box-sizing:border-box;\r\n    -ms-box-sizing:border-box;\r\n    box-sizing:border-box;\r\n}\r\n.sidebar1 {\r\n    left:0;\r\n}\r\n.sidebar2 {\r\n    right: 0;\r\n}\r\n#scrollable2 {\r\n    height:100%;\r\n    background:green;\r\n    min-width: 300px;\r\n    margin-left: 100px;\r\n    margin-right: 100px;\r\n    -moz-box-sizing:border-box;\r\n    -webkit-box-sizing:border-box;\r\n    -o-box-sizing:border-box;\r\n    -ms-box-sizing:border-box;\r\n    box-sizing:border-box;\r\n}\r\nfooter {\r\n    width: 100%;\r\n    background: yellow;\r\n    position: fixed; \r\n    bottom: 0;\r\n    height: 30px;\r\n}</code>  <code><!-- Always on top: Position Fixed-->\r\n<header>\r\n    header\r\n</header>\r\n<!-- Fixed size after header-->\r\n<div class=\"content\">\r\n    <!-- Always on top. Fixed position, fixed width, relative to content width-->\r\n    <div class=\"sidebar1\">\r\n        sidebar-left\r\n    </div>\r\n    <!-- Scrollable div with main content -->\r\n    <div id=\"scrollable2\">\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n        content-main<br>\r\n    </div>\r\n    <!-- Always on top. Fixed position, fixed width, relative to content width -->\r\n    <div class=\"sidebar2\">\r\n        sidebar-right\r\n    </div>\r\n</div>\r\n<!-- Always at the end of the page -->\r\n<footer>\r\n    footer\r\n</footer></code>   "
            }
        ]
    },
    {
        "title": "Overflow-x:hidden; on mobile device not working",
        "question_body": "I hope you guys can help me cause I cant seem to wrap my head arroud this. I build a one-page site which works fine, except for one thing, which is the overflow-x:hidden on the tablet viewport (and probably smartphone too, havent tested that yet)  Despite the body having <code>body {overflow-x:hidden;}</code> which works fine within normal browsers on the pc, i am able to move to the side for about 25 pixels or so, cause thats the overflow of my rotated div, that sticks out of the screen, which i wanted to hide.  Is there a way to fix this? I supplied below part of the head and html / css  The viewport meta tag.  <code><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n</code>  The CSS applied to the media queries and they respective elements that overflow  <code>@media only screen and (max-width: 992px){\n    #skills, #experience    {overflow-x:hidden;}\n}\n@media (max-width: 479px){\n    body                    {overflow-x:hidden;}\n}\n</code>  And the regular CSS applied to the html / body tags  <code>body, html  {height: 100%;width: 100%;font-family: 'Source Sans Pro',Helvetica,Arial,sans-serif;color: #757575; overflow-x:hidden;}\n</code>  The id's <code>#skills</code> and <code>#experience</code> have a class called <code>.hoek</code> which is defined as followed and causes the overflow.  <code>    .hoek    {margin: 0 -50px; \n              -webkit-transform-origin:left center; \n              -moz-transform-origin:left center; \n              -o-transform-origin:left center; \n              -ms-transform-origin:left center;\n              margin-top: -175px;                       \n              -webkit-transform:rotate(5deg); \n              -moz-transform:rotate(5deg); \n              -o-transform:rotate(5deg); \n              -ms-transform:rotate(5deg);\n              z-index: 20;\n    }\n</code>  I must point out, I think, that the <code>#skills</code> and <code>#experience</code> are <code>sections</code> and not divs. I am not sure if that might be a problem within the code, but I thought not. If there is anymore information that is needed, please let me know, but I thought I had covered the bases here.  I dont know where to begin with a fiddle, so I supply you just the test link of the site: http://www.jellyfishwebdesign.nl/Joost/index.php  ",
        "link": "https://stackoverflow.com/questions/24193272/overflow-xhidden-on-mobile-device-not-working",
        "score": 43,
        "tags": [
            "html",
            "css",
            "responsive-design"
        ],
        "question_id": 24193272,
        "answer_count": 13,
        "view_count": 91547,
        "comment_count": 2,
        "comments": [],
        "answers": [
            {
                "score": 1,
                "body": "If you are using tailwind css in next js and you are using a function to display or hide the sidemenu then it will works for you.  <code>const toggleCart = () => {\n    if (ref.current.classList.contains(\"hidden\")) {\n      ref.current.classList.remove(\"hidden\");\n      ref.current.classList.add(\"translate-x-0\");\n    } else if (!ref.current.classList.contains(\"hidden\")) {\n      ref.current.classList.add(\"hidden\");\n    }\n  };\n</code>  Set the sidebar or your div initially hidden and will works fine in your phone. Don't use translate-x-full. It will cause the overflow in mobile device in my case "
            },
            {
                "score": 4,
                "body": "This can be resolved without needing to include <code>minimum-scale=1</code> . While that property does prevent the user from zooming and scrolling out, it doesn't resolve the issue of the horizontal scrollbar still appearing, regardless of the fact that the user can't use it.  The way I resolved this issue was by having the following <code>viewport</code> .  <code><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</code>  Next, you need to make sure that your <code>html</code> and <code>body</code> elements have the following properties...  <code>html {\n  ...\n  overflow-x: hidden;\n}\nbody {\n  ...\n  position: relative;\n  overflow-x: hidden;\n}\n</code>  These properties should make it so that any type of horizontal overflow doesn't show, nor will the horizontal scrollbar be present. This also allows you to lock page-scroll in case of a modal or some other reason on both mobile and desktop by simply passing <code>overflow: hidden</code> to the <code>html</code> element. "
            },
            {
                "score": 9,
                "body": "Try setting <code>minimum-scale=1</code> instead of <code>maximum-scale=1</code> or <code>initial-scale=1</code> .  eg.  <code><meta name=\"viewport\" content=\"width=device-width, minimum-scale=1.0\"></code> "
            },
            {
                "score": 17,
                "body": "As pointed out by Dorvalla, <code>body</code> and <code>html</code> tags are ignored by smartphones browsers, although not by \"big screen\" browsers, I solved the issue by using the first child of the page structure, so no need of an aditional wrapper.  e.g. for my WordPress case:  <code>    .site {\n        overflow-x: hidden;\n        /* Unnecessary IMHO, uncomment next line to force hidden behavior */\n        /* overflow-x: hidden !important; */\n        /* Additional tunning proposed by the community */\n        position: relative;\n        width: 100%;\n    }\n</code> "
            }
        ]
    },
    {
        "title": "Why do my Twitter Bootstrap form fields overflow their well using fluid container?",
        "question_body": "UPDATE: Demo of problem here: http://jsfiddle.net/fdB5Q/embedded/result/  From about 767px to 998px, the form fields are wider than the containing well.  Smaller than 767px and the entire form area shifts to a new line. The page rendered when the browser window is about 200px wide displays perfectly. The form fields shrink as you would expect.  For a visual, look at this very similar question: Twitter Bootstrap CSS static-fluid form positioning  Here's everything in the Head:  <code><link rel=\"stylesheet\" href=\"http://twitter.github.com/bootstrap/assets/css/bootstrap.css\" />\n<link rel=\"stylesheet\" href=\"http://twitter.github.com/bootstrap/assets/css/bootstrap-responsive.css\" />\n<script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.7.0/jquery.min.js\"></script>\n</code>  Here's everything in the Body:  <code><div class=\"container-fluid\">\n<div class=\"row-fluid\">\n<div class=\"span8\">\n<p>Some Content.</p>\n</div>\n<div class=\"span4\">\n  <div class=\"well\">    \n    <div class=\"control-group\">\n      <label class=\"control-label\" for=\"name\">Your Name</label>\n      <div class=\"controls\">\n      <input type=\"text\" class=\"input-xlarge\" name=\"name\" id=\"name\" maxlength=\"100\" />\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n</div>\n</code>  I think I am misunderstanding some part of the framework. Should I not be using a fluid container? What am I doing wrong? I could throw together something to fix this, but I think the problem may be that I am doing something wrong big picture.  I tried changing my spans to 7 and 5 and still had the same error. I tried 6 and 6, but at that point the page started to look ridiculous. The rest of the answers didn't make sense to me.  I changed the input class to large instead of xlarge. It still had a width range where it overflowed, and I really would like wider form fields if there is room on the display.  I want to avoid the horizontal scroll bar, and I want the page text to be the same size in landscape or portait mode on my smartphone.  UPDATE: Pictures  My problem page:   Simplified version:   Simplified version at 200 px browser width:  ",
        "link": "https://stackoverflow.com/questions/11855086/why-do-my-twitter-bootstrap-form-fields-overflow-their-well-using-fluid-containe",
        "score": 42,
        "tags": [
            "html",
            "css",
            "twitter-bootstrap"
        ],
        "question_id": 11855086,
        "answer_count": 8,
        "view_count": 62273,
        "comment_count": 5,
        "comments": [],
        "answers": [
            {
                "score": 1,
                "body": "Just a bit of input after playing with these FOREVER (it seems). I use a simple width attribute and set it to between 85% and 95% depending on the container, padding and other css factors to keep the input fields from actually stretching to edge of the container.  <code>.input-example {\n   width: 90%; \n}\n</code>  I AM NOT AN EXPERT AT THIS! I am just offering what I have learned and please do not take this as advice from a seasoned developer. Trying to give a little back to a community that has saved my life on countless occasions. "
            },
            {
                "score": 1,
                "body": "The problem is more insidious than all this to get right, unfortunately. Using max-widths did nothing for me. And I hate things looking crappy, so I dug into it a little...  It comes down to these three lines in the css declaration of a form-control:  <code>width: 100%;\npadding: 6px 12px;\nborder: 1px solid #cccccc;\n</code>  When the width of an text-type input element is set, the horizontal padding and border are added to the 100% instead of taken from it. So, if the 100% width w were say, 500px, then the width of the text input form control becomes w+12+12+1+1, 526px. The extra 26px are a constant which means unless the width percentage is calculated dynamically either as 100%*(w/(w+26px)) or 100%-26px, things will never come out even.  I personally believe this is an error in either the definition or implementation of the html/css interface (I don't know which, I really don't want to try to find the references in the shifting sands of the standards.) If you say an input field is going to be 100% width, then the correction needs to be applied to make the width inside the margins be 100%, not 100% without the horizontal padding and border widths included.  And, by the way, percentage value or fixed size doesn't matter; they're also off by 26px. You need to filter out these 26px from the width.  All is not lost for bootstrap textual inputs though, at least if you're using a CSS compiler that allows client side calculations. In less, for instance  <code>input.form-control[type=text] {\n  width: calc(~'100%-26px');\n}\n</code>  will make it all better. Note that email and password types (at least) have the same problem too.  26px is kind of brittle, of course, but the constants are hardcoded into the form-control declaration, so your hands are kind of tied. A test would be nice that checked the sizes of controls on rendering to catch CSS declaration changes on bootstrap upgrades, but not tonight, thank you. "
            },
            {
                "score": 4,
                "body": "Usually I prefer to use another <code>class=\"row-fluid\"</code> and <code>class=\"span12\"</code> in elements with <code>class=\"spanX\"</code> to get 100% width of some element. That will not cause bugs on different resolutions. So, I've added another <code>row-fluid</code> class in your element with <code>span4</code> class, and inside that new <code>row-fluid</code> added div with <code>span12</code> . You must somethimes override default Bootstrap settings to get what you need, so I've added also class <code>.my-input</code> inside <code><input /></code> element to get 100% width and remove left and right padding (padding will cause bug on right side). And here is code:  <code><div class=\"container-fluid\">\n    <div class=\"row-fluid\">\n        <div class=\"span8\">\n            <p>Some Content.</p>\n        </div>\n        <div class=\"span4 well\">\n            <div class=\"row-fluid\">\n                <div class=\"span12\">\n                    <label class=\"control-label\" for=\"name\">Your Name</label>\n                    <input type=\"text\" class=\"my-input\" name=\"name\" id=\"name\" maxlength=\"100\" />\n                </div>\n             </div>\n        </div>\n  </div>\n</div>\n</code>  and CSS class for override  <code>​.my-input\n{\n    width: 100%;\n    padding: 4px 0 4px 0 !important;\n}​\n</code>  You can see and Jsfiddle demo , try to resize screen.  ​ "
            },
            {
                "score": 62,
                "body": "The input html tags and their corresponding <code>.input-*</code> styles only set the css <code>width</code> . This is by design.  But adding a css <code>max-width:100%</code> will ensure that too large inputs are kept under control.  e.g. add this to your Head:  <code><style>\n    input {\n        max-width: 100%;\n    } \n</style>\n</code> "
            }
        ]
    },
    {
        "title": "How to prevent a webkit-scrollbar from pushing over the contents of a div?",
        "question_body": "I'm using webkit-scrollbar and am running into styling issues as the webkit scrollbar is pushing the contents of a div to the left which causes the contents to overflow.  Notice   1st box uses the default browser scrollbar and does not overflow (good)  2nd box uses the webkit scrollbar which ends up breaking the layout. (bad/problem)   http://jsfiddle.net/ryeah/1/  Any ideas what I'm doing wrong with webkit scrollbar to cause the div to/overflow. How can we fix the 2nd box? Thanks  Webkit Scrollbar Code:  <code>.box2::-webkit-scrollbar {\n    height: 16px;\n    overflow: visible;\n    width: 16px;\n}\n.box2::-webkit-scrollbar-thumb {\n    background-color: rgba(0, 0, 0, .2);\n    background-clip: padding-box;\n    border: solid transparent;\n    border-width: 1px 1px 1px 6px;\n    min-height: 28px;\n    padding: 100px 0 0;\n    box-shadow: inset 1px 1px 0 rgba(0, 0, 0, .1),inset 0 -1px 0 rgba(0, 0, 0, .07);\n}\n.box2::-webkit-scrollbar-button {\n    height: 0;\n    width: 0;\n}\n.box2::-webkit-scrollbar-track {\n    background-clip: padding-box;\n    border: solid transparent;\n    border-width: 0 0 0 4px;\n}\n.box2::-webkit-scrollbar-corner {\n    background: transparent;\n}\n</code> ",
        "link": "https://stackoverflow.com/questions/13054797/how-to-prevent-a-webkit-scrollbar-from-pushing-over-the-contents-of-a-div",
        "score": 41,
        "tags": [
            "html",
            "css",
            "webkit"
        ],
        "question_id": 13054797,
        "answer_count": 4,
        "view_count": 50345,
        "comment_count": 1,
        "comments": [],
        "answers": [
            {
                "score": 1,
                "body": "There is a way to get the scroll bar to display outside the div.  Use a static width and have the div position as absolute. Works for me.  <code>#divID{\noverflow: hidden;\nwidth: calc(1024px + 0);\n}\n#divID:hover{\noverflow-y:scroll;\n}\n</code>  This fools the DOM. "
            },
            {
                "score": 4,
                "body": "Hm.. I can't think of a way to get the webkit scrollbar in overlay. One solution to stop the line breaking is to hide the scrollbar with  <code>.box2::-webkit-scrollbar {\n  height: 16px;\n  overflow: visible;\n  width: 16px;\n  display: none;\n}\n</code>  other you can set the width of your UL to the same as the box so it makes use of the overflow function and displays under the scrollbar  <code>.box ul {\n  width: 149px;\n}\n</code> "
            },
            {
                "score": 9,
                "body": "This is how I made it work on Chrome, and not break Firefox:  <code>overflow: scroll;\noverflow-x: hidden;\noverflow-y: overlay;\n</code>  I mean, the scroll bar is still taking <code>width</code> space on Firefox, but at least it's still showing and working.  By just doing <code>overflow-y: overlay;</code> , I was fixing Chrome and breaking my Firefox scroll. "
            }
        ]
    },
    {
        "title": "Aligning multiple div boxes horizontally and vertically",
        "question_body": "I'm using https://almsaeedstudio.com/preview theme which gives some brilliant boxes layout and social widget boxes layout which I want to use in my project.  Refer to simple box screenshot    and social widget box  .  I'm trying to arrange multiple simple boxes horizontally where each of the simple box can contain multiple social widget boxes.  Refer to this screenshot for more clarity:  .  I tried playing with the exiting simple boxes and social widget boxes code and come up with this snippet.  I have created this plunker, somehow css is not getting loaded properly.    <code><!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <link rel=\"stylesheet\" href=\"style.css\">\r\n    <script src=\"script.js\"></script>\r\n  </head>\r\n  <body>\r\n    <div class=\"row\">\r\n  <div class=\"col-md-12\">\r\n    <div style=\"overflow:auto;\">\r\n      <div class=\"\" style=\"width:2050px;\">\r\n        <div class=\"box\" style=\"display:inline-block;width:1000px;\">\r\n          <div class=\"box-header with-border\">\r\n            <h3 class=\"box-title\">Monthly Recap Report</h3>\r\n            <div class=\"box-tools pull-right\">\r\n              <button class=\"btn btn-box-tool\" data-widget=\"collapse\"><i class=\"fa fa-minus\"></i>\r\n              </button>\r\n              <div class=\"btn-group\">\r\n                <button class=\"btn btn-box-tool dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"fa fa-wrench\"></i>\r\n                </button>\r\n                <ul class=\"dropdown-menu\" role=\"menu\">\r\n                  <li><a href=\"#\">Action</a>\r\n                  </li>\r\n                  <li><a href=\"#\">Another action</a>\r\n                  </li>\r\n                  <li><a href=\"#\">Something else here</a>\r\n                  </li>\r\n                  <li class=\"divider\"></li>\r\n                  <li><a href=\"#\">Separated link</a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <button class=\"btn btn-box-tool\" data-widget=\"remove\"><i class=\"fa fa-times\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <!-- /.box-header -->\r\n          <div class=\"box-body\" style=\"display: block;\">\r\n            <div class=\"\">\r\n              <div class=\"box box-widget collapsed-box\">\r\n                <hr>\r\n                <div class=\"box-header with-border\">\r\n                  <div class=\"user-block\">\r\n                    <img src=\"../dist/img/photo2.png\" alt=\"Photo\" class=\"img-responsive pad\"><span class=\"username\"><a href=\"#\">Jonathan Burke Jr.</a></span><span class=\"description\">7:30 PM Today</span>\r\n                  </div>\r\n                  <!-- /.user-block-->\r\n                  <div class=\"box-tools\">\r\n                    <button data-widget=\"collapse\" class=\"btn btn-box-tool\"><i class=\"fa fa-plus\"></i>\r\n                    </button>\r\n                  </div>\r\n                  <!-- /.box-tools-->\r\n                </div>\r\n                <!-- /.box-header-->\r\n                <div class=\"box-body\" style=\"display: block;\">\r\n                  <p>I took this photo this morning. What do you guys think?</p>\r\n                  <button class=\"btn btn-default btn-xs\"><i class=\"fa fa-thumbs-o-up\"></i> Like</button><span class=\"pull-right text-muted\">127 likes - 3 comments</span>\r\n                </div>\r\n                <!-- /.box-body-->\r\n                <div class=\"box-footer box-comments\" style=\"display: block;\">\r\n                  <div class=\"box-comment\">\r\n                    <!-- User image-->\r\n                    <img src=\"../dist/img/photo2.png\" alt=\"Photo\" class=\"img-responsive pad\">\r\n                    <div class=\"comment-text\"><span class=\"username\">Maria Gonzales<span class=\"text-muted pull-right\">8:03 PM Today</span></span>\r\n                      <!-- /.username-->It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\r\n                    </div>\r\n                    <!-- /.comment-text-->\r\n                  </div>\r\n                  <!-- /.box-comment-->\r\n                  <div class=\"box-comment\">\r\n                    <!-- User image-->\r\n                    <img class=\"img-responsive img-circle img-sm\" src=\"../dist/img/user4-128x128.jpg\" alt=\"alt text\">\r\n                    <div class=\"comment-text\"><span class=\"username\">Luna Stark<span class=\"text-muted pull-right\">8:03 PM Today</span></span>\r\n                      <!-- /.username-->It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\r\n                    </div>\r\n                    <!-- /.comment-text-->\r\n                  </div>\r\n                  <!-- /.box-comment-->\r\n                </div>\r\n                <!-- /.box-footer-->\r\n                <div class=\"box-footer\" style=\"display: block;\">\r\n                  <form>\r\n                    <img class=\"img-responsive img-circle img-sm\" src=\"../dist/img/user4-128x128.jpg\" alt=\"alt text\">\r\n                    <div class=\"img-push\">\r\n                      <input type=\"text\" placeholder=\"Press enter to post comment\" class=\"form-control input-sm\">\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n                <!-- /.box-footer-->\r\n              </div>\r\n              <div class=\"box box-widget collapsed-box\">\r\n                <hr>\r\n                <div class=\"box-header with-border\">\r\n                  <div class=\"user-block\">\r\n                    <img src=\"../dist/img/photo2.png\" alt=\"Photo\" class=\"img-responsive pad\"><span class=\"username\"><a href=\"#\">Jonathan Burke Jr.</a></span><span class=\"description\">7:30 PM Today</span>\r\n                  </div>\r\n                  <!-- /.user-block-->\r\n                  <div class=\"box-tools\">\r\n                    <button data-widget=\"collapse\" class=\"btn btn-box-tool\"><i class=\"fa fa-plus\"></i>\r\n                    </button>\r\n                  </div>\r\n                  <!-- /.box-tools-->\r\n                </div>\r\n                <!-- /.box-header-->\r\n                <div class=\"box-body\" style=\"display: block;\">\r\n                  <p>I took this photo this morning. What do you guys think?</p>\r\n                  <button class=\"btn btn-default btn-xs\"><i class=\"fa fa-thumbs-o-up\"></i> Like</button><span class=\"pull-right text-muted\">127 likes - 3 comments</span>\r\n                </div>\r\n                <!-- /.box-body-->\r\n                <div class=\"box-footer box-comments\" style=\"display: block;\">\r\n                  <div class=\"box-comment\">\r\n                    <!-- User image-->\r\n                    <img src=\"../dist/img/photo2.png\" alt=\"Photo\" class=\"img-responsive pad\">\r\n                    <div class=\"comment-text\"><span class=\"username\">Maria Gonzales<span class=\"text-muted pull-right\">8:03 PM Today</span></span>\r\n                      <!-- /.username-->It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\r\n                    </div>\r\n                    <!-- /.comment-text-->\r\n                  </div>\r\n                  <!-- /.box-comment-->\r\n                  <div class=\"box-comment\">\r\n                    <!-- User image-->\r\n                    <img class=\"img-responsive img-circle img-sm\" src=\"../dist/img/user4-128x128.jpg\" alt=\"alt text\">\r\n                    <div class=\"comment-text\"><span class=\"username\">Luna Stark<span class=\"text-muted pull-right\">8:03 PM Today</span></span>\r\n                      <!-- /.username-->It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\r\n                    </div>\r\n                    <!-- /.comment-text-->\r\n                  </div>\r\n                  <!-- /.box-comment-->\r\n                </div>\r\n                <!-- /.box-footer-->\r\n                <div class=\"box-footer\" style=\"display: block;\">\r\n                  <form>\r\n                    <img src=\"../dist/img/photo2.png\" alt=\"Photo\" class=\"img-responsive pad\">\r\n                    <div class=\"img-push\">\r\n                      <input type=\"text\" placeholder=\"Press enter to post comment\" class=\"form-control input-sm\">\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n                <!-- /.box-footer-->\r\n              </div>\r\n            </div>\r\n            <!-- /.row -->\r\n          </div>\r\n          <!-- ./box-body -->\r\n          <div class=\"box-footer\" style=\"display: block;\">\r\n            <!-- /.row -->\r\n          </div>\r\n          <!-- /.box-footer -->\r\n        </div>\r\n        <!-- /.box -->\r\n        <div class=\"box\" style=\"display:inline-block;width:1000px;\">\r\n          <div class=\"box-header with-border\">\r\n            <h3 class=\"box-title\">Monthly Recap Report</h3>\r\n            <div class=\"box-tools pull-right\">\r\n              <button class=\"btn btn-box-tool\" data-widget=\"collapse\"><i class=\"fa fa-minus\"></i>\r\n              </button>\r\n              <div class=\"btn-group\">\r\n                <button class=\"btn btn-box-tool dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"fa fa-wrench\"></i>\r\n                </button>\r\n                <ul class=\"dropdown-menu\" role=\"menu\">\r\n                  <li><a href=\"#\">Action</a>\r\n                  </li>\r\n                  <li><a href=\"#\">Another action</a>\r\n                  </li>\r\n                  <li><a href=\"#\">Something else here</a>\r\n                  </li>\r\n                  <li class=\"divider\"></li>\r\n                  <li><a href=\"#\">Separated link</a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <button class=\"btn btn-box-tool\" data-widget=\"remove\"><i class=\"fa fa-times\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <!-- /.box-header -->\r\n          <div class=\"box-body\" style=\"display: block;\">\r\n            <div class=\"\">\r\n              <div class=\"box box-widget collapsed-box\">\r\n                <hr>\r\n                <div class=\"box-header with-border\">\r\n                  <div class=\"user-block\">\r\n                    <img src=\"../dist/img/photo2.png\" alt=\"Photo\" class=\"img-responsive pad\"><span class=\"username\"><a href=\"#\">Jonathan Burke Jr.</a></span><span class=\"description\">7:30 PM Today</span>\r\n                  </div>\r\n                  <!-- /.user-block-->\r\n                  <div class=\"box-tools\">\r\n                    <button data-widget=\"collapse\" class=\"btn btn-box-tool\"><i class=\"fa fa-plus\"></i>\r\n                    </button>\r\n                  </div>\r\n                  <!-- /.box-tools-->\r\n                </div>\r\n                <!-- /.box-header-->\r\n                <div class=\"box-body\" style=\"display: block;\">\r\n                  <p>I took this photo this morning. What do you guys think?</p>\r\n                  <button class=\"btn btn-default btn-xs\"><i class=\"fa fa-thumbs-o-up\"></i> Like</button><span class=\"pull-right text-muted\">127 likes - 3 comments</span>\r\n                </div>\r\n                <!-- /.box-body-->\r\n                <div class=\"box-footer box-comments\" style=\"display: block;\">\r\n                  <div class=\"box-comment\">\r\n                    <!-- User image-->\r\n                    <img class=\"img-responsive img-circle img-sm\" src=\"../dist/img/user4-128x128.jpg\" alt=\"alt text\">\r\n                    <div class=\"comment-text\"><span class=\"username\">Maria Gonzales<span class=\"text-muted pull-right\">8:03 PM Today</span></span>\r\n                      <!-- /.username-->It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\r\n                    </div>\r\n                    <!-- /.comment-text-->\r\n                  </div>\r\n                  <!-- /.box-comment-->\r\n                  <div class=\"box-comment\">\r\n                    <!-- User image-->\r\n                    <img src=\"../dist/img/user4-128x128.jpg\" alt=\"user image\" class=\"img-circle img-sm\">\r\n                    <div class=\"comment-text\"><span class=\"username\">Luna Stark<span class=\"text-muted pull-right\">8:03 PM Today</span></span>\r\n                      <!-- /.username-->It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\r\n                    </div>\r\n                    <!-- /.comment-text-->\r\n                  </div>\r\n                  <!-- /.box-comment-->\r\n                </div>\r\n                <!-- /.box-footer-->\r\n                <div class=\"box-footer\" style=\"display: block;\">\r\n                  <form>\r\n                    <img class=\"img-responsive img-circle img-sm\" src=\"../dist/img/user4-128x128.jpg\" alt=\"alt text\">\r\n                    <div class=\"img-push\">\r\n                      <input type=\"text\" placeholder=\"Press enter to post comment\" class=\"form-control input-sm\">\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n                <!-- /.box-footer-->\r\n              </div>\r\n              <div class=\"box box-widget collapsed-box\">\r\n                <hr>\r\n                <div class=\"box-header with-border\">\r\n                  <div class=\"user-block\">\r\n                    <img src=\"../dist/img/photo2.png\" alt=\"Photo\" class=\"img-responsive pad\"><span class=\"username\"><a href=\"#\">Jonathan Burke Jr.</a></span><span class=\"description\">7:30 PM Today</span>\r\n                  </div>\r\n                  <!-- /.user-block-->\r\n                  <div class=\"box-tools\">\r\n                    <button data-widget=\"collapse\" class=\"btn btn-box-tool\"><i class=\"fa fa-plus\"></i>\r\n                    </button>\r\n                  </div>\r\n                  <!-- /.box-tools-->\r\n                </div>\r\n                <!-- /.box-header-->\r\n                <div class=\"box-body\" style=\"display: block;\">\r\n                  <p>I took this photo this morning. What do you guys think?</p>\r\n                  <button class=\"btn btn-default btn-xs\"><i class=\"fa fa-thumbs-o-up\"></i> Like</button><span class=\"pull-right text-muted\">127 likes - 3 comments</span>\r\n                </div>\r\n                <!-- /.box-body-->\r\n                <div class=\"box-footer box-comments\" style=\"display: block;\">\r\n                  <div class=\"box-comment\">\r\n                    <!-- User image-->\r\n                    <img src=\"../dist/img/photo2.png\" alt=\"Photo\" class=\"img-responsive pad\">\r\n                    <div class=\"comment-text\"><span class=\"username\">Maria Gonzales<span class=\"text-muted pull-right\">8:03 PM Today</span></span>\r\n                      <!-- /.username-->It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\r\n                    </div>\r\n                    <!-- /.comment-text-->\r\n                  </div>\r\n                  <!-- /.box-comment-->\r\n                  <div class=\"box-comment\">\r\n                    <!-- User image-->\r\n                    <img src=\"../dist/img/user4-128x128.jpg\" alt=\"user image\" class=\"img-circle img-sm\">\r\n                    <div class=\"comment-text\"><span class=\"username\">Luna Stark<span class=\"text-muted pull-right\">8:03 PM Today</span></span>\r\n                      <!-- /.username-->It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\r\n                    </div>\r\n                    <!-- /.comment-text-->\r\n                  </div>\r\n                  <!-- /.box-comment-->\r\n                </div>\r\n                <!-- /.box-footer-->\r\n                <div class=\"box-footer\" style=\"display: block;\">\r\n                  <form>\r\n                    <img src=\"../dist/img/photo2.png\" alt=\"Photo\" class=\"img-responsive pad\">\r\n                    <div class=\"img-push\">\r\n                      <input type=\"text\" placeholder=\"Press enter to post comment\" class=\"form-control input-sm\">\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n                <!-- /.box-footer-->\r\n              </div>\r\n            </div>\r\n            <!-- /.row -->\r\n          </div>\r\n          <!-- ./box-body -->\r\n          <div class=\"box-footer\" style=\"display: block;\">\r\n            <!-- /.row -->\r\n          </div>\r\n          <!-- /.box-footer -->\r\n        </div>\r\n      </div>\r\n      <!-- /.col -->\r\n    </div>\r\n  </div>\r\n</div>\r\n  </body>\r\n</html></code>    http://plnkr.co/edit/slpJLIRVGfMSC8JWG1bT?p=preview  But its not working. Can anyone please help me how to accomplish this ?  P.S.: I have searched on internet and found similar threads but none is working for me. Horizontally align div without float  I'm still a beginner in CSS and would really appreciate if I can get some help here. I'm breaking my head on this for a long time.  Update  I think it makes sense to clearly write out the actual issues and try to solve them one by one.   Horizontal boxes are not aligned on the same row if the inner social widget box is collapsed/expanded. How can I ensure the height of the horizontal box is fixed irrespective of the inner social widget box height ? Refer to screenshot for same.  There are some answers which mention the use of <code>display: float:left;</code> but my issue is the variable width which actually ensures all horizontal boxes on the same row.    <code>  <div class=\"\" style=\"width:2050px;\">\n</code>   How do I ensure the <code>width:2050px;</code> to increase dynamically as I will be adding inner boxes on fly. P.S.: I'm using angularjs for ui. Is there any CSS trick which is independent of the <code>width:2050px;</code> That way there will be no dependency on the total width calculation.   How to fix the height of inner social widget box ? The inner social widget box overflows the actual horizontol container. how can I fix this ?  Sharing an image of what actually I'm trying to accomplish. .   In short I want to accomplish point 4 with this theme's existing boxes and social widget boxes. If there is any other better way of doing this, please share the same.  In case anything is not clear, please feel free to mention it in comment. I'll update the question accordingly.  Thanks  Update 2:  I think same height columns is what making this problem more complicated. What I can do is having a scroll bar inside horizontol box which can have multiple social widgets boxes. That way we can have a fixed height for each of the horizontol column.  Update 3:  While zer00ne@ has provided one solution which is based on Flex. I have read on some forums that it doesn;t work on all browsers. Since my web-page is going to be mobile friendly, I;m more inclined towards achieving my desired results using general CSS techniques.  In path of achieving my result, I created following version http://plnkr.co/edit/awVmJWJo0AdrQvdbXG2y?p=preview using this SO thread . Following is screenshot of same:   Now I'm facing one issue of text getting out of inner social widget box. I need some help on this thing.  In addition to that, can people take a review of these if this solution is any better or not ?  Thanks ",
        "link": "https://stackoverflow.com/questions/32414345/aligning-multiple-div-boxes-horizontally-and-vertically",
        "score": 32,
        "tags": [
            "javascript",
            "jquery",
            "html",
            "css",
            "twitter-bootstrap"
        ],
        "question_id": 32414345,
        "answer_count": 5,
        "view_count": 6290,
        "comment_count": 19,
        "comments": [
            {
                "body": "The snippet is not working. It is hard to guess what you are trying to do. are you struggling with float ?"
            },
            {
                "body": "No, its not just I'm struggling with float but with a bigger problem...You can simply plugin the entire snippet in the original html page...I'm working on a plunker also..that way I think people can understand the problem better"
            },
            {
                "body": "I ask you: Can you use a CSS framework? With Foundation Equalizer (makes all boxes that you want to be equal in height) and <code>vertical-align: top</code> in the <code>display:inline-block</code> elements you solve the issue."
            },
            {
                "body": "Foundation Equalizer helps you to solve the height problem. The alignment will be solved if you write <code>vertical-align:top</code> in the parent boxes."
            },
            {
                "body": "<code>vertical-align:top</code> solves the alignment issue but height problem is still there. Looking into Foundation Equalizer but are you sure there is no way it can be done through bootstrap ?"
            },
            {
                "body": "you didn't provide a css file with your snippet, so it's hard to say what is in it. what i can see in your snippet is that you mix stylesheet with inline-css. example: <div class=\"box\" style=\"display:inline-block;width:1000px;\">. that is bad coding style"
            },
            {
                "body": "@dark_shadow you asked me: <code>Looking into Foundation Equalizer but are you sure there is no way it can be done through bootstrap ?</code> And the answer is YES: getbootstrap.com.vn/examples/equal-height-columns"
            },
            {
                "body": "@dark_shadow Mobile? In my developing this solution, I have already found a way to stack all columns on top of each other. That is your simple solution to using mobile, scrollbars are automatically included. You need to pay a web developer. With all of your on the fly requests and changes. In the beginning I warned you about fixed heights (which my answer doesn't have). You should test what I have with the proper equipment and/or emulators, give me proof that flexbox doesn't work. I have given evidence to the contrary."
            }
        ],
        "answers": [
            {
                "score": 1,
                "body": "You can use <code>display: flex</code> , read more: https://css-tricks.com/snippets/css/a-guide-to-flexbox/ P.S. But you need use prefixes for old browsers "
            },
            {
                "score": 9,
                "body": ">>>>>>>>>>>>>>>>>>>>FLEXBOX SOLUTION<<<<<<<<<<<<<<<<<<<<  Here is the REAL SOLUTION to the ORIGINAL QUESTION if anyone is actually interested.  dark_shadow:   While zer00ne@ has provided one solution which is based on Flex.   Problem resolved see my demos below, it speaks for itself. I have no idea why starikovs is getting upvotes at all when there is clearly no solution provided.  I had to recreate the page because the extra classless <code><div></code> s you placed inside the markup was confusing. The significant change was adding flexbox to the layout. I used two flexbox containers, one that controlled the two columns <code>.flexRow</code> and another inside of each column to control the widgetboxes, <code>.flexCol</code> . Those classless <code><div></code> s are combined into a <code><section class=\"colWrap\"</code> I added intrinsic measurements so that your layout isn't stuck at a fixed width of 2050px, you'll still need to adjust both <code>.box</code> to an intrinsic measurement, 1000px fixed is going to give grief in the future. The changes will be annotated when I get back. Unless of course this isn't what you wanted?  LAST to the LAST UPDATE  >>>>>>>>>>PLUNKER<<<<<<<<<<  EDIT  Just add a fixed height to <code>.colWrap</code> , suggest <code>100vh</code> to <code>150vh</code>  I checked out the height of both columns and they are in fact identical down to the decimal. See the screenshots:  Column 1  Column 2   OLD  You just need everything aligned, correct? Ok, look here please: http://embed.plnkr.co/MRI69qLoTkiL9F68g54M/preview  I added this to the <code><head></code>  <code><!DOCTYPE html>\n<html>\n  <head>\n    <base href=\"https://almsaeedstudio.com/themes/AdminLTE/\">\n    <link href=\"https://almsaeedstudio.com/themes/AdminLTE/bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n    <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\" rel=\"stylesheet\"/>\n    <link href=\"https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css\" rel=\"stylesheet\"/>\n</code>  UPDATE  Added the script as well. It's located before the closing <code></body></code> tag.  <code><script src=\"plugins/jQuery/jQuery-2.1.4.min.js\"></script>\n<!-- Bootstrap 3.3.5 -->\n<script src=\"bootstrap/js/bootstrap.min.js\"></script>\n<!-- FastClick -->\n<script src=\"plugins/fastclick/fastclick.min.js\"></script>\n<!-- AdminLTE App -->\n<script src=\"dist/js/app.min.js\"></script>\n<!-- Sparkline -->\n<script src=\"plugins/sparkline/jquery.sparkline.min.js\"></script>\n<!-- jvectormap -->\n<script src=\"plugins/jvectormap/jquery-jvectormap-1.2.2.min.js\"></script>\n<script src=\"plugins/jvectormap/jquery-jvectormap-world-mill-en.js\"></script>\n<!-- SlimScroll 1.3.0 -->\n<script src=\"plugins/slimScroll/jquery.slimscroll.min.js\"></script>\n<!-- ChartJS 1.0.1 -->\n<script src=\"plugins/chartjs/Chart.min.js\"></script>\n<!-- AdminLTE dashboard demo (This is only for demo purposes) -->\n<script src=\"dist/js/pages/dashboard2.js\"></script>\n<!-- AdminLTE for demo purposes -->\n<script src=\"dist/js/demo.js\"></script>\n</code>  You probably don't need all of them, but the essential ones are:   bootstrap.min.css  font-awesome.min.css  jQuery-2.1.4.min.js  bootstrap.min.js  app.min.js  jquery.slimscroll.min.js   There's a lot of relative URLs (ex. ../dist/img/photo2.png), so I added the following to the top of the <code><head></code> :  <code><base href=\"https://almsaeedstudio.com/themes/AdminLTE/\"></code>  The majority of these external files are located at that base url. If the download package didn't properly provide adequate assets, I always go to the source of the site's demo . Frequently the developer(s) neglect the differences between the dist and the demo.  UPDATE  As I understand the problem is that the layout needs to be properly aligned with widgetboxes or in the absence of widgetboxes. I don't think using <code>display:none</code> on widgetboxes is the way this template was designed. Consider the following annotated excerpts from the file, <code>app.min.js</code>   Excerpts from the AdminLTE script, <code>app.min.js</code>  Notes at the bottom.  <code>/*! AdminLTE app.js\n * ================\n * Main JS application file for AdminLTE v2. This file\n * should be included in all pages. It controls some layout\n * options and implements exclusive AdminLTE plugins.ᵃ\n *\n/*...*/†\n $.AdminLTE.boxWidget = {\n    selectors: $.AdminLTE.options.boxWidgetOptions.boxWidgetSelectors,\n    icons: $.AdminLTE.options.boxWidgetOptions.boxWidgetIcons,\n    animationSpeed: $.AdminLTE.options.animationSpeed,\n    activate: function (a) {\n      var b = this;\n      a || (a = document), $(a).on(\"click\", b.selectors.collapse,\n        function (a) {\n          a.preventDefault(), b.collapse($(this))\n        }), $(a).on(\"click\", b.selectors.remove, function (a) {\n        a.preventDefault(), b.remove($(this))\n      })\n    },\n   ᵇcollapse: function (a) {\n      var b = this,\n        c = a.parents(\".box\").first(),\n        d = c.find(\n          \"> .box-body, > .box-footer, > form  >.box-body, > form > .box-footer\"\n        );\n      c.hasClass(\"collapsed-box\") ? (a.children(\":first\").removeClass(\n        b.icons.open).addClass(b.icons.collapse), d.slideDown(\n        b.animationSpeed,\n        function () {\n          c.removeClass(\"collapsed-box\")\n        })) : (a.children(\":first\").removeClass(b.icons.collapse)\n        .addClass(b.icons.open), d.slideUp(b.animationSpeed,\n          function () {\n            c.addClass(\"collapsed-box\")\n          }))\n    },\n   ᶜ remove: function (a) {\n      var b = a.parents(\".box\").first();\n      b.slideUp(this.animationSpeed)\n    }\n  }\n}\nif(\"undefined\" == typeof jQuery) throw new Error(\n  \"AdminLTE requires jQuery\");\n/*...*/†\n ᵈ function (a) {\n    \"use strict\";\n    a.fn.boxRefresh = function (b) {\n      function c(a) {\n        a.append(f), e.onLoadStart.call(a)\n      }\n      function d(a) {\n        a.find(f).remove(), e.onLoadDone.call(a)\n      }\n      var e = a.extend({\n          trigger: \".refresh-btn\",\n          source: \"\",\n          onLoadStart: function (a) {\n            return a\n          },\n          onLoadDone: function (a) {\n            return a\n          }\n        }, b),\n        f = a(\n          '<div class=\"overlay\"><div class=\"fa fa-refresh fa-spin\"></div></div>'\n        );\n      return this.each(function () {\n        if(\"\" === e.source) return void(window.console &&\n          window.console.log(\n            \"Please specify a source first - boxRefresh()\")\n        );\n        var b = a(this),\n          f = b.find(e.trigger).first();\n        f.on(\"click\", function (a) {\n          a.preventDefault(), c(b), b.find(\".box-body\").load(\n            e.source,\n            function () {\n              d(b)\n            })\n        })\n      })\n    }\n  }(jQuery),\n  function (a) {\n    \"use strict\";\n    a.fn.activateBox = function () {\n      a.AdminLTE.boxWidget.activate(this)\n    }\n  }(jQuery)  function (a) {\n    \"use strict\";\n    a.fn.boxRefresh = function (b) {\n      function c(a) {\n        a.append(f), e.onLoadStart.call(a)\n      }\n      function d(a) {\n        a.find(f).remove(), e.onLoadDone.call(a)\n      }\n      var e = a.extend({\n          trigger: \".refresh-btn\",\n          source: \"\",\n          onLoadStart: function (a) {\n            return a\n          },\n          onLoadDone: function (a) {\n            return a\n          }\n        }, b),\n        f = a(\n          '<div class=\"overlay\"><div class=\"fa fa-refresh fa-spin\"></div></div>'\n        );\n      return this.each(function () {\n        if(\"\" === e.source) return void(window.console &&\n          window.console.log(\n            \"Please specify a source first - boxRefresh()\")\n        );\n        var b = a(this),\n          f = b.find(e.trigger).first();\n        f.on(\"click\", function (a) {\n          a.preventDefault(), c(b), b.find(\".box-body\").load(\n            e.source,\n            function () {\n              d(b)\n            })\n        })\n      })\n    }\n  }(jQuery),\n  function (a) {\n    \"use strict\";\n    a.fn.activateBox = function () {\n      a.AdminLTE.boxWidget.activate(this)\n    }\n  }(jQuery)\n</code>  † This code is skipped over  ᵃ The developer implies that this app is not a complete solution but a complete solution is available to buy.  ᵇ The boxwidgets collapse and height should adjust accordingly.  ᶜ The boxwidgets can be removed and height should be adjusted accordingly.  ᵈ The function <code>boxRefresh()</code> is a public method I believe. It could be used after an addition or subtraction of a widget I suppose.  I'm not the best at interpreting third party plugins, so any extra observations and/or corrections are welcome.  LAST UPDATE  I got it so when any section is collapsed, they will slide up rather than down. As for the 2 main columns, they behave as they should and if the first column is actually removed, then the second column will take the first column's place. "
            },
            {
                "score": 9,
                "body": " The new way of aligning is to use flexbox . Here's a simple example to show the power:   HTML:  <code><div class=\"wrapper\">\n    <div></div>\n    <div></div>\n    <div></div>\n</div>\n</code>  CSS:  <code>.wrapper {\n    display: flex;\n}\n</code>  Now your divs inside <code>.wrapper</code> are aligned in a row.   BTW, you can use Autoprefixer to get the right browser prefixes.  Flexbox is supported by all the major browsers: http://caniuse.com/#search=flexbox (with prefixes)   With flexbox you can align items as you want simply, aligning them vertically in the center, horizontally in the center, etc. "
            }
        ]
    },
    {
        "title": "HTML table with fixed (frozen) columns and headers",
        "question_body": "I've been searching over the web for the way to make a table with fixed (frozen) columns and header. Seems like I finally found the solution and modified it to my needs.  There original fiddle is here .  Here is my modified solution. I tested it in Chrome (version: 55.0.2883.87 m) and Firefox (version: 51.0.1).  The problem is that it works not completely in IE (version: 11.0.9600.18427). During the horizontal scrolling a frozen part of the header is getting scrolled too. Could someone help me to make it working in IE? And one more question: is the approach safe to use? I mean if it's using some unspecified behavior, then some of the future browsers or even some of the modern browsers might display my table in a wrong way, and it's better to use a safe solution with a few different tables and synchronizing scroll position and rows height. UPD: one more question: how to make this work stable on the mobile devices?  Here is some code that demonstrates the approach:    <code>$(document).ready(function() {\r\n  $('tbody').scroll(function(e) { //detect a scroll event on the tbody\r\n  \t/*\r\n    Setting the thead left value to the negative valule of tbody.scrollLeft will make it track the movement\r\n    of the tbody element. Setting an elements left value to that of the tbody.scrollLeft left makes it maintain \t\t\tit's relative position at the left of the table.    \r\n    */\r\n    $('thead').css(\"left\", -$(\"tbody\").scrollLeft()); //fix the thead relative to the body scrolling\r\n    $('thead th:nth-child(1)').css(\"left\", $(\"tbody\").scrollLeft()); //fix the first cell of the header\r\n    $('tbody td:nth-child(1)').css(\"left\", $(\"tbody\").scrollLeft()); //fix the first column of tdbody\r\n  });\r\n});</code>  <code>.container {\r\n  height:200px; \r\n  width:400px;\r\n  overflow: hidden;\r\n}\r\ntable {\r\n  position: relative;\r\n  background-color: #aaa;\r\n  border-collapse: collapse;\r\ntable-layout: fixed;\r\ndisplay: flex;\r\nflex-direction: column;\r\nheight: 100%;\r\nwidth: 100%;\r\n}\r\n/*thead*/\r\nthead {\r\n  position: relative;\r\n  display: block; /*seperates the header from the body allowing it to be positioned*/\r\n}\r\nthead th {\r\n  background-color: #99a;\r\n  min-width: 120px;\r\n  border: 1px solid #222;\r\n}\r\nthead th:nth-child(1) {/*first cell in the header*/\r\n  position: relative;\r\n  background-color: #88b;\r\n}\r\n/*tbody*/\r\ntbody {\r\n  flex: 1;\r\n  position: relative;\r\n  display: block; /*seperates the tbody from the header*/\r\n  overflow: auto;\r\n}\r\ntbody td {\r\n  background-color: #bbc;\r\n  min-width: 120px;\r\n  border: 1px solid #222;\r\n}\r\ntbody tr td:nth-child(1) {  /*the first cell in each tr*/\r\n  position: relative;\r\n  background-color: #99a;\r\n}</code>  <code><script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"></script>\r\n<body>\r\n<div class=\"container\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Name<br/>123</th>\r\n        <th>Town</th>\r\n        <th>County</th>\r\n        <th>Age</th>\r\n        <th>Profession</th>\r\n        <th>Anual Income</th>\r\n        <th>Matital Status</th>\r\n        <th>Children</th>\r\n      </tr>\r\n       <tr>\r\n        <th>Name</th>\r\n        <th>Town</th>\r\n        <th>County</th>\r\n        <th>Age<br/>123<br/>321</th>\r\n        <th>Profession</th>\r\n        <th>Anual Income</th>\r\n        <th>Matital Status</th>\r\n        <th>Children</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td>John Smith</td>\r\n        <td>Macelsfield</td>\r\n        <td>Cheshire<br/>123</td>\r\n        <td>52</td>\r\n        <td>Brewer</td>\r\n        <td>£47,000</td>\r\n        <td>Married</td>\r\n        <td>2</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Jenny Jones<br/>123<br/>312</td>\r\n        <td>Threlkeld</td>\r\n        <td>Cumbria</td>\r\n        <td>34</td>\r\n        <td>Shepherdess</td>\r\n        <td>£28,000</td>\r\n        <td>Single</td>\r\n        <td>0</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Peter Frampton</td>\r\n        <td>Avebury</td>\r\n        <td>Wiltshire</td>\r\n        <td>57</td>\r\n        <td>Musician</td>\r\n        <td>£124,000</td>\r\n        <td>Married</td>\r\n        <td>4</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Simon King</td>\r\n        <td>Malvern</td>\r\n        <td>Worchestershire</td>\r\n        <td>48</td>\r\n        <td>Naturalist</td>\r\n        <td>£65,000</td>\r\n        <td>Married</td>\r\n        <td>2</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Lucy Diamond</td>\r\n        <td>St Albans</td>\r\n        <td>Hertfordshire</td>\r\n        <td>67</td>\r\n        <td>Pharmasist</td>\r\n        <td>Retired</td>\r\n        <td>Married</td>\r\n        <td>3</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Austin Stevenson</td>\r\n        <td>Edinburgh</td>\r\n        <td>Lothian </td>\r\n        <td>36</td>\r\n        <td>Vigilante</td>\r\n        <td>£86,000</td>\r\n        <td>Single</td>\r\n        <td>Unknown</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Wilma Rubble</td>\r\n        <td>Bedford</td>\r\n        <td>Bedfordshire</td>\r\n        <td>43</td>\r\n        <td>Housewife</td>\r\n        <td>N/A</td>\r\n        <td>Married</td>\r\n        <td>1</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Kat Dibble</td>\r\n        <td>Manhattan</td>\r\n        <td>New York</td>\r\n        <td>55</td>\r\n        <td>Policewoman</td>\r\n        <td>$36,000</td>\r\n        <td>Single</td>\r\n        <td>1</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Henry Bolingbroke</td>\r\n        <td>Bolingbroke</td>\r\n        <td>Lincolnshire</td>\r\n        <td>45</td>\r\n        <td>Landowner</td>\r\n        <td>Lots</td>\r\n        <td>Married</td>\r\n        <td>6</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Alan Brisingamen</td>\r\n        <td>Alderley</td>\r\n        <td>Cheshire</td>\r\n        <td>352</td>\r\n        <td>Arcanist</td>\r\n        <td>A pile of gems</td>\r\n        <td>Single</td>\r\n        <td>0</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n</body></code>   ",
        "link": "https://stackoverflow.com/questions/42004958/html-table-with-fixed-frozen-columns-and-headers",
        "score": 32,
        "tags": [
            "javascript",
            "html",
            "css"
        ],
        "question_id": 42004958,
        "answer_count": 4,
        "view_count": 16192,
        "comment_count": 4,
        "comments": [
            {
                "body": "try this thead th:nth-child(1) {/*first cell in the header*/ position: relative; background-color: #88b; display: block; }"
            },
            {
                "body": "@Singh87, it helps for the cell the stay on the place during scrolling, but the cells loses the ability to automatically adjust it's height."
            }
        ],
        "answers": [
            {
                "score": 1,
                "body": "The problem is that IE does not allow one to adjust the <code>left</code> attribute of a cell in a row independent from the row as a whole. We can see this by editing the DOM directly using the developer window in IE and the developer window in Chrome.  In Chrome, when you scroll left and right, you can see in the Element viewer that the <code>left</code> attribute is changed on the element itself, which overrides all CSS. We can reload the page and set the element attribute manually in this same screen: <code>style:'left:300px'</code> , and we will see the header cell move to the right 300px and hover over the remaining header cells. This is good behavior and the behavior that makes this method work.  If we do the same thing in IE and add <code>style: 'left:300px'</code> to the th element, we will see that the cell does not move. Nothing we do to the style attributes of that cell will cause it to leave its place in the table. It is this 'feature' of IE that is causing the method to fail. IE is insisting on maintaining cell order no matter what attributes are applied to the elements within a row.  The trick is to work around this complication in a way that makes all browsers happy. There are many ways to do this, but I would probably use two tables, and use DIVs to position them so that the edges match. I would add javascript so that if one tbody scrolls up or down that it affects the other tbody in the same manner. If it scrolls right or left, nothing happens to the first table, which holds your frozen column headers, and the right table moves in the scroll direction as planned.  By using two tables, IE no longer associates the header that you are trying to freeze with the header that is moving. Careful CSS will disguise your hack and make the table appear as one table.  Good luck and happy coding! "
            },
            {
                "score": 7,
                "body": "Generally for frozen rows & columns, I always prefer to use a css-only solution for best browser-compatibility.  I have tried to replicate your code here with a css-only solution.  I am working on a mac, so don't have access to IE. Please verify if its working fine on the same.  Updated fiddle: https://jsfiddle.net/nashcheez/bzuasLcz/81/  Refer code:    <code>table {\r\n  position: relative;\r\n  width: 700px;\r\n  background-color: #aaa;\r\n  overflow: hidden;\r\n  border-collapse: collapse;\r\n}\r\n/*thead*/\r\nthead {\r\n  position: relative;\r\n  display: block;\r\n  /*seperates the header from the body allowing it to be positioned*/\r\n  width: 700px;\r\n  overflow: visible;\r\n}\r\nthead th {\r\n  background-color: #99a;\r\n  min-width: 120px;\r\n  height: 36px;\r\n  min-height: 36px;\r\n  border: 1px solid #222;\r\n}\r\nthead th:nth-child(1) {\r\n  /*first cell in the header*/\r\n  position: relative;\r\n  display: block;\r\n  background-color: #88b;\r\n}\r\ntbody tr td:nth-child(2) {\r\n  margin-left: 124px;\r\n  display: block;\r\n}\r\n/*tbody*/\r\ntbody {\r\n  display: block;\r\n  width: 700px;\r\n  height: 239px;\r\n  overflow-y: auto;\r\n}\r\ntbody td {\r\n  background-color: #bbc;\r\n  min-width: 120px;\r\n  border: 1px solid #222;\r\n  height: 36px;\r\n  min-height: 36px;\r\n}\r\ntbody tr td:nth-child(1) {\r\n  /*the first cell in each tr*/\r\n  position: absolute;\r\n  display: inline-block;\r\n  background-color: #99a;\r\n}</code>  <code><body>\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Town</th>\r\n        <th>County</th>\r\n        <th>Age</th>\r\n        <th>Profession</th>\r\n        <th>Anual Income</th>\r\n        <th>Matital Status</th>\r\n        <th>Children</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td>John Smith</td>\r\n        <td>Macelsfield</td>\r\n        <td>Cheshire</td>\r\n        <td>52</td>\r\n        <td>Brewer</td>\r\n        <td>£47,000</td>\r\n        <td>Married</td>\r\n        <td>2</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Jenny Jones</td>\r\n        <td>Threlkeld</td>\r\n        <td>Cumbria</td>\r\n        <td>34</td>\r\n        <td>Shepherdess</td>\r\n        <td>£28,000</td>\r\n        <td>Single</td>\r\n        <td>0</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Peter Frampton</td>\r\n        <td>Avebury</td>\r\n        <td>Wiltshire</td>\r\n        <td>57</td>\r\n        <td>Musician</td>\r\n        <td>£124,000</td>\r\n        <td>Married</td>\r\n        <td>4</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Simon King</td>\r\n        <td>Malvern</td>\r\n        <td>Worchestershire</td>\r\n        <td>48</td>\r\n        <td>Naturalist</td>\r\n        <td>£65,000</td>\r\n        <td>Married</td>\r\n        <td>2</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Lucy Diamond</td>\r\n        <td>St Albans</td>\r\n        <td>Hertfordshire</td>\r\n        <td>67</td>\r\n        <td>Pharmasist</td>\r\n        <td>Retired</td>\r\n        <td>Married</td>\r\n        <td>3</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Austin Stevenson</td>\r\n        <td>Edinburgh</td>\r\n        <td>Lothian</td>\r\n        <td>36</td>\r\n        <td>Vigilante</td>\r\n        <td>£86,000</td>\r\n        <td>Single</td>\r\n        <td>Unknown</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Wilma Rubble</td>\r\n        <td>Bedford</td>\r\n        <td>Bedfordshire</td>\r\n        <td>43</td>\r\n        <td>Housewife</td>\r\n        <td>N/A</td>\r\n        <td>Married</td>\r\n        <td>1</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Kat Dibble</td>\r\n        <td>Manhattan</td>\r\n        <td>New York</td>\r\n        <td>55</td>\r\n        <td>Policewoman</td>\r\n        <td>$36,000</td>\r\n        <td>Single</td>\r\n        <td>1</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Henry Bolingbroke</td>\r\n        <td>Bolingbroke</td>\r\n        <td>Lincolnshire</td>\r\n        <td>45</td>\r\n        <td>Landowner</td>\r\n        <td>Lots</td>\r\n        <td>Married</td>\r\n        <td>6</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Alan Brisingamen</td>\r\n        <td>Alderley</td>\r\n        <td>Cheshire</td>\r\n        <td>352</td>\r\n        <td>Arcanist</td>\r\n        <td>A pile of gems</td>\r\n        <td>Single</td>\r\n        <td>0</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</body></code>   "
            },
            {
                "score": 8,
                "body": "This is very peculiar. It appears that the problematic code is this line:  <code>$('thead').css(\"left\", -$(\"tbody\").scrollLeft()); //fix the thead relative to the body scrolling\n</code>  It looks like IE11 handles relative positioning of nested elements differently (than Chrome and other browsers). In this case, you are positioning <code>thead</code> with relative positioning with an offset. You are also positioning <code>thead th</code> (it's children) with an offset and relative positioning. Chrome appears to be positioning <code>thead</code> relative to <code>table</code> , and then positioning <code>th</code> relative to <code>thead</code> . IE11, on the other hand, appears to be positioning <code>thead</code> relative to <code>table</code> , and then <code>th</code> just inherits that same positioning regardless of its own positioning.  A fix for this would be the following: on IE11, handle the positioning differently for <code>thead</code> . Instead of setting the positioning on the parent <code>thead</code> , set the positioning on the <code>thead th</code> elements. In that way, your first column will not be 'forced' to inherit <code>thead</code> 's positioning (in IE).  <code>$(document).ready(function() {\n  var isIE11 = !!navigator.userAgent.match(/Trident.*rv\\:11\\./);\n  var customScroller;\n  if (isIE11)\n    customScroller = function() {\n      $('thead th').css(\"left\", -$(\"tbody\").scrollLeft()); //if using IE11, fix the th element \n    };\n  else\n    customScroller = function() {\n      $('thead').css(\"left\", -$(\"tbody\").scrollLeft()); //if not using IE11, fix the thead element\n    };\n  $('tbody').scroll(function(e) { //detect a scroll event on the tbody\n    /*\n    Setting the thead left value to the negative valule of tbody.scrollLeft will make it track the movement\n    of the tbody element. Setting an elements left value to that of the tbody.scrollLeft left makes it maintain             it's relative position at the left of the table.    \n    */\n    customScroller(); //fix the thead relative to the body scrolling\n    $('thead th:nth-child(1)').css(\"left\", $(\"tbody\").scrollLeft());\n//fix the first cell of the header\n    $('tbody td:nth-child(1)').css(\"left\", $(\"tbody\").scrollLeft()); //fix the first column of tdbody\n  });\n});\n</code>  Here is a full example with your code, showing different handlings based on the browser:  https://jsfiddle.net/8tx4xfhx/5/  Alsol, it would be nice to see if anyone has noticed this behavior before. It appears that IE11 handles nested relative positioning differently than other browsers. Is there a spec somewhere that defines what the standard should be? Should relative positioning be inherited like IE does it? Or should relative positioning always be relative to the parent? I would think the latter. But performance considerations must also be taken. "
            },
            {
                "score": 8,
                "body": "You should try below code sample with reference of jquery.floatThead.js.  <code>                    var $demoTable = $(\"div.table-responsive table\");\n                    $demoTable.floatThead({\n                        top: 200,\n                        scrollContainer: function ($table) {                                \n                            return $table.closest('.table-responsive');\n                        },\n                        position: 'absolute'\n                    });\n</code>  you need to get the reference of jquery.floatThead.js file and try to apply this on table.  You can check this working on below link. http://mkoryak.github.io/floatThead/ "
            }
        ]
    },
    {
        "title": "CSS &quot;overflow&quot; culls &quot;background-color&quot;",
        "question_body": "I'm trying to style blocks of code for a website. The container div is set to overflow both vertically and horizontally. The problem is when it overflows horizontally, the zebra-striped background-color is culled. I tried it with a background image as well but it culls that too. Why is it doing that and how do I fix it?  Thanks.  Image: http://zero.robotrenegade.com/q3w/background-overflow.png  Webpage (scale your browser width down to see the problem): http://zero.robotrenegade.com/q3w/code.html  <code><!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"created\" content=\"\">\n    <meta name=\"description\" content=\"\">\n    <meta name=\"keywords\" content=\"\">\n    <link rel=\"stylesheet\" href=\"\" type=\"text/css\" media=\"all\" title=\"Default styles\" />\n    <title></title>\n    <!--[if IE]><script src=\"http://html5shim.googlecode.com/svn/trunk/html5.js\"></script><![endif]-->\n    <script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js\"></script>\n    <script type=\"text/javascript\">\n        $(document).ready(function(){\n            jQuery(\"pre code\").html(function(index, html) {\n                    return html.replace(/^(.*)$/mg, \"<span class=\\\"line\\\">$1</span>\")\n            });\n        });\n    </script>\n<style>\n.codeblock {\n    max-height: 25em;\n    overflow: auto;\n    margin: 1em;\n    border: 1px solid #ccc;\n    font-size: 1em;\n    line-height: normal;\n    border-radius: 8px;\n    box-shadow: 0px 0px 4px rgba(0,0,0,0.25);\n}\n.codeblock h1, .codeblock p {\n    font-size: 1em;\n    margin: 0;\n    padding: 0em 1em 0.5em 3.5em;\n    line-height: 2em;\n    background-color: #eee;\n}\n.codeblock pre {\n    margin: 0;\n    padding: 0;\n    font-face: 'lucida console',monaco,courier,'courier new',monospace;\n}\n.codeblock pre code {\n    counter-reset: line-numbering;\n    margin: 0;\n    padding: 0;\n}\n.codeblock pre code .line::before {\n    content: counter(line-numbering);\n    counter-increment: line-numbering;\n    padding-right: 0.5em;\n    width: 4.5em;\n    text-align: right;\n    color: #888;\n    border-right: 1px dotted #888;\n    display: inline-block;\n    background-color: #eee;\n}\n.codeblock pre code .line {\n    display: block;\n    margin: 0 0 -1.2em 0;\n    line-height: 1.5em;\n}\n.codeblock pre code .line:nth-child(odd) {\n    background: #f2f5f9;\n}\n/*.codeblock pre code .line:hover {\n    background: #4b95e5;\n    color: #fff;\n}*/\n</style>\n</head>\n<body>\n<div class=\"codeblock\"><!--<h1>Hello, this is an optional header.</h1>-->\n<pre><code>void idAF::Restore( idRestoreGame *savefile ) {\n    savefile->ReadObject( reinterpret_cast<idClass *&>( self ) );\n    savefile->ReadString( name );\n    savefile->ReadBool( hasBindConstraints );\n    savefile->ReadVec3( baseOrigin );\n    savefile->ReadMat3( baseAxis );\n    savefile->ReadInt( poseTime );\n    savefile->ReadInt( restStartTime );\n    savefile->ReadBool( isLoaded );\n    savefile->ReadBool( isActive );\n    animator = NULL;\n    modifiedAnim = 0;\n    if ( self ) {\n        SetAnimator( self->GetAnimator() );\n        Load( self, name );\n        if ( hasBindConstraints ) {\n            AddBindConstraints();\n        }\n    }\n    savefile->ReadStaticObject( physicsObj );\n    if ( self ) {\n        if ( isActive ) {\n            // clear all animations\n            animator->ClearAllAnims( gameLocal.time, 0 );\n            animator->ClearAllJoints();\n            // switch to articulated figure physics\n            self->RestorePhysics( &physicsObj );\n            physicsObj.EnableClip();\n        }\n        UpdateAnimation();\n    }\n}</code></pre>\n<!-- <p>This is an optional footer, goodbye!</p> -->\n</div>\n</body>\n</html>\n</code> ",
        "link": "https://stackoverflow.com/questions/8513099/css-overflow-culls-background-color",
        "score": 29,
        "tags": [
            "html",
            "css",
            "background",
            "overflow"
        ],
        "question_id": 8513099,
        "answer_count": 5,
        "view_count": 13481,
        "comment_count": 3,
        "comments": [],
        "answers": [
            {
                "score": 1,
                "body": "Try:  <code>.codeblock pre, .codeblock pre code {\n  display: inline-block;\n}\n</code>  This worked for me in Safari. "
            },
            {
                "score": 2,
                "body": "Lines are expanding like every block element to the maximum width - and that is without overflow. And they are not connected - if one is bigger, it does not affect others.  Try changing them to something else than block element, like that:  <code>.codeblock pre code .line {\n    display: table-row;\n}\n</code>  Table-related types change width or height (cells) together  http://jsfiddle.net/D7rND/ "
            },
            {
                "score": 8,
                "body": "Try <code>float:left</code> on the <code>.codeblock pre</code> . Works in Firefox.  <code><pre></code> fits itself inside the <code>.codeblock</code> container like there was no more room. <code>float</code> makes your <code><pre></code> element wide just enough to fit its content.  UPDATE  <code>.codeblock pre {\n    float: left;\n    min-width: 100%;}\n</code>  Works in Firefox, Opera, IE9 and WebKit  As far as I understand, it elements inside a container with <code>overflow:auto</code> fit themselves inside the area that's visible by default. Those elements' <code>width:100%</code> is only as wide as the outer container. In this example inside of the inner container you have a <code>code</code> tag that doesn't break lines so the text goes outside the inner container and makes the outer container show scrolls. To avoid that, you need the inner container to fit its content hence <code>float:left</code> .  But, as you cleverly noticed (and I didn't), this way it won't expand if the outer container is wider than the code so to avoid that you need to put <code>min-width:100%</code> to make the inner container use at least all the visible space inside the outer container. "
            }
        ]
    },
    {
        "title": "Why is style *{display:*} included in the HTML body?",
        "question_body": "When I add such CSS into <code><style></code> tags:  <code>* {\n    display:block;\n}\n</code>  It is never interpreted correctly. Instead, what do I see? Somehow everything inside <code><style></code> becomes the part of html body. E.g.:    <code>* {\r\n    display:block;\r\n}</code>  <code><p>paragraph</p>\r\n<phrase>phrase</phrase>\r\n<pet>pet</pet></code>    This happens anywhere. For the first time, I thought this is the problem with StackSnippets. (i.e. the live demo for Stack Overflow, the one I've provided above), but then I checked with code pen. Then with jsfiddle. Then I've gone ahead and made a file on my server, giving it all contents I inserted in the snippet above.  The outcome is always the same. The CSS gets included in the html, though it is applied. (the only fix is to create a stylesheet and include it using <code><link></code> )  The most interesting thing, is, that it seem to happen only with <code>display:*</code> . E.g., the following works:    <code>* {\r\n    color:green;\r\n    background:red;\r\n    border:2px solid orange;\r\n    border-radius:5px;\r\n}</code>  <code><p>paragraph</p>\r\n<phrase>phrase</phrase>\r\n<pet>pet</pet></code>    But once I put in the styles of the last snippet <code>display:*</code> , the styles are, again, magically included in HTML.    <code>* {\r\n    color:green;\r\n    background:red;\r\n    border:2px solid orange;\r\n    border-radius:5px;\r\n    display:inline-block;\r\n}</code>  <code><p>paragraph</p>\r\n<phrase>phrase</phrase>\r\n<pet>pet</pet></code>    Why does it happen? ",
        "link": "https://stackoverflow.com/questions/31324387/why-is-style-display-included-in-the-html-body",
        "score": 29,
        "tags": [
            "html",
            "css"
        ],
        "question_id": 31324387,
        "answer_count": 1,
        "view_count": 8858,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 43,
                "body": "It's styling the <code><head></code> element and everything in it, including the very <code><style></code> element your CSS resides in, because the CSS appears as character data within the <code><style></code> element. A <code><link></code> element on the other hand doesn't have any content — it points to a separate resource altogether, so there is nothing inside the element itself to be displayed.  Most browsers implement <code><head></code> as <code>display: none</code> (and some propagate that value to every descendant), which you are able to override by targeting them with a <code>display</code> style. The rest of the properties are still applied to <code><head></code> and its descendants regardless of whether you do this, but without it, they simply won't show up in your page so you don't really see it happening. That's really all there is to it — there isn't anything else that's special about <code><head></code> or its related elements.  In other words, as far as CSS is concerned, the following (yes, a <code><style></code> element with a <code>style</code> attribute...):    <code><style style=\"display: block; font-family: monospace\">\r\np { color: red; }\r\n</style></code>    Is no different from this:    <code><code style=\"display: block; font-family: monospace\">\r\np { color: red; }\r\n</code></code>   "
            }
        ]
    },
    {
        "title": "height:100% not working in Internet Explorer",
        "question_body": "I have a question about the CSS property <code>height:100%</code> in Internet Explorer.  <code>height:100%</code> does not work in IE, but it does in Firefox and Chrome.  HTML File :  <code><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n<html style=\"height:100%;\">\n<head>\n    <meta charset=\"utf-8\" />\n    <link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\" />\n</head>\n<body>\n    <div id=\"menu_neu\">\n        <ul id=\"topNav\">\n            <li class=\"current\"><a href=\"#section-1\">SECTION 1</b></a>\n            </li>\n            <li><a href=\"#section-2\">SECTION 2 </b></a>\n            </li>\n        </ul>\n    </div>\n    <div id=\"wrapper\">\n        <!--SECTION- 1 .....................................................................................................................................-->\n        <div class=\"section\" id=\"section-1\">SECTION - 1\n            <div style=\"height:100%;\" id=\"intro\">\n                <div class=\"story\">\n                    <div class=\"bg1\"></div>\n                    <div class=\"bg2\"></div>\n                    <div class=\"bg3\"></div>\n                    <div class=\"float-left\" style=\"margin-top:120px; width:500px;\">\n                         <h2>HEIGHT 100% works in Chrome and Firefox,<br> <b>but not in IE!</b></h2>\n                        <div id=\"s1Pfeil1\" style=\"padding-top:120px;padding-left:255px;\"> <a href=\"#second\" title=\"Next Section\"><img src=\"images/icon_down_normal.png\" alt=\"Next\" /></a>\n                        </div>\n                        <!--/box-links-->\n                    </div>\n                    <!--/float-left-->\n                </div>\n                <!--./story-->\n            </div>\n            <!--/intro-->\n            <div style=\"height:100%;\" id=\"second\">\n                <div class=\"story\">\n                    <div class=\"bg1_2\"></div>\n                    <div class=\"bg2_2\"></div>\n                    <div class=\"bg3_2\"></div>\n                    <div class=\"float-right\" style=\"margin-top:45px; width:500px;\">\n                            <h2>HEIGHT 100% works in Chrome and Firefox,<br> <b>but not in IE!</b></h2>\n                        <div id=\"s1Pfeil2\" style=\"padding-top:200px;padding-left:225px;\">   <a href=\"#intro\" title=\"Before Section\"><img src=\"images/icon_up_normal.png\" alt=\"Next\" /></a>  </a>  <a href=\"#third\" title=\"Next Section\"><img src=\"images/icon_down_normal.png\" alt=\"Next\" /></a></a>  </a>\n                        </div>\n                        <!--/box-links1-->\n                    </div>\n                    <!--/float-right-->\n                </div>\n                <!--./story-->\n            </div>\n            <!--#second-->\n            <div id=\"third\" style=\"height:100%;\">\n                <div class=\"story\">\n                    <div class=\"bg1_3\"></div>\n                    <div class=\"bg2_3\"></div>\n                    <div class=\"bg3_3\"></div>\n                    <div class=\"float-left\" style=\"margin-top:80px; width:500px;\">\n                            <h2>HEIGHT 100% works in Chrome and Firefox,<br> <b>but not in IE!</b></h2>\n                        <div id=\"s1Pfeil3\" style=\"padding-top:200px;padding-left:225px;\">   <a href=\"#second\" title=\"Next Section\"><img src=\"images/icon_up_normal.png\" alt=\"Next\" /></a>\n                        </div>\n                        <!--/box-links2-->\n                    </div>\n                    <!--/float-left-->\n                </div>\n                <!--.story-->\n            </div>\n            <!--#third-->\n        </div>\n        <!--/section1-->\n        <!--SECTION- 2 BRANDSTIFTER..................................................................................................................................-->\n        <div class=\"section\" id=\"section-2\">SECTION -2\n            <div id=\"intro_bs\">\n                <div class=\"story_bs\">\n                    <div class=\"bg1_bs\"></div>\n                    <div class=\"bg2_bs\"></div>\n                    <div class=\"bg3_bs\"></div>\n                    <div class=\"float-left_bs\" style=\"margin-top:50px; width:600px;\">\n                            <h2>HEIGHT 100% works in Chrome and Firefox,<br> <b>but not in IE!</b></h2>\n                        <div id=\"s2Pfeil1\" style=\"padding-top:-50px;padding-left:305px;\"> <a href=\"#second_bs\" title=\"Next Section\"><img src=\"images/icon_down_normal.png\" alt=\"Next\" /></a>\n                        </div>\n                        <!--/box-links-->\n                    </div>\n                    <!--/float-left_bs-->\n                </div>\n                <!--.story-->\n            </div>\n            <!--#intro-->\n            <div id=\"second_bs\">\n                <div class=\"story_bsc\">\n                    <div class=\"bg1_2_bs\"></div>\n                    <div class=\"bg2_2_bs\"></div>\n                    <div class=\"bg3_2_bs\"></div>\n                    <div class=\"float-right_bs\" style=\"margin-top:120px; width:500px;\">\n                            <h2>HEIGHT 100% works in Chrome and Firefox,<br> <b>but not in IE!</b></h2>\n                        <div id=\"s2Pfeil2\" style=\"padding-top:80px;padding-left:305px;\"><a href=\"#intro_bs\" title=\"Next Section\"><img src=\"images/icon_up_normal.png\" alt=\"Next\" /></a>  <a href=\"#third_bs\" title=\"Next Section\"><img src=\"images/icon_down_normal.png\" alt=\"Next\" /></a>\n                        </div>\n                    </div>\n                </div>\n                <!--.story-->\n            </div>\n            <!--#second-->\n            <div id=\"third_bs\">\n                <div class=\"story_bsc\">\n                    <div class=\"bg1_3_bs\"></div>\n                    <div class=\"bg2_3_bs\"></div>\n                    <div class=\"bg3_3_bs\"></div>\n                    <div class=\"float-right_bs\" style=\"margin-top:120px; width:500px;\">\n                            <h2>HEIGHT 100% works in Chrome and Firefox,<br> <b>but not in IE!</b></h2>\n                        <div id=\"s2Pfeil3\" style=\"padding-top:100px;padding-left:225px;\">   <a href=\"#second_bs\" title=\"Next Section\"><img src=\"images/icon_up_normal.png\" alt=\"Next\" /></a>\n                        </div>\n                    </div>\n                </div>\n                <!--.story-->\n            </div>\n            <!--#third-->\n        </div>\n        <!--/section-2-->\n    </div>\n    <!--/wrapper-->\n    <div class=\"suche\">\n        <form class=\"search\" action=\"\" method=\"post\">\n            <label for=\"search-box\">Search:</label>\n            <input id=\"search-box\" type=\"text\" name=\"search\" onclick=\"search_bigger();\" onblur=\"search_smaller();\">\n        </form> <a href=\"http://www.facebook.com/BrandortMarketingKommunikationsGmbh\" title=\"Werde Fan von Brandort. auf Facebook\" alt=\"Werde Fan von Brandort. auf Facebook\" target=\"_blank\"><div class=\"herz\"></div></a><a href=\"images/icon_quicklinks_phone_hover_big.png\" rel=\"lightbox\" title=\"So erreichen Sie uns\" alt=\"So erreichen Sie uns\"><div class=\"telefon\"></div></a>\n    </div>\n    <div class=\"css-panes\">\n        <div style=\"display: block;\"></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n</body>\n</code>   CSS File :  <code>html{\n    height:100%;\n}\nbody{\n    font-family: 'universal_light';\n    margin: 0;\n    min-width: 980px;\n    padding: 0;\n    line-height:2em;\n    background-color: #f6aa27;\n    height: 100%;\n}\np{\n    margin: 0 0 20px 0; \n}\np, ul{\n    font-family:'universal_light';\n    font-weight:normal;\n    font-size:16px;\n}\nimg{\n    border: 0;\n}\nh1, #pixels{\n    font-family:\"Museo 900\", Verdana, serif;\n    font-size-adjust:0.40;\n    font-weight:700;\n    font-style:normal;\n}\nh2{\n    font-family: 'universal_black';\n    color:#000000;\n    font-size:30px;\n    font-weight:normal;\n}\n#wrapper{\n    height: 100%;\n}\n#header h1, #pixels{\n    color: #48941A;\n}\n#nav{\n    list-style: none;\n    position: fixed;\n    right: 20px;\n}\n#nav li{\n    margin: 0 0 15px 0; \n}\n#nav_bs{\n    list-style: none;\n    position: fixed;\n    right: 20px;\n}\n#nav_bs li{\n    margin: 0 0 15px 0; \n}\n#nav_bsa{\n    list-style: none;\n    position: fixed;\n    right: 20px;\n}\n#nav_bsa li{\n    margin: 0 0 15px 0; \n}\n#header, #intro, #second{\n    width: 100%;\n}\n/*hier wurde \"fix\" nach der \"no-repeat\" gelöscht*/\n#intro{\n    background-color:#f6aa27;\n    margin: 0 auto;\n    padding: 0;\n    height: 1200px;\n    width:100%;\n    border-style:solid;\n    border-width:5px;\n}\n/*hier wurde \"fix\" nach der \"no-repeat\" gelöscht*/\n#intro .bg1{\n    width: 900px;\n    position: absolute;\n    height: 900px;\n    margin: 0 auto;\n    padding: 0;\n    margin-top: -26px;\n    margin-left: 66px;\n}\n/*hier wurde \"fix\" nach der \"no-repeat\" gelöscht*/\n#intro .bg2{\n    width: 900px;\n    position: absolute;\n    height: 900px;\n    margin: 0 auto;\n    padding: 0;\n}\n#intro .bg3{\n    background: url(images/kohle.png) 50% 0 no-repeat fixed;\n    width: 1000px;\n    position: absolute;\n    height: 900px;\n    margin: 0 auto;\n    padding: 0;\n}\n#second{\n    background:url(images/bg1.jpg) 50% 0 no-repeat;\n    background-color:#f6aa27;\n    color: #D3D3D3;\n    height: 100%;\n    min-height: 100%;\n    margin: 0 auto;\n    padding: 0;\n    overflow: hidden;\n    border-style:solid;\n    border-width:5px;\n}\n#section-2{\nbackground-color:#D3D3D3;\n}\n#second .bg1_2{\n    background:url(images/second/feurig.png) 50% 0 no-repeat;\n    width: 900px;\n    position: absolute;\n    height: 900px;\n    margin: 0 auto;\n    padding: 0;\n    margin-left: 143px;\n    margin-top: -10px;\n}\n#second .bg2_2{\n    background:url(images/second/handschrift.png) 50% 0 no-repeat;\n    width: 900px;\n    position: absolute;\n    height: 900px;\n    margin: 0 auto;\n    padding: 0;\n}\n#second .bg3_2{\n    background:url(images/second/brandeisen.png) 50% 0 no-repeat fixed;\n    width: 900px;\n    position: absolute;\n    height: 100%;\n    margin: 0 auto;\n    padding: 0;\n}\n#third{\n    background:url(images/bg1.jpg) 50% 0 no-repeat;\n    background-color:#f6aa27;\n    color: #000000;\n    height: 100%;\n    min-height: 100%;\n    margin: 0 auto;\n    padding: 0;\n    overflow: hidden;\n        border-style:solid;\n    border-width:5px;\n}\n#third .bg1_3{\n    background:url(images/third/handschrift.png) 50% 0 no-repeat;\n    width: 900px;\n    position: absolute;\n    height: 900px;\n    margin: 0 auto;\n    padding: 0;\n}\n#third .bg2_3{\n    background:url(images/third/feurig.png) 50% 0 no-repeat;\n    width: 900px;\n    position: absolute;\n    height: 900px;\n    margin: 0 auto;\n    padding: 0;\n}\n#third .bg3_3{\n    background:url(images/third/seil.png) 50% 0 no-repeat fixed;\n    width: 900px;\n    position: absolute;\n    height: 900px;\n    margin: 0 auto;\n    padding: 0;\n}\n#fifth{\n    background: #ccc;\n    height: 400px;\n    margin: 0 auto;\n    padding: 40px 0 0 0;\n}\n#header, #intro_bs, #second_bs{\n    width: 100%;\n}\n#intro_bs{\n    background:url(images/bg2.jpg) 50% 0 no-repeat;\n    background-color:#c9cacc;\n    color: #000000;\n    height: 900px;\n    margin: 0 auto;\n    padding: 0;\n        border-style:solid;\n    border-width:5px;\n}\n#intro_bs .bg1_bs{\n    background:url(images/intro_bs/mitarbeiter.png) 50% 0 no-repeat;\n    width: 900px;\n    position: absolute;\n    height: 900px;\n    margin: 0 auto;\n    padding: 0;\n}\n#intro_bs .bg2_bs{\n    background:url(images/intro_bs/feurig.png) 50% 0 no-repeat;\n    width: 900px;\n    position: absolute;\n    height: 900px;\n    margin: 0 auto;\n    padding: 0;\n}\n#intro_bs .bg3_bs{\n    background:url(images/intro_bs/handschrift.png) 50% 0 no-repeat;\n    width: 900px;\n    position: absolute;\n    height: 900px;\n    margin: 0 auto;\n    padding: 0;\n}\n#second_bs{\n    background:url(images/bg2.jpg) 50% 0 no-repeat;\n    background-color:#c9cacc;\n    color: #000000;\n    height: 950px;\n    margin: 0 auto;\n    padding: 0;\n    overflow: hidden;\n        border-style:solid;\n    border-width:5px;\n}\n#second_bs .bg1_2_bs{\n    background:url(images/second_bs/feurig.png) 50% 0 no-repeat;\n    width: 900px;\n    position: absolute;\n    height: 900px;\n    margin: 0 auto;\n    padding: 0;\n}\n#second_bs .bg2_2_bs{\n    background:url(images/second_bs/handschrift.png) 50% 0 no-repeat;\n    width: 900px;\n    position: absolute;\n    height: 900px;\n    margin: 0 auto;\n    padding: 0;\n}\n#second_bs .bg3_2_bs{\n    background:url(images/second_bs/steffen.png) 50% 0 no-repeat;\n    width: 900px;\n    position: absolute;\n    height: 950px;\n    margin: 0 auto;\n    padding: 0;\n    margin-left: -121px;\n}\n#third_bs{\n    background:url(images/bg2.jpg) 50% 0 no-repeat;\n    background-color:#c9cacc;\n    color: #000000;\n    height: 950px;\n    margin: 0 auto;\n    padding: 0;\n    overflow: hidden;\n        border-style:solid;\n    border-width:5px;\n}\n#third_bs .bg1_3_bs{\n    background:url(images/third_bs/feurig.png) 50% 0 no-repeat;\n    width: 900px;\n    position: absolute;\n    height: 900px;\n    margin: 0 auto;\n    padding: 0;\n}\n#third_bs .bg2_3_bs{\n    background:url(images/third_bs/handschrift.png) 50% 0 no-repeat;\n    width: 900px;\n    position: absolute;\n    height: 900px;\n    margin: 0 auto;\n    padding: 0;\n}\n#third_bs .bg3_3_bs{\n    background:url(images/third_bs/mike.png) 50% 0 no-repeat;\n    width: 900px;\n    position: absolute;\n    height: 950px;\n    margin: 0 auto;\n    padding: 0;\n    margin-left: -121px;\n    margin-top: -287px;\n}\n.story{\n    margin: 0 auto;\n    min-width: 980px;\n    overflow: auto;\n    width: 980px;\n}\n.story .float-left, .story .float-right{\n    padding: 100px 0 0 0;\n    position: relative;\n    width: 350px;   \n}\n.linkp1 a {\n    background:url('images/brandort_norm.gif') 0 0 no-repeat fixed;\n    /*height: 12px;\n    width: 95px;*/\n    display: block;\n    z-index:11111;\n}\n.linkp1 a:hover {\n    background:url('images/brandort_hover.gif') 0 0 no-repeat fixed;\n}\n.linkp2 a {\n    background:url('images/brandstifter_norm.gif') no-repeat fixed;\n    /*height: 12px;\n    width: 95px;*/\n    display: block;\n    z-index:11111;\n}\n.linkp2 a:hover {\n    background:url('images/brandstifter_hover.gif') no-repeat fixed;\n}\n.linkp3 a {\n    background:url('images/brandsaetze_norm.gif') no-repeat fixed;\n    /*height: 12px;\n    width: 95px;*/\n    display: block;\n    z-index:11111;\n}\n.linkp3 a:hover {\n    background:url('images/brandsaetze_hover.gif') no-repeat fixed;\n}\n.linkp4 a {\n    background:url('images/brandschaetze_norm.gif') no-repeat fixed;\n    /*height: 12px;\n    width: 95px;*/\n    display: block;\n    z-index:11111;\n}\n.linkp4 a:hover {\n    background:url('images/brandschaetze_hover.gif') no-repeat fixed;\n}\n.linkp5 a {\n    background:url('images/brandpunkt_norm.gif') no-repeat fixed;\n    /*height: 12px;\n    width: 95px;*/\n    display: block;\n    z-index:11111;\n}\n.linkp5 a:hover {\n    background:url('images/brandpunkt_hover.gif') no-repeat fixed;\n}\n#menu_neu {\nheight: 40px;\nwidth: 1200px;\ntext-align: center;\nline-height:1em!important;\nposition: fixed;\nleft: 40%;\nwidth: 640px;\nz-index: 10000;\n}\nul#topNav{\n    margin-top:51px;\n    margin-left: -218px;\n    color:#000000;\n}\nul#topNav li {\n    list-style: none;\n    display: inline;\n    margin: 0; padding: 0;\n    margin-top: 50%;\n}\nul#topNav a, ul#topNav span {\n    float: left;\n    margin-right: 0.4em;\n    margin-left: 0.1em;\n    padding: 0.2em 1em;\n    text-decoration: none;\n    color:#000000;\n    font-size:14px;\n}\n* html ul#topNav a, * html ul#topNav span {  /* Korrektur fuer IE 5.x */\n    width: 8em;\n    wi\\dth: 6em;\n}\nul#topNav a:hover, ul#topNav span {\n    color:#000000;\n    font-size:14px;\n}\nul#topNav a:active {\n    color:#000000;\n    font-size:14px;\n}\nul#topNav div {\n     clear: left;\n}\n#topNav .current a {\n    color:#F45D32;\n}\n</code>  Demo : http://ealtinel.com/height/  How can I get it to work in IE? ",
        "link": "https://stackoverflow.com/questions/16811716/height100-not-working-in-internet-explorer",
        "score": 26,
        "tags": [
            "html",
            "css",
            "internet-explorer"
        ],
        "question_id": 16811716,
        "answer_count": 8,
        "view_count": 70054,
        "comment_count": 9,
        "comments": [
            {
                "body": "make html, body {height:100%} and mark rest height:auto; (Ex: #wrapper{height: auto;}) in your css"
            },
            {
                "body": "ealtinel.com/height it works not in IE"
            },
            {
                "body": "Hi Aldimeola....your problem is with your image tag, (Ex: <img src=\"images/icon_down_normal.png\" alt=\"Next\" />). In IE its working fine if i remove the image tag...Problem in positioning the image."
            }
        ],
        "answers": [
            {
                "score": 2,
                "body": "In order to make it work. You have to make the parent html and the child to have the same attributes.In some cases you have to use pixels in order to make it function.  <code>html,body, \\\\ this has to go to every element you want to have a height 100% \n{\n  height:100%;\n}\n</code>  I also have something nice  <code>window.onload=function(){\nif(navigator.appName == \"Microsoft Internet Explorer\"){ \\\\ to detect if the browser used by the client is IE\nwinHight = window.innerHeight\ndocument.getElementById(\"mainContainer\").setAttribute('style',\"height:\"+winHeight+\";\");\n}\n}\n</code> "
            },
            {
                "score": 15,
                "body": "In order to use <code>height: 100%</code> , the parent container should have a fixed height.  So for example while this should work:  <code><div style=\"height: 400px;\">\n    <div style=\"height: 100%; background: red; float: left; width: 200px;\">\n        Left Column\n    </div>\n    <div style=\"height: 100%; margin-left: 210px;\">\n        Right Column\n    </div>\n</div>\n</code>  The following will not work:  <code><div style=\"height: 100%;\">\n    --- same code\n</div>\n</code>  One way to achieve a fixed height when you don't know parent's height is using <code>position: absolute;</code> .  <code><div style=\"position: relative;\">\n    <div style=\"position: absolute; left: 0; top: 0; bottom: 0; width: 200px; background: red;\">\n        Left Column\n    </div>\n    <div style=\"margin-left: 210px;\">\n        Right Column\n    </div>\n</div>\n</code>  Otherwise you could use javascript as noted in the other answer. But I prefer pure CSS solutions.  Check here for a live fiddle.  Hope that helps. "
            },
            {
                "score": 40,
                "body": "In IE, in order for an element to have <code>height:100%;</code> , all parent elements must have <code>height:100%;</code> . Any break in the \"chain\" will cause IE to ignore everything.  It should work if your css includes the following:  <code>html,body { height:100%; } \n#wrapper { height:100%; }\n.section { height:100%; }\n</code>  I've opened your page in IE and applied these changes using the developers tools and can verify that it works. "
            }
        ]
    },
    {
        "title": "CSS vw and vh but relative to the parent instead of viewport",
        "question_body": "I'm trying to create a fixed aspect ratio box that resizes to not overflow its parent.  The classic padding-bottom trick is only able to define height in terms of parent width, and as testable here allows the element to grow taller than the parent as width increases. Not good.  Using vh and vw however, we can accomplish what we want with the restriction that the parent is the dimensions of the viewport. Testable here .  <code><style>\n  div {\n    max-width: 90vw;\n    max-height: 90vh;\n    height: 50.625vw; /* height defined in terms of parent width (90*9/16) */\n    width: 160vh; /* width defined in terms of parent height, which is missing from the padding-bottom trick (90*16/9) */\n    background: linear-gradient(to right, gray, black, gray);\n  }\n</style>\n<div></div>\n</code>  Is there a way to have a vh and vw equivalent that references the parent instead of the viewport? Or is there a complimentary trick to the padding-bottom trick which fixes its problems? Where is the css ratio property?  Also, images have some sort of intrinsic ratio , but I'm unsure how to take advantage of this. ",
        "link": "https://stackoverflow.com/questions/39197240/css-vw-and-vh-but-relative-to-the-parent-instead-of-viewport",
        "score": 25,
        "tags": [
            "html",
            "css"
        ],
        "question_id": 39197240,
        "answer_count": 1,
        "view_count": 16221,
        "comment_count": 2,
        "comments": [
            {
                "body": "I don't understand why the padding trick isn't good enough for you? It is a fixed aspect ratio box. Are you saying you want the same ratio to the viewport but within the parent?"
            },
            {
                "body": "I want the box to be restricted by the parent's height and width. It shouldn't become larger than the parent in either dimension."
            }
        ],
        "answers": [
            {
                "score": 3,
                "body": "You can use something similar to what I did in Maintain aspect ratio with a fixed height , which takes advantage the intrinsic aspect ratio of <code><canvas></code> elements.  But here we need nested containers with two canvas.    <code>#resize {\r\n  resize: both;\r\n  overflow: auto;\r\n  width: 100px;\r\n  height: 140px;\r\n  padding: 20px;\r\n  border: 1px solid black;\r\n}\r\n.ratio {\r\n  position: relative;\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n}\r\n.ratio.vertical, .ratio.vertical > canvas {\r\n  height: 100%;\r\n  max-width: 100%;\r\n}\r\n.ratio.horizontal, .ratio.horizontal > canvas {\r\n  width: 100%;\r\n  max-height: 100%;\r\n}\r\n.ratio > div {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n}\r\n#contents {\r\n  background: linear-gradient(to right, gray, black, gray);\r\n}</code>  <code><div id=\"resize\">\r\n  <div class=\"ratio vertical\">\r\n    <canvas width=\"16\" height=\"9\"></canvas>\r\n    <div>\r\n      <div class=\"ratio horizontal\">\r\n        <canvas width=\"16\" height=\"9\"></canvas>\r\n        <div id=\"contents\">\r\n          Hello\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div></code>   "
            }
        ]
    },
    {
        "title": "padding-bottom is ignored in Firefox and IE on overflowing elements with no content",
        "question_body": "This question is related to these 2: 1. css - applying padding to box with scroll, bottom-padding doesn't work 2. Bottom padding not working on overflow element in non-chrome browsers  But I didn't find anywhere as to why it happens, meaning, why in Chrome(31) and Opera(18) the padding does appear, and in Firefox(26) and IE(9-10) it doesn't.  Here's my test case:  http://jsfiddle.net/eW39h/4/  A simpler example from the related question #1:  http://jsfiddle.net/rwgZu/  <code><div id=\"container\">\n    <div id=\"innerBox\"></div>\n</div>\n#container {\n    padding: 3em;\n    overflow-x: hidden;\n    overflow-y: auto;\n    width: 300px;\n    height: 300px;\n    background: red;\n}\n#innerBox{\n    height: 400px;\n    background: #000;\n}\n</code>  I'm not really looking for a fix, but to understand what exactly is the correct implementation (and which browsers got it wrong :-)).  EDIT  Dec 18th, 2013  Based on the answer by Marc Audet, I dug into the specs and made a new test case.  http://jsfiddle.net/rwgZu/79/  Here it's evident that all browsers clip the overflowing box at the same point, which is the padding-edge\", which is indeed in accordance to the spec:   Whenever overflow occurs, the 'overflow' property specifies whether a box is clipped to its padding edge   And still, in Chrome there's an extra padding after the inner box.  Interesting though, that adding overflowing content inside the inner box leads to unified results on all browsers:  http://jsfiddle.net/uPY8j/1/  I could not find in the specs the rules for this type of conditions, so I'm leaving the question still open for now. ",
        "link": "https://stackoverflow.com/questions/20624938/padding-bottom-is-ignored-in-firefox-and-ie-on-overflowing-elements-with-no-cont",
        "score": 23,
        "tags": [
            "html",
            "css",
            "internet-explorer",
            "google-chrome",
            "firefox"
        ],
        "question_id": 20624938,
        "answer_count": 2,
        "view_count": 12220,
        "comment_count": 2,
        "comments": [],
        "answers": [
            {
                "score": 5,
                "body": "According to the W3 specification, overflowing content will be clipped to the edge of the padding box:  http://www.w3.org/TR/CSS21/visufx.html  FF takes the edge of the padding box to be the outer edge, which seems to be in accordance to the definition of the padding box:  http://www.w3.org/TR/CSS21/box.html  That being the case, FF seems to be closer to the spirit of the CSS specification wording, whereas Chrome seems to have decided to clip to the edge of the content box, which is the inner edge of the padding box.  To quote the specification:   The padding edge surrounds the box padding.   Does this mean the edge closer to the content box for the edge closer to the border?  I think that there is some ambiguity, leading to two interpretations. I suspect readers with an inclination towards pure mathematics and geometry may see it one way, and readers with a legal background may argue an alternative viewpoint.  In my opinion, the description of the box model is worded such that the progression of thought is from the inner content area towards the outer margin area. That being the case, I would think that the word \"surrounds\" would mean to enclose the outer edge of the area. Thus, I think FF is perhaps more right, but other developers at Chrome think otherwise. "
            },
            {
                "score": 29,
                "body": "I have the same issue here and instead of using :last-child div (what if last child is hidden?) and margin-bottom trick (not so nice, the scroll bar will not reach the bottom) I use this:  <code>#container {\n  padding: 20px;\n  padding-bottom: 0;\n  overflow: auto;\n}\n#container:after {\n  content: \"\";\n  height: 20px;\n  display: block;\n}\n</code>  So inserting a pseudo element will ensure my extra space, so I can use it for simulating my padding bottom value. What do you think?  JSFIDDLE HERE: http://jsfiddle.net/z72sn0p2/2/ "
            }
        ]
    },
    {
        "title": "Why baseline of `inline-block` element with `overflow:hidden` is set to its bottom margin?",
        "question_body": "After reading two great answers explaining the behaviour of <code>inline-block</code> elements ( Why is this inline-block element pushed downward? and why the span's line-height is useless ) I still have two unexplained questions.  1. What the reason to change baseline of <code>inline-block</code> element from baseline of its line box to bottom margin edge?  http://www.w3.org/TR/CSS2/visudet.html#leading   The baseline of an 'inline-block' is the baseline of its last line box in the normal flow, unless it has either no in-flow line boxes or if its 'overflow' property has a computed value other than 'visible', in which case the baseline is the bottom margin edge.   2. How to calculate this shift?   Important: I don't try to find a solution how to fix it. I try to understand what was the reason to change positioning behaviour of <code>inline-block</code> element when it is applied <code>overflow: hidden</code> . So please, don't post answers for dummies.  UPDATE  Unfortunately I didn't get what I want although I accepted the answer. I think the problem in the questions itself. Regarding the first question : I wanted to understand why <code>inline-block</code> can't preserve baseline of its line box even if it has <code>overflow:hidden</code> (despite of W3C specification of course). I wanted to hear the design decisions - not just it must be set to something, because W3C it mandates. The second one : I want to get a formula where we can paste <code>font-size</code> and <code>line-height</code> of an element and get the correct result.  Anyway thanks to anybody :)  UPDATE 2  Fortunately and subjectively the answer is found! See the first re-accepted answer. Thank you, @pallxk!) ",
        "link": "https://stackoverflow.com/questions/32078950/why-baseline-of-inline-block-element-with-overflowhidden-is-set-to-its-bott",
        "score": 23,
        "tags": [
            "html",
            "css",
            "overflow",
            "w3c"
        ],
        "question_id": 32078950,
        "answer_count": 5,
        "view_count": 4325,
        "comment_count": 9,
        "comments": [
            {
                "body": "@aimme)) I don't try to find a solution how to \"fix\" it. I try to understand what was the reason to change positioning behaviour of <code>inline-block</code> element when it is applied <code>overflow: hidden</code> ."
            },
            {
                "body": "overflow + size set will not show or mind overflowing content. margins on inline-block element increase size/room needed and will increase the line-height as well. test : codepen.io/gc-nomade/pen/BoBeKo"
            }
        ],
        "answers": [
            {
                "score": 1,
                "body": "It's not will looks like answer, but I found a very interesting thing on this example.  If we take a lool to <code>#firstDiv</code> we can see some - margin in the bottom. But I think this margin taken from the height of horizontal scrollbar.   I take a height of it, the height is near 14px;  Then take a height of top margin of out <code>inline-block</code> with <code>overflow: hidden</code> it's a 15px, and without <code>overflow: hidden</code> it's near 30px.    Is it a coincidence? I do not think. The same trick will be with larger height of <code>#container</code> .  P.S. This response does not purport to answer, I just could not put it all in a comment. I do not know how it's all connected, I just noticed this. Thank you for understanding. "
            },
            {
                "score": 2,
                "body": "This might not be the answer. but it might help to resolve this issue by removing the extra space in between <code>inline-block</code> elements.  <code><style>\n.main_div {\n    display:table;\n    border-collapse:collapse;\n    width:100%;\n    border:1px solid red;\n}\n.main_div span {\n    display:table-cell;\n    border:1px solid black;\n    height:20px;\n    border:1px solid green;\n}\n</style>\n<div class=\"main_div\">\n    <span class=\"one\">one</span>\n    <span class=\"two\">two</span>\n    <span class=\"three\">three</span>\n</div>\n</code> "
            },
            {
                "score": 2,
                "body": "@timur: First of all nice question.  I do not know whether it would answer your question but I would like to talk about some behaviour aspect of \"inline-block\" elements.  First of all, \"inline-block\" elements act according to its sibling elements and its content.  If there are two divs, one beside the other and both have display:inline-block; property:value then it would depend on the contents inside each div and would start displaying the content from the baseline which is the natural behaviour of \"inline-block element\".  Now, let me explain you \"overflow\" property behaviour.  By default, overflow property is \"Visible\" and its depended property is \"overflow-wrap: normal;\". Also it gets applied to only \"block\" level and \"inline-block\" elements because inline elements are those elements which wrap to the text and there are no white space inside the content to stop overflowing.  So the span in the example you have provided has to be \"block\" OR \"inline-block\" to apply overflow and vertical-align.  IF you look at this fiddle ---> http://jsfiddle.net/Lkyd1kr0/1/ where I have used \"inline-block\" for the second span element.  HTML  <code><div class=\"one\"><span>as</span></div><div class=\"two\"><span>asd</span></div>\n</code>  CSS  <code>.one,.two { \nwidth: 200px;\ndisplay: inline-block ;\n</code>  }  <code>.one { border: 2px solid #f00; }\n.two { border: 2px solid #000; }\n.one span { display: block; }\n.two span { \n    display: inline-block;\n    overflow:hidden;\n}\n</code>  Now, just use Web developer tools and hover over the div.two and div.two > span and check the difference in height.  This is due to, as span is the content of the div.two who is inline-block and the rest of the space on the height of the div.two is secured for the rest of the content which is white space. This behavior you would generally see on \"block\" level and \"inline-block\" level elements.  Also, notice \"transform-origin\" of both \"span\" and \"div.two\" it would have 4px of difference on y-axis. "
            },
            {
                "score": 2,
                "body": "1. What the reason to change baseline of inline-block element from baseline of its line box to bottom margin edge?  Its the default <code>line-height</code> or the normal line-height of its parent inherited to the inline-block element or the default value defined by the user agent which is by the way W3C recommended <code>line-height:normal</code> .  Reference here  http://www.w3.org/TR/CSS2/visudet.html#propdef-line-height says   normal  Tells user agents to set the used value to a \"reasonable\" value based on the font of the element. The value has the same meaning as .   We recommend a used value for 'normal' between 1.0 to 1.2. The computed value is 'normal'.    So we know the default is <code>line-height:normal</code> and it inherits. Now we know that inline-block adds the element the line-height and lets see what happens when overflow:hidden is set  W3C - Overflow says    hidden   The content is clipped and no scrollbars are provided.   overflow:hidden and display:inline-block creates space for the hanging characters like pgy. as it is block and inline, overflow preserves both space for the hanging characters that might come and line-height.   2. How to calculate this shift?  its browser specific and so we would need to refer browser specification  See here to know the value of 'normal'  mozilla  <code>Initial value normal\nInherited yes\n</code>   normal Depends on the user agent. Desktop browsers (including Firefox) use a default value of roughly 1.2, depending on the element's font-family.   To understand the image, See the HTML CSS below   The Second div and Second Div Span has line-height:normal (which is 1.2 normally) because normal is inherited as its not defined.  The Third div and Third Div Span has line-height:40px which is defined, The value of the third div line-height was by default inherited to its inline child elements too.  CSS/Properties/display says   <code>inline-block</code> Causes an element to generate an inline-level block container. The inside of an inline-block is formatted as a block box, and the element itself is formatted as an atomic inline-level box.   As the term inline says it means the element is an inline element, and the block means its block. so together it means its a block element defined in the same line here is the example proof that shows three situations By default DIV is a block-Level element, and SPAN is an Inline Element. More information here HTML Block and Inline Elements  <code><style>\n.first-div{\n    border:#F00 1px solid;\n}\n.first-div span{\n    /**by default span is an inline element.**/\n    border:#093 1px solid;\n}\n.second-div{\n    /** line-height not defined default line height will be used **/\n    border:#F00 1px solid;\n}\n.second-div span{\n    /** default line height inherited from the secod-div **/\n    display:inline-block;\n    border:#093 1px solid;\n    overflow:hidden;\n}\n.third-div{\n    border:#F00 1px solid;\n    /**see line height. we change the default line height**/\n    line-height:40px;\n}\n.third-div span{\n    /**see line height. line height 40px set in the parent will be used**/\n    display:inline-block;\n    border:#093 1px solid;\n    overflow:hidden;\n}\n</style>\n<div class=\"first-div\">\nFirst Div\n<span>First Span</span>\n</div>\n<br/>\n<div class=\"second-div\">\nSecond Div\n<span>Second Span</span>\n</div>\n<br/>\n<div class=\"third-div\">\nThird Div\n<span>Third Span</span>\n</div>\n</code> "
            },
            {
                "score": 15,
                "body": "1. What the reason to change baseline of inline-block element from baseline of its line box to bottom margin edge?  The baseline of an 'inline-block' is changed to its bottom margin edge when its <code>overflow</code> property is set to <code>hidden</code> (full specification here ).  As for the reason for this decision, I think since the overflown part is hidden, user agents (browsers) may choose to render that overflown part and not display it, or choose to not render it at all. And when the overflown part is not rendered, user agents have no way to tell the baseline of its last line box , as it is not rendered, where it goes is not known.  If the baseline of 'inline-block' whose <code>overflow</code> is set to <code>hidden</code> is still kept as the baseline of its last line box, user agents are forced to render what is hidden to user, which may hinder performance , or at least, put extra restrictions on user agents. What's more, in such case, other inline texts in the same line box are aligned to such a baseline where texts around the overflow-hidden inline-box is hidden, which is kind of stange and not intuitive .  I made a simple demo emulating that inline-block with overflow hidden still has its baseline set to the baseline of its last line box.     <code>var isOverflowHidden = false;\r\ndocument.querySelector('button').onclick = function() {\r\n  document.getElementById('inline-box').style.overflow = isOverflowHidden ? '' : 'hidden';\r\n  isOverflowHidden = !isOverflowHidden;\r\n}</code>  <code>html { background: white; }\r\n#inline-box { display: inline-block; height: 18px; }\r\n.overflown { color: white; }</code>  <code><p><button id=\"toggle\">Toggle 'overflow: hidden;' on 'inline-block'</button></p>\r\n<span>\r\n  texts sit\r\n  <span id=\"inline-box\">\r\n    texts in inline-block <br>\r\n    <span class=\"overflown\">\r\n      line 2 <br>\r\n      line 3\r\n    </span>\r\n  </span>\r\n  on baseline\r\n</span></code>    Besides, you may also compare this behavior with <code>display: none</code> . When that's set, <code>clientWidth</code> and <code>clientHeight</code> both equates to 0.  2. How to calculate this shift?  This part is much easier, since it's documented in the link you gave in the question.  I'll start from the definition of 'line-height'.   The height of the inline box encloses all glyphs and their half-leading on each side and is thus exactly 'line-height'.   That is, line-height is composed of, from top to bottom, top half-leading + height(ascent) + depth(descent) + bottom half-leading .  Height of each component can be calculated for a given font at a given size.  Basically, every font has font metrics that specify a characteristic height above the baseline and a depth below it.  Take 'Times New Roman' as an example, using FontForge , we see that it has <code>Em Size</code> as 2048, <code>HHead Ascent</code> as 1825, and <code>HHead Descent</code> as -443. That is, <code>1825 / 2048 = 89.1%</code> of font-size contributes to the ascent, and <code>443 / 2048 = 21.6%</code> contributes to the descent.   There are also metrics starting with 'Typo', that category will be used if 'Really use Typo metrics' is checked, and the spec recommends this:   Note. It is recommended that implementations that use OpenType or TrueType fonts use the metrics \"sTypoAscender\" and \"sTypoDescender\" from the font's OS/2 table for A and D (after scaling to the current element's font size). In the absence of these metrics, the \"Ascent\" and \"Descent\" metrics from the HHEA table should be used.   Line-height minus ascent and descent is the so-called leading.   Half the leading is added above A(ascent) and the other half below D(descent).   Assuming a <code>font-family: Times New Roman; font-size: 100px; line-height: 200px;</code> , we get  <code>ascent = 100px * (1825 / 2048) = 89px\ndescent = 100px * (443 / 2048) = 22px\ntop half-leading = bottom half-leading = (200px - 89px - 22px) / 2 = 44.5px\n</code>  So we see that this can be calculated. And this can also be measured on pages.  Here is another demo for you to fiddle with.  If you are asking for the shift of bottom half-leading, it's shown as space between green line and blue line in the code snippet. If you are asking for the shift of descent and bottom half-leading, it's shown as space between red line and blue line in the code snippet.    <code>var $ = document.querySelector.bind(document);\r\nvar fontFamily = window.getComputedStyle($('#examinee'))['font-family']\r\n  , fontSize = +window.getComputedStyle($('#examinee'))['font-size'].replace('px', '')\r\n  , containerLineHeight = +window.getComputedStyle($('#examinee'))['line-height'].replace('px', '')\r\n  , textLineHeight = $('.target').offsetHeight\r\n  , ascent = $('#examinee .baseline').offsetTop + $('#examinee .baseline').offsetHeight - $('#examinee .text-top').offsetTop\r\n  , descent = $('#examinee .text-bottom').offsetTop - $('#examinee .baseline').offsetTop\r\n  , topHalfLeading = $('#examinee .text-top').offsetTop\r\n  , bottomHalfLeading = $('#examinee').offsetHeight - 2/* borders of the container */ - $('#examinee .text-bottom').offsetTop - $('#examinee .text-bottom').offsetHeight;\r\n$('#font-family').innerText = fontFamily;\r\n$('#font-size').innerText = fontSize + 'px';\r\n$('#container-line-height').innerText = containerLineHeight + 'px';\r\n$('#text-line-height').innerText = textLineHeight + 'px';\r\n$('#ascent').innerText = ascent + 'px';\r\n$('#descent').innerText = descent + 'px';\r\n$('#top-half-leading').innerText = topHalfLeading + 'px';\r\n$('#bottom-half-leading').innerText = bottomHalfLeading + 'px';</code>  <code>div {\r\n  font-size: 20px;\r\n  line-height: 2;\r\n  width: 650px;\r\n  border: 1px dashed gray;\r\n  border-top: 1px solid blue;\r\n  border-bottom: 1px solid blue;\r\n  margin: 1rem 0;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n}\r\nspan:not([class]) {\r\n  display: inline-block;\r\n  border: 1px dashed gray;\r\n}\r\n.baseline,\r\n.text-bottom,\r\n.text-top {\r\n  display: inline-block;\r\n  width: 200%;\r\n  margin: 0 -100%;\r\n}\r\n.baseline {\r\n  border-bottom: 1px solid red;\r\n  vertical-align: baseline;  /* the default */\r\n}\r\n.text-bottom {\r\n  border-bottom: 1px solid green;\r\n  vertical-align: text-bottom;\r\n}\r\n.text-top {\r\n  border-bottom: 1px solid green;\r\n  vertical-align: text-top;\r\n}\r\n#examinee {\r\n  position: relative;\r\n  font-size: 100px;\r\n  line-height: 200px;\r\n}</code>  <code><p>\r\n  Demonstrates that \"overflow: hidden;\" sets baseline of an inline-block element to its bottom margin.\r\n</p>\r\n<div>\r\n  <span class=\"baseline\"></span>\r\n  <span class=\"text-top\"></span>\r\n  <span class=\"text-bottom\"></span>\r\n  <div>\r\n  <span>\r\n    <span style=\"\"></span>\r\n  </span>\r\n  </div>\r\n</div>\r\n<div>\r\n  <span class=\"baseline\"></span>\r\n  <span class=\"text-top\"></span>\r\n  <span class=\"text-bottom\"></span>\r\n  <div>\r\n  <span style=\"overflow: hidden;\">\r\n    <span style=\"overflow: hidden;\"></span>\r\n  </span>\r\n  </div>\r\n</div>\r\n<p>\r\n  Demonstrates the position of baseline, text-top and text-bottom. <br>\r\n  Demonstrates how \"line-height\" affects box sizing.\r\n</p>\r\n<ul>\r\n  <li>Blue lines: top and bottom borders of line boxes\r\n  <li>Red lines: baseline of texts\r\n  <li>Green lines: text-top or text-bottom of texts\r\n</ul>\r\n<ul>\r\n  <li>Between blue lines: the line-height\r\n  <li>Between red line and green line: ascent or descent\r\n</ul>\r\n<div id=\"examinee\">\r\n  <span class=\"target\">GgJjPpQqYy</span>\r\n  <span class=\"baseline\"></span>\r\n  <span class=\"text-top\"></span>\r\n  <span class=\"text-bottom\"></span>\r\n</div>\r\nMeasured metrics:\r\n<ul>\r\n  <li>font-family: <span id=\"font-family\"></span></li>\r\n  <li>font-size: <span id=\"font-size\"></span></li>\r\n  <li>container line-height: <span id=\"container-line-height\"></span></li>\r\n  <li>text line-height: <span id=\"text-line-height\"></span></li>\r\n  <li>ascent: <span id=\"ascent\"></span></li>\r\n  <li>descent: <span id=\"descent\"></span></li>\r\n  <li>top half-leading: <span id=\"top-half-leading\"></span></li>\r\n  <li>bottom half-leading: <span id=\"bottom-half-leading\"></span></li>\r\n</ul></code>    "
            }
        ]
    },
    {
        "title": "Beginner&#39;s stuff: How to stop CSS&#39; Divs from overlapping?",
        "question_body": "First question ever, I started working on CSS about a month ago due to a job I got, but it seems I have encountered some problems I can't fix (mainly due to my inexperience and that it's someone else's CSS)  I won't beat around the bush so much and explain the problem before showing the code. There are a set of Div's in a form-like setting, but when the text get's too crowded it invades the next Div so, fixing it via CSS and not HTML, any fix on this? From the very problem I can imagine it's something so easy it's silly, but well, yeah.  Edit: I kinda of forgot to mention that part, I don't want them to be hidden, I want each div to automatically allow for the \"previous\" one to finish it's concent without overlapping (Tried with overflow: Auto but it gave them scrollbars, to all the forms in the whole site.  Here's a pic of how it looks at the moment, I'm sure you will see the problem right away  https://i.sstatic.net/wBrLL.jpg   Here's the relevant HTML  <code><html>\n<head>\n    <link href=\"hue.css\" rel=\"stylesheet\">\n</head>\n<body>\n    <div class=\"content\">\n        <div class=\"column\">\n            <div class=\"form\">\n                <div class=\"form-nivel\">\n                    <label for=\"cfdiCreate:organizationRfc\">RFC</label><label id=\"cfdiCreate:organizationRfc\">XXXXXXXXXXXX</label>\n                </div>\n                <div class=\"form-nivel\">\n                    <label for=\"cfdiCreate:organizationTaxSystem\">Regimen    fiscal</label><label id=\"cfdiCreate:organizationTaxSystem\">Sueldos y salarios</label>\n                </div>\n                <div class=\"form-nivel\">\n                    <label for=\"cfdiCreate:organizationTaxAddress\">Domicilio  fiscal</label><label id=\"cfdiCreate:organizationTaxAddress\">XXXXXX Colonia Tecnológico  Monterrey,Nuevo León,México.C.P.XXXXXX</label>\n                </div>\n                <div class=\"form-nivel\">\n                    <label for=\"cfdiCreate:organizationExpeditionPlace\">Lugar de  expedición</label><label id=\"cfdiCreate:organizationExpeditionPlace\">Suc.1 Chiapas,México.     </label>\n                </div>\n            </div>\n        </div>\n        <div class=\"column secondary\">\n            <!--?xml version=\"1.0\" encoding=\"UTF-8\"?-->\n        </div>\n</body>\n</html>\n</code>  And here's the CSS  <code>body {\n    font-family: \"Trebuchet MS\", Arial, Helvetica, sans-serif;\n    text-align: center;\n}\np {\n    text-align: left;\n}\n.content {\n    display: block;\n    width: 100%;\n    height: auto;\n    margin-bottom: 10px;\n    float: left;\n    background: #;\n    text-align: left;\n}\n    .content label, .content p {\n        font-size: 16px;\n        color: #024DA1;\n        padding-left: 2%;\n    }\n.column {\n    display: block;\n    float: left;\n    width: 48%;\n    margin-top: 15px;\n    height: auto;\n    background:;\n}\n.secondary {\n    margin-left: 10px;\n}\n.clearfix {\n    clear: both;\n    margin-bottom: 10px;\n}\n.form {\n    display: block;\n    width: 96%;\n    height: auto;\n    background:;\n}\n.form-nivel {\n    display: block;\n    width: 100%;\n    width: 470px;\n    min-height: 20px;\n    margin-bottom: 20px;\n    position: relative;\n}\n    .form-nivel label {\n        width: 160px;\n        float: left;\n        height: 20px;\n        line-height: 20px;\n        margin-right: 10px;\n        text-align: right;\n    }\n</code> ",
        "link": "https://stackoverflow.com/questions/17534684/beginners-stuff-how-to-stop-css-divs-from-overlapping",
        "score": 22,
        "tags": [
            "css",
            "html",
            "overlap"
        ],
        "question_id": 17534684,
        "answer_count": 5,
        "view_count": 87335,
        "comment_count": 2,
        "comments": [],
        "answers": [
            {
                "score": 1,
                "body": "The CSS logic for the left labels and the right labels are the same.  First thing you should do is set them apart.  <code><div class=\"form-nivel\">\n    <label class=\"leftLabel\" for=\"cfdiCreate:organizationRfc\">RFC</label>\n    <label class=\"rightLabel\" id=\"cfdiCreate:organizationRfc\">XXXXXXXXXXXX</label>\n</div>\n</code>   Notice the added class   Then on your css you would do something like this:  <code>.form-nivel label.leftLabel {\n    width: 160px;\n    float: left;\n    height: 20px;\n    line-height: 20px;\n    margin-right: 10px;\n    text-align: right;\n}\n.form-nivel label.rightLabel {\n    width: 400px;\n    float: left;\n    height: 20px;\n    line-height: 20px;\n    margin-right: 10px;\n    text-align: left;\n}\n</code>  I made the right labels bigger and aligned them to the left.  Also, you should add:  <code><meta charset=\"utf-8\">\n</code>  on the html head. This is to be able to display characters with accents. "
            },
            {
                "score": 9,
                "body": "Here. You are applying a CSS rule to all the labels. The overlapping happens because of this rule.  <code>float: left;\n</code>  To fix this, remove the .form-nivel label rule and add these.  <code>.form-nivel label:nth-child(1) {\n    width: 160px;\n    float: left;\n    height: 20px;\n    line-height: 20px;\n    margin-right: 10px;\n    text-align: right;\n}\n.form-nivel label:nth-child(2) {\n    width: 160px;\n    height: 20px;\n    line-height: 20px;\n    margin-right: 10px;\n    text-align: right;\n}\n</code> "
            }
        ]
    },
    {
        "title": "Div with margin-left and width:100% overflowing on the right side",
        "question_body": "I have 2 nested div's that should be 100% wide. Unfortunately the inner div with the Textbox overflows and is actually larger than the outer div. It has a left margin and overflows by about the size of the margin.  How can I fix that?  <code><div style=\"width:100%;\">\n    <div style=\"margin-left:45px; width:100%;\">\n    <asp:TextBox ID=\"txtTitle\" runat=\"server\" Width=\"100%\"></asp:TextBox><br />\n    </div>\n</div>\n</code>  If I don't do the 100%, then the textbox is not 100% wide. ",
        "link": "https://stackoverflow.com/questions/5637643/div-with-margin-left-and-width100-overflowing-on-the-right-side",
        "score": 21,
        "tags": [
            "css",
            "html",
            "margin"
        ],
        "question_id": 5637643,
        "answer_count": 6,
        "view_count": 212058,
        "comment_count": 1,
        "comments": [
            {
                "body": "\"about the size of the margin\" - I'd bet on exactly the size of the margin :)"
            }
        ],
        "answers": [
            {
                "score": 1,
                "body": "<code><div style=\"width:100%;\">\n    <div style=\"margin-left:45px;\">\n       <asp:TextBox ID=\"txtTitle\" runat=\"server\" Width=\"100%\"></asp:TextBox><br />\n    </div>\n</div>\n</code> "
            },
            {
                "score": 1,
                "body": "Add some css either in the head or in a external document. asp:TextBox are rendered as input :  <code>input {\n     width:100%;\n}\n</code>  Your html should look like : http://jsfiddle.net/c5WXA/  Note this will affect all your textbox : if you don't want this, give the containing div a class and specify the css.  <code>.divClass input {\n     width:100%;\n}\n</code> "
            },
            {
                "score": 1,
                "body": "I realise this is an old post but this might benefit somebody who, like me, has come to this page from a google search and is at their wits end.  None of the other answers given here worked for me and I had already given up hope, but today I was searching for a solution to another similar problem with divs, which I found answered multiple times on SO. The accepted answer worked for my div, and I had the sudden notion to try it for my previous textbox issue - and it worked! The solution:  add <code>box-sizing: border-box</code> to the style of the textbox.  To add this to all multi-line textboxes using CSS, add the following to your style sheet:  <code>textarea\n{\n  box-sizing: border-box;\n}\n</code>  Thanks to thirtydot for the solution at  width: 100%-padding?  and  Content of div is longer then div itself when width is set to 100%? "
            },
            {
                "score": 3,
                "body": "If some other portion of your layout is influencing the <code>div</code> width you can set <code>width:auto</code> and the <code>div</code> (which is a block element) will fill the space  <code><div style=\"width:auto\">\n    <div style=\"margin-left:45px;width:auto\">\n        <asp:TextBox ID=\"txtTitle\" runat=\"server\" Width=\"100%\"></asp:TextBox><br />\n    </div>\n</div>\n</code>  If that's still not working we may need to see more of your layout HTML/CSS "
            },
            {
                "score": 7,
                "body": "A div is a block element and by default 100% wide. You should just have to set the textarea width to 100%. "
            },
            {
                "score": 28,
                "body": "Just remove the width from both divs.  A <code>div</code> is a block level element and will use all available space (unless you start floating or positioning them) so the outer div will automatically be 100% wide and the inner div will use all remaining space after setting the left margin.  I have added an example with a <code>textarea</code> on jsfiddle .  Updated example with an input. "
            }
        ]
    },
    {
        "title": "iOS 10 : uncertain freezing during scroll of HTML list styled with -webkit-overflow-scrolling: touch",
        "question_body": "Overview  This issue is about an uncertain freeze during scroll of <code><ul /></code> which is styled with CSS  <code>-webkit-overflow-scrolling: touch\n</code>  on the Safari browser of iOS.  Similar issues  I read similar issues or posts  Div scrolling freezes sometimes if I use -webkit-overflow-scrolling  iOS 9 `-webkit-overflow-scrolling:touch` and `overflow: scroll` breaks scrolling capability  Webkit overflow scrolling touch CSS bug on iPad  http://patrickmuff.ch/blog/2014/10/01/how-we-fixed-the-webkit-overflow-scrolling-touch-bug-on-ios/  and so on. But I can not perceive which solutions fix my problem.  HTML and CSS for this issue  I displayed the next <code>index.html</code> with <code>index.css</code> on the latest model of iPad.   <code>index.html</code>   https://github.com/jun68ykt/wos-touch-sample/blob/master/index.html    <code>index.css</code>   https://github.com/jun68ykt/wos-touch-sample/blob/master/index.css     These are very simple. The <code>index.html</code> above has only one list <code><ul /></code> which includes 50 items and is contained by <code><div class=\"container\"></code> .  Reproducing situations of this issue  Maybe you can reproduce according to the following procedure.   Scrolling list to reach the bottom of it   After confirming the side bar vanished, touch and try to move further down. Of course, list can not be scrolled   Next, change the direction of moving finger and try to rewind to the top   But I found that the especially first stroke of finger directed to top did not work.   After a few seconds, I could touch and move list to the top.    For better understanding, I posted the movie into YouTube in which I operated iPad to display HTML above.  a Sample of -webkit-overflow-scrolling: touch   https://www.youtube.com/watch?v=MkAVYbO_joo  The problem point 4. of the procedure items above is viewed at about TC0:08 of this movie.  It should be noted that my iPad in the movie above is   iPad 9.7inch (latest model)  iOS 10.3.2  and I use the Safari browser in it.   Wanted answers  Would you do me a favor? I need some help for next questions.   Why does the situation like 4. of list above occured ?   How to fix HTML or CSS to let the list scroll more smoothly ?    Sample program  A sample program which was displayed in the movie above can be downloaded from GitHub. Following URL is its repo.  https://github.com/jun68ykt/wos-touch-sample  This sample requires Node.js to run server.  Best regards. ",
        "link": "https://stackoverflow.com/questions/44815543/ios-10-uncertain-freezing-during-scroll-of-html-list-styled-with-webkit-overf",
        "score": 20,
        "tags": [
            "html",
            "ios",
            "css",
            "mobile-safari"
        ],
        "question_id": 44815543,
        "answer_count": 4,
        "view_count": 2534,
        "comment_count": 2,
        "comments": [],
        "answers": [
            {
                "score": 1,
                "body": "It is a bit hackish but you can bypass the scroll lock by triggering a one px scroll when the list is scrolled to the top or bottom.  Here is a quick example:  PS you may be able to fix this using overscroll-behavior but this requires iOS 16    <code>const list = document.querySelector('.list');\nlist.addEventListener('scroll', onePxHack, { passive: false })\nfunction onePxHack(e) {\n  const { currentTarget: list } = e\n  const atTop = list.scrollTop === 0;\n  const atBot = list.scrollHeight - list.scrollTop === list.offsetHeight;\n  if (atTop || atBot) {\n    list.scrollTop += atTop ? 1 : -1;\n    e.preventDefault();\n  }\n}</code>  <code>.container {\n  background-color: #DDD;\n  width: 300px;\n  height: 500px;\n  position: fixed;\n  top: 0;\n  left: 0;\n  margin-top: 50px;\n  margin-left: 50px;\n}\n.list {\n  height: 500px;\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  font-size: 24pt;\n  padding: 0;\n  margin: 0;\n}\n.list>li {\n  list-style-type: none;\n}</code>  <code><div class=\"container\">\n  <ul class=\"list\">\n    <li>001</li>\n    <li>002</li>\n    <li>003</li>\n    <li>004</li>\n    <li>005</li>\n    <li>006</li>\n    <li>007</li>\n    <li>008</li>\n    <li>009</li>\n    <li>010</li>\n    <li>011</li>\n    <li>012</li>\n    <li>013</li>\n    <li>014</li>\n    <li>015</li>\n    <li>016</li>\n    <li>017</li>\n    <li>018</li>\n    <li>019</li>\n    <li>020</li>\n    <li>021</li>\n    <li>022</li>\n    <li>023</li>\n    <li>024</li>\n    <li>025</li>\n    <li>026</li>\n    <li>027</li>\n    <li>028</li>\n    <li>029</li>\n    <li>030</li>\n    <li>031</li>\n    <li>032</li>\n    <li>033</li>\n    <li>034</li>\n    <li>035</li>\n    <li>036</li>\n    <li>037</li>\n    <li>038</li>\n    <li>039</li>\n    <li>040</li>\n    <li>041</li>\n    <li>042</li>\n    <li>043</li>\n    <li>044</li>\n    <li>045</li>\n    <li>046</li>\n    <li>047</li>\n    <li>048</li>\n    <li>049</li>\n    <li>050</li>\n  </ul>\n</div></code>   "
            }
        ]
    },
    {
        "title": "HTML css Table misaligned Columns",
        "question_body": "I tried to create a table in AngularJS with sticky header and footer. I've managed to do that; here's a Plunker demo and code:  <code><body ng-controller=\"MainCtrl as ctrl\">\n    <table class=\"table table-bordered table-hover\">\n        <thead>\n            <tr>\n                <th>\n                    Column1\n                </th>\n                <th>\n                    Column2\n                </th>\n                <th>\n                    Column3\n                </th>\n                <th>\n                    Column4\n                </th>\n                <th>\n                    Column5\n                </th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr class=\"info\" ng-repeat=\"item in items\">\n              <td>\n                {{item.name}}\n              </td>\n              <td>\n                  {{item.type}}\n              </td>\n              <td>\n                  {{item.value}}\n              </td>\n              <td>\n                  {{item.code}}\n              </td>\n              <td>\n                  {{item.id}}\n              </td>\n            </tr>\n        </tbody>\n        <tfoot>\n            <tr>\n                <th>\n                    Column1\n                </th>\n                <th>\n                    Column2\n                </th>\n                <th>\n                    Column3\n                </th>\n                <th>\n                    Column4\n                </th>\n                <th>\n                    Column5\n                </th>\n            </tr>\n        </tfoot>\n    </table>\n  </body>\n</code>  But the only problems are:   The column width isn't dynamic, as you can see, in the first row the data overflows into the 2nd column.  The columns are misaligned.   Any idea how to fix this? ",
        "link": "https://stackoverflow.com/questions/36928369/html-css-table-misaligned-columns",
        "score": 19,
        "tags": [
            "html",
            "css",
            "angularjs",
            "html-table"
        ],
        "question_id": 36928369,
        "answer_count": 12,
        "view_count": 11244,
        "comment_count": 3,
        "comments": [
            {
                "body": "The misalignment seems to be caused by the scrollbar. You could add a positive <code>right-padding</code> to the table header or a negative <code>right-margin</code> to the table content to counter its effects, although the width of the scrollbar is browser dependant, meaning that it might not be the best solution. Other solutions would be displaying all rows or separating the content of the table over multiple pages."
            }
        ],
        "answers": [
            {
                "score": 1,
                "body": "Use bootstrap classes for the purpose of styling. Your custom styling(style.css) is creating the problem. Also, the <code><table></code> tag provides dynamic width of columns by default. An excerpt from How to create a dynamic width column in Twitter Bootstrap answer:  <code><table class=\"table\">\n<tr><th>Id</th>     <th>Name</th>      <th>Email address</th></tr>\n<tr><td>100001</td> <td>Joe</td>       <td>MamiePVillalobos@teleworm.us</td></tr>\n<tr><td>100</td>    <td>Christine</td> <td>ChristineJWilliams@dayrep.com</td></tr>\n<tr><td>1001</td>   <td>John</td>      <td>JohnLMiley@dayrep.com</td></tr>\n</code>  This will give you the desired output "
            },
            {
                "score": 2,
                "body": "1st answer: add the below css to td element  <code>  td{\n      white-space: normal;\n      word-wrap: break-word;\n      }\n</code>  2nd answer: you need to create seperate table for header and footer and assign 20 % width to each td and th. It should work. "
            },
            {
                "score": 2,
                "body": "Your misalignment is coming because of followings   overflowing text  width of scrollbar in tbody   solution:   give overflow-x:auto to 'td' and and some max-width/width  make your last th as much extra bigger then others as your scroll-bar width is.  for better look to scrollbars put custom css for scroll-bar   Add following css to your page and enjoy plunkerLink  <code>th,td {\n      width: 20%!important;\n      overflow-x: auto;\n      padding: 10px;\n    }\n    th:last-of-type {\n      width: calc(20% + 6px)!important;\n    }\n    ::-webkit-scrollbar {\n      width: 3px!important;\n      height: 6px!important;\n    }\n    ::-webkit-scrollbar-button {\n      width: 0;\n      height: 0;\n    }\n    ::-webkit-scrollbar-thumb {\n      border: 2px solid #ccc;\n      background: #ccc;\n      border-radius: 8px;\n    }\n    ::-webkit-scrollbar-track-piece {\n      width: 3px!important;\n      border: 1px solid #fff;\n    }\n</code>  "
            },
            {
                "score": 3,
                "body": "Remove   <code>white-space: nowrap;\n</code>  and add   <code>word-wrap: break-word;\n</code>   <code>tfoot td{\n        border-right: 1px solid transparent;\n        vertical-align: middle;\n        word-wrap: break-word;\n    }\n</code> "
            },
            {
                "score": 5,
                "body": "In order to return the table back to its normal, dynamically-resizing self, there are a few steps to follow. Each step mentioned will give freedom back to its respective table elements, making their lives much simpler.  First, remove all instances of flex. You want the table to act like a table, right? Next, let your <code>thead</code> , <code>tr</code> , and <code>tfoot</code> be themselves as well. Why make them display as a table? Lastly, your <code>tbody</code> is being set to display as a block. This, in a sense, segregates it from its other table friends, namely <code>thead</code> and <code>tfoot</code> . This creates a lonely situation for everyone involved.  Your final code will look like this:  <code>table {\n    table-layout: auto;\n    max-height: 300px;\n}\ntable thead, table tfoot,\ntable tbody tr {\n    table-layout: fixed;\n}\ntbody td,\nthead th,\ntfoot td{\n    border-right: 1px solid transparent;\n    vertical-align: middle;\n    white-space: nowrap;\n}\ntable thead {\n    width: 100%;\n}\ntable tfoot {\n    width: 100%;\n}\ntable tbody {\n    overflow-y: auto;\n}\ntable tbody tr {\n    width: 100%;\n}\n</code>  This will allow your table cells to be themselves--dynamically resizing as they see fit. "
            },
            {
                "score": 7,
                "body": "As you already know from the other answers, you should remove <code>white-space: nowrap;</code> , but there's also something you can do about the scrollbar :  <code>table thead, table tfoot {\n    width: calc(100% - 17px);\n}\n</code>   Updated Plunker  this looks perfect on my PC because the Windows scrollbars are 17px broad. If you want to be safe and check the scrollbar width, use this:  <code>window.onload = function() {\n    var tr = document.getElementById(\"__tbody\").children[0];\n    var scrWidth = window.innerWidth - tr.clientWidth - 3;\n    var width = \"calc(100% - \" + scrWidth + \"px)\";\n    document.getElementById(\"__thead\").style.width = width;\n    document.getElementById(\"__tfoot\").style.width = width;\n}\n</code>  This calculates how broad the scrollbars are and then adjusts thead and tfoot. Of course then you have to set the ids <code><thead id=\"__thead\"></code> , <code><tbody id=\"__tbody\"></code> and <code><tfoot id=\"__tfoot\"></code> . "
            },
            {
                "score": 8,
                "body": "The criteria for success of this question are:   Pure CSS.  Dynamically sized columns.  Sticky header and footer that size with the columns.   What you want is impossible.  The reason why the cells are almost right is because the table is semi-there, but there are actually multiple tables in the document. By overriding the <code><table></code> elements display type to <code>flex</code> , you've rendered the page in several different groups. The <code><thead></code> and <code><tfoot></code> are their own table, and their <code><tbody></code> is its own table. They do not size to one another, rather to other table cells in their own group.  Other CSS guides about this topic require a fixed width. http://joshondesign.com/2015/05/23/csstable  After playing around with it (specifically, trying to move the thead and tfoot to fixed positions), I've decided that any attempt to give specific rules to the header/footer breaks the table layout and will cause the sizing to work differently, which is why fixed width is required on the cells. Even in the examples, they are broken in this way, but the fixed width nullifies the problem.  Your absolute easiest fix is to fix the widths and give them overflow-x properties.  The alternative is to use JavaScript. With JS, all bets are off, and you can do anything you imagine. Specifically, you could use JS to autosize cells. I remember having success with a jQuery plugin that accomplished that.  https://www.datatables.net/  Otherwise, no. I cannot find any example online that does what you need it to do. Any attempts to get this specific layout working is a hack and you're better off making a no-JS version with overflow-x cells and fixed widths, and a JS-enabled version that autosizes cells. "
            }
        ]
    },
    {
        "title": "How to get &lt;select&gt; box to overflow out of the containing &lt;div&gt;?",
        "question_body": "background:  The client asked me to give them some dropdowns. So I gave them some, populated with lots of different options.  They liked the way the dropdowns looked in Firefox and Chrome, because the dropdown would automatically expand for to the width of the text, as depicted:   But this isn't the case with IE  Internet Explorer is the goth-teen of the web development world and likes to behave differently so it's not seen by its peers as a conformist , it seems. It doesn't see the value in expanding a dropdown to enable the user to read all of the text it contains. So it looks like this:   This wasn't good enough for the client, so they asked me to fix it. I found a jQuery plugin that would resize the text box when you gave it focus so that when it opened you could see all the text in it. An example is available here: (be sure to load this in IE8 or less)  http://jsfiddle.net/tmcNP/3/   the question:  Notice how when you click on the <code>All companies</code> dropdown, it forces the dropdown onto the next line? Is there any way I can get it to stay on the same line, and 'overflow'* out of the containing div?  *not sure if this is the correct term, in this context. ",
        "link": "https://stackoverflow.com/questions/6388381/how-to-get-select-box-to-overflow-out-of-the-containing-div",
        "score": 17,
        "tags": [
            "javascript",
            "jquery",
            "html",
            "css"
        ],
        "question_id": 6388381,
        "answer_count": 3,
        "view_count": 2636,
        "comment_count": 3,
        "comments": [],
        "answers": [
            {
                "score": 1,
                "body": "It's because the plugin is resizing the <code><select></code> to match the longest <code><option></code> inside of it. Unfortunately, the only work around to this would be to <code>position:absolute</code> the select inside of it's parent (set to <code>position:relative</code> ).  Really this is going to happen to any of those dropdowns that have content larger than it can hold. It's unfortunate but you can't control the <code><select></code> 's behavior unless you simulate a select using a <code><div></code> which is what a lot of JS UI frameworks do such as Dojo. "
            }
        ]
    },
    {
        "title": "Workaround for issue with IE scrollWidth",
        "question_body": "I seem to have stumbled onto a bug in IE where the scrollWidth is off by 1px compared to the offsetWidth. The trigger to this seems to be dependent on the length of the text/characters in the element and only happens when overflow is set to something other than visible.  For context on why I am checking them against each other see this question: HTML - how can I show tooltip ONLY when ellipsis is activated  For an example of the issue see: http://jsfiddle.net/w5cwhjbf/2/    <code>.base{\r\n    font-size: 16px; \r\n    overflow: hidden;    \r\n}\r\n.wrapper{\r\n    float: left;  \r\n}</code>  <code><div class=\"wrapper\">\r\n    <div id=\"div1\" class=\"base\">\r\n        Why is my scrollWidth wrong in IE?\r\n    </div>\r\n</div>\r\n<br style=\"clear: both;\">\r\n<br>\r\n<button id=\"btn1\" onclick=\"fnCheckScroll(div1,btn1)\">Calculates Wrong</button>\r\n<br>\r\n<br>\r\n<br> \r\n<div class=\"wrapper\">\r\n    <div id=\"div2\" class=\"base\">\r\n        Why is my scrollWidth right in IE?\r\n    </div>\r\n</div>\r\n<br style=\"clear: both;\">\r\n<br>\r\n<button id=\"btn2\" onclick=\"fnCheckScroll(div2,btn2)\">Calculates Correctly</button>\r\n<br>\r\n<br>\r\n<br>\r\nIssue seems to be based on the character widths/font size resulting in I would assume a fractional value that in one case gets rounded up and the other rounded down.  The issue however does not ever cause scroll bars to appear (if overflow is auto).  Issue doesnt happen with overflow: visible.\r\n<script type=\"text/javascript\">\r\nfunction fnCheckScroll(div, btn)\r\n{    \r\n   var iScrollWidth = div.scrollWidth;\r\n   var iOffsetWidth = div.offsetWidth;\r\n   var iDifference = iScrollWidth - iOffsetWidth;\r\n   btn.innerHTML = (\"Width: \" + iOffsetWidth + \"px  |  scrollWidth: \" + iScrollWidth + \"px  |  Difference: \" + iDifference + \"px\"); \r\n}\r\n</script></code>    You will notice in the example, though the first item has room to grow to whatever size it wants, its width is set 1px too short, or the scrollWidth reported is 1px too big, as well as the fact that no scrollbar is thrown (when CSS explicitly set to overflow: auto), IE knows somewhere in its code it is not actually overflowing.  Question is, what would be your suggested fix or workaround for this issue, as it seems like it randomly happens based on the characters/font/font-size in the div? ",
        "link": "https://stackoverflow.com/questions/30900154/workaround-for-issue-with-ie-scrollwidth",
        "score": 17,
        "tags": [
            "javascript",
            "html",
            "css",
            "internet-explorer"
        ],
        "question_id": 30900154,
        "answer_count": 3,
        "view_count": 5504,
        "comment_count": 7,
        "comments": [
            {
                "body": "@VimalanJayaGanesh I added an answer that provides a work around for my use case. You can likely use something similar if your use case is different to verify that ie is correctly rounding the scrollwidth."
            }
        ],
        "answers": [
            {
                "score": 1,
                "body": "Try to set the <code>padding-right: 1px;</code> for the class <code>.base</code> .  <code>.base{\n    font-size: 16px; \n    overflow: hidden;\n    padding-right: 1px;    \n}\n</code> "
            },
            {
                "score": 2,
                "body": "It's hard to give the best solution without knowing how this applies to your specific problem with this bug. That being said, you could:   Use a javascript bug-fix to adjust the attributes/styles/etc. if the two elements are different sizes.  <code>if(iDifference != 0) { /* make adjustments. */ }</code>  Use a tolerance check between the two elements; if the difference is less than or equal to 2px, then don't worry about it and process everything as normal.  <code>if(Math.abs(iDifference) <= 2) { /* no problem here! */ }</code>  Use the outer element for all computations, since that has the true width of the container.  Use the inner element for all computations, since that will never cause an overlap with the outer element.  Do nothing! Why fix it if it isn't broken?   It all depends on what you're trying to do and how the 1px gap is causing a problem. "
            },
            {
                "score": 2,
                "body": "Found a workable workaround for the issue that would work in ie9+. Requires checking the elements getBoundingClientRect() width in addition to the scroll and offset width.  <code>var boundingClientRectWidth = element.getBoundingClientRect().width;\nvar iScrollWidth = div.scrollWidth;\nvar iOffsetWidth = div.offsetWidth;\nvar amIOverflowing = (iScrollWidth > iOffsetWidth) && (boundingClientRectWidth == iOffsetWidth);\n</code>  By check in IE if the boundingClient is forced to be the same size as the iOffsetWidth (instead of having a fractional width) we can ensure that we don't use the incorrect scroll width that is rounding up instead of down e.g. 273.36...  See this jsfiddle: http://jsfiddle.net/gskfke6L/1/ "
            }
        ]
    },
    {
        "title": "Flexbox child with &quot;overflow: hidden&quot; overflowing grandparent margins",
        "question_body": "I'm trying to nest two child elements in a wrapper which specifies side margins so there's space between its contents and the sides of the screen when the display is narrow and a <code>max-width</code> for when the display is wide.  The second child has some overflow which should be visible while the first child should stay strictly within the wrapper's content box. With the first child removed, the second child behaves as desired. When I add in the first child though, it seems to completely ignore the wrapper's margins, stretching the wrapper's content box and breaking the second child along with it.  Applying <code>overflow: hidden</code> to the wrapper fixes the margin problem but clips the second child. Applying the margins to the first child didn't make it collapse with the parent since it's in a new block formatting context.  The only workaround I've found so far would be to do:  <code>.wrapper {\n    > * {\n        margin-left: 1.5rem;\n        margin-right: 1.5rem;\n    }\n}\n</code>  and increase the max-width of the wrapper by 3rem but I was hoping there was some solution that didn't require me to shift the margin from the wrapper to its children.  https://codepen.io/HybridCore/pen/jjoWmd    <code>body {\r\n  background-color: #000;\r\n  color: #FFF;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n.wrapper {\r\n  margin: 0 1.5rem;\r\n  max-width: 40rem;\r\n  width: 100%;\r\n}\r\n.fit_content_box {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.L {\r\n  min-width: 0;\r\n  flex: 1 0;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n}\r\n.R {\r\n  margin-left: 1rem;\r\n  height: 1rem;\r\n  width: 1rem;\r\n  background-color: #FFF;\r\n}\r\n.overflow {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.overflow>div {\r\n  width: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n}</code>  <code><body>\r\n  <div class=\"wrapper\">\r\n    <div class=\"fit_content_box\">\r\n      <p class=\"L\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure\r\n        dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n      <div class=\"R\"></div>\r\n    </div>\r\n    <div class=\"overflow\">\r\n      <div>\r\n        <p>0</p>\r\n      </div>\r\n      <div>\r\n        <p>12</p>\r\n      </div>\r\n      <div>\r\n        <p>24</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</body></code>   ",
        "link": "https://stackoverflow.com/questions/57021064/flexbox-child-with-overflow-hidden-overflowing-grandparent-margins",
        "score": 17,
        "tags": [
            "html",
            "css",
            "flexbox",
            "overflow"
        ],
        "question_id": 57021064,
        "answer_count": 2,
        "view_count": 2229,
        "comment_count": 2,
        "comments": [
            {
                "body": "@Michael_B, why set the <code>width: 0</code> which causes the issue? codepen.io/tarunlalwani/pen/voNGNw"
            }
        ],
        "answers": [
            {
                "score": 4,
                "body": "It appears that the source of the problem is <code>white-space: nowrap</code> , which is applied to the content element ( <code>.L</code> ) inside the first child item ( <code>.fit_content_box</code> ).  <code>.L {\n    border: solid 1px #FF0000;\n    min-width: 0;\n    flex: 1 0;\n    overflow: hidden;\n    white-space: nowrap;    <--- trouble maker\n    text-overflow: ellipsis;\n}\n</code>  If you remove that line of code, your side margins on <code>.wrapper</code> work as expected.  So the key questions are:   Why does the <code>white-space</code> property on a grand-child ( <code>.L</code> ) collapse the side margins of the grand-parent ( <code>.wrapper</code> )?  Why does the <code>white-space</code> property not collapse the side margins when they are applied to the parent ( <code>.fit_content_box</code> )?  Why does the <code>overflow</code> property, when applied to the grand-parent ( <code>.wrapper</code> ), with a value other than <code>visible</code> , allow the margins to hold firm on the grand-child ( <code>.L</code> )?   You wrote:   Applying the margins to the first child didn't make it collapse with the parent since it's in a new block formatting context.   Actually, this isn't an issue of conventional margin collapsing, because:   We're talking about horizontal margins, and horizontal margins never collapse , and  We're working inside a flex container, and margins inside a flex container never collapse .   So although a full understanding of the problem may lie in the block (or flex) formatting context, I'm not sure that's why margins on the parent don't collapse.  This is as far as I've gotten on this issue. I'll do more research when I have time. Or maybe somebody else can pick it up from here. "
            },
            {
                "score": 6,
                "body": "You mainly have two issues:   You are setting <code>width:100%</code> to the wrapper and this doesn't account for margin so you will logically have overflow and since the body is a flex container with <code>justify-content:center</code> the margin will overflow equally from both sides that's why you think it's not applied.  You are facing the <code>min-width</code> constraint of flexbox which is forcing you to set <code>width:100%</code> thinking it's the good solution. This same constraint is also preventing the element from shrinking lower than the 100% you specified (related: Why is a flex item limited to parent size? )   To fix this you need to remove <code>width:100%</code> from wrapper and consider <code>min-width:0</code> instead. You can also remove the <code>min-width</code> applied to <code>.L</code> and you need to consider <code>flex-shrink:0</code> on <code>.R</code> (or replace its width by <code>min-width</code> )    <code>body {\r\n  background-color: #000;\r\n  color: #FFF;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n.wrapper {\r\n  margin: 0 1.5rem;\r\n  max-width: 40rem;\r\n  min-width:0;\r\n}\r\n.fit_content_box {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.L {\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n}\r\n.R {\r\n  margin-left: 1rem;\r\n  flex-shrink:0;\r\n  height: 1rem;\r\n  width: 1rem;\r\n  background-color: #FFF;\r\n}\r\n.overflow {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.overflow>div {\r\n  width: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n}</code>  <code><body>\r\n  <div class=\"wrapper\">\r\n    <div class=\"fit_content_box\">\r\n      <p class=\"L\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure\r\n        dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n      <div class=\"R\"></div>\r\n    </div>\r\n    <div class=\"overflow\">\r\n      <div>\r\n        <p>0</p>\r\n      </div>\r\n      <div>\r\n        <p>12</p>\r\n      </div>\r\n      <div>\r\n        <p>24</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</body></code>    If you want the element to remain at least equal to <code>max-width</code> when there is a small amount of text add <code>flex-grow:1</code> :    <code>body {\r\n  background-color: #000;\r\n  color: #FFF;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n.wrapper {\r\n  margin: 0 1.5rem;\r\n  max-width: 40rem;\r\n  min-width:0;\r\n  flex-grow:1;\r\n}\r\n.fit_content_box {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.L {\r\n  flex-grow:1;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n}\r\n.R {\r\n  margin-left: 1rem;\r\n  flex-shrink:0;\r\n  height: 1rem;\r\n  width: 1rem;\r\n  background-color: #FFF;\r\n}\r\n.overflow {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.overflow>div {\r\n  width: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n}</code>  <code><body>\r\n  <div class=\"wrapper\">\r\n    <div class=\"fit_content_box\">\r\n      <p class=\"L\">Lorem ipsum dolor sit e dolor sit e</p>\r\n      <div class=\"R\"></div>\r\n    </div>\r\n    <div class=\"overflow\">\r\n      <div>\r\n        <p>0</p>\r\n      </div>\r\n      <div>\r\n        <p>12</p>\r\n      </div>\r\n      <div>\r\n        <p>24</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</body></code>     To better illustrate the (1) here is another example with overflowing margin that you can hardly notice:    <code>.container {\r\n  width:200px;\r\n  margin:auto;\r\n  display:flex;\r\n  justify-content:center;\r\n}\r\n.box {\r\n  height:50px;\r\n  width:100%;\r\n  background:red;\r\n}</code>  <code><div class=\"container\">\r\n  <div class=\"box\" style=\"margin:0 5966px\">a_long_text_to_avoid_the_shrink</div>\r\n</div>\r\n<div class=\"container\">\r\n  <div class=\"box\">a_long_text_to_avoid_the_shrink</div>\r\n</div></code>    You can see that we have a long text forcing our element to not shrink (the min-width constraint), the element is taking full width and we are centring the content. This will make the margin overflowing like if there is no margin.  If you break one rule then you will see the effect of the margin.  Remove the long text:    <code>.container {\r\n  width:200px;\r\n  margin:auto;\r\n  display:flex;\r\n  justify-content:center;\r\n}\r\n.box {\r\n  width:100%;\r\n  height:50px;\r\n  background:red;\r\n}</code>  <code><div class=\"container\">\r\n  <div class=\"box\" style=\"margin:0 5966px\">a long text to avoid the shrink</div>\r\n</div>\r\n<div class=\"container\">\r\n  <div class=\"box\">a long text to avoid the shrink</div>\r\n</div></code>    Remove the centring:    <code>.container {\r\n  width:200px;\r\n  margin:auto;\r\n  display:flex;\r\n}\r\n.box {\r\n  width:100%;\r\n  height:50px;\r\n  background:red;\r\n}</code>  <code><div class=\"container\">\r\n  <div class=\"box\" style=\"margin:0 5966px\">a_long_text_to_avoid_the_shrink</div>\r\n</div>\r\n<div class=\"container\">\r\n  <div class=\"box\">a_long_text_to_avoid_the_shrink</div>\r\n</div></code>    Make a different margin on each side    <code>.container {\r\n  width:200px;\r\n  margin:auto;\r\n  display:flex;\r\n  justify-content:center;\r\n}\r\n.box {\r\n  width:100%;\r\n  height:50px;\r\n  background:red;\r\n}</code>  <code><div class=\"container\">\r\n  <div class=\"box\" style=\"margin:0 500px 0 400px\">a_long_text_to_avoid_the_shrink</div>\r\n</div>\r\n<div class=\"container\">\r\n  <div class=\"box\">a_long_text_to_avoid_the_shrink</div>\r\n</div></code>     (2) The <code>white-space</code> is creating the min-width contraint preventing the element from shrinking.  Here is an exmaple to illustrate:    <code>.body {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 10px 100px;\r\n  border: 2px solid red;\r\n}\r\n.wrapper {\r\n  border: 1px solid;\r\n  margin: 0 20px;\r\n}\r\n.box {\r\n display:flex;\r\n}</code>  <code>The below is a logical behavior where the text will wrap and the margin are respected\r\n<div class=\"body\">\r\n  <div class=\"wrapper\">\r\n    <div class=\"box\">\r\n      <div>some long text here some long text here some long text here some long text here</div>\r\n    </div>\r\n  </div>\r\n</div>\r\nLet's add white-space:nowrap. We add a min-width contraint since we said to the text to never wrap thus our flex element will not shrink and overflow.\r\n<div class=\"body\">\r\n  <div class=\"wrapper\">\r\n    <div class=\"box\">\r\n      <div style=\"white-space:nowrap\">some long text here some long text here some long text here some long text here</div>\r\n    </div>\r\n  </div>\r\n</div>\r\nIf we add width:100% we force its width to be the same as the container BUT the margin aren't included and are kept outside (the text will logically overflow)\r\n<div class=\"body\">\r\n  <div class=\"wrapper\" style=\"width:100%\">\r\n    <div class=\"box\">\r\n      <div style=\"white-space:nowrap\">some long text here some long text here some long text here some long text here</div>\r\n    </div>\r\n  </div>\r\n</div>\r\nNow if we add min-width:0 we remove the constaint of minimum sizing and we can see the margin again even if we keep width:100% because the element will shrink by default\r\n<div class=\"body\">\r\n  <div class=\"wrapper\" style=\"width:100%;min-width:0\">\r\n    <div class=\"box\">\r\n      <div style=\"white-space:nowrap\">some long text here some long text here some long text here some long text here</div>\r\n    </div>\r\n  </div>\r\n</div></code>    The trick is that we are centring the element and applying the same margin on both side which will create the illusion of a collapsing margin but it's a simple overflow of the margin from both sides equally.  Let's change the margin slightly on one side to see a little offset to the other side:    <code>.body {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 10px 100px;\r\n  border: 2px solid red;\r\n}\r\n.wrapper {\r\n  border: 1px solid;\r\n  margin: 0 20px 0 40px;\r\n}\r\n.box {\r\n display:flex;\r\n}</code>  <code>The below is a logical behavior where the text will wrap and the margin are respected\r\n<div class=\"body\">\r\n  <div class=\"wrapper\">\r\n    <div class=\"box\">\r\n      <div>some long text here some long text here some long text here some long text here</div>\r\n    </div>\r\n  </div>\r\n</div>\r\nLet's add white-space:nowrap. We add a min-width contraint since we said to the text to never wrap thus our flex element will not shrink and overflow.\r\n<div class=\"body\">\r\n  <div class=\"wrapper\">\r\n    <div class=\"box\">\r\n      <div style=\"white-space:nowrap\">some long text here some long text here some long text here some long text here</div>\r\n    </div>\r\n  </div>\r\n</div>\r\nIf we add width:100% we force its width to be the same as the container BUT the margin aren't included and are kept outside (the text will logically overflow)\r\n<div class=\"body\">\r\n  <div class=\"wrapper\" style=\"width:100%\">\r\n    <div class=\"box\">\r\n      <div style=\"white-space:nowrap\">some long text here some long text here some long text here some long text here</div>\r\n    </div>\r\n  </div>\r\n</div>\r\nNow if we add min-width:0 we remove the constaint of minimum sizing and we can see the margin again even if we keep width:100% because the element will shrink by default\r\n<div class=\"body\">\r\n  <div class=\"wrapper\" style=\"width:100%;min-width:0\">\r\n    <div class=\"box\">\r\n      <div style=\"white-space:nowrap\">some long text here some long text here some long text here some long text here</div>\r\n    </div>\r\n  </div>\r\n</div></code>   "
            }
        ]
    },
    {
        "title": "Html table with width 100% does not work with long text",
        "question_body": "I have the following structure  <code><table cellspacing=\"0\" cellpadding=\"0\" width=\"100%\">\n<tr>\n    <td style=\"width:60px;\">\n        ...\n    </td>\n    <td>\n        <div style=\"width:100%;overflow-x:hidden;\">\n            PROBLEMS ARE HERE\n        </div>\n    </td>\n</tr>\n...\n</table>\n</code>  The first td takes 60px, the second one takes the rest of the 100%, but when I have some long text with no spaces and no dashes the table becomes larger then the 100%. How to display the non-breakable text in one line or on multiple lines (both ways are acceptable) and keep the table on 100% of the screen? I've tried to fix this with overflow-hidden but it has no effect.  Here's a screenshot of the problem: link ",
        "link": "https://stackoverflow.com/questions/8181870/html-table-with-width-100-does-not-work-with-long-text",
        "score": 15,
        "tags": [
            "html",
            "css",
            "html-table"
        ],
        "question_id": 8181870,
        "answer_count": 3,
        "view_count": 37245,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 6,
                "body": "There is a CSS3 property, <code>word-wrap:break-word;</code> that does exactly what you need. But unfortunately it doesn't work with table cells. I think you need to rethink your structure, opting for a table-less design.  I wrote this example for you  <code><style>\nsection { /* your table */\n    display:block;\n    width:300px;\n    background-color:#aaf;\n}\nsection:after {display:block; content:''; clear:left}\ndiv { /* your cells */\n    float:left;\n    width:100px;\n    background-color:#faa;\n    word-wrap:break-word;\n}\n</style>\n<section>\n    <div>Content.</div>\n    <div>Loooooooooooooooooooooooooooooooooooooooong cat.</div>\n</section>\n</code>  P.S: <code>word-wrap</code> is supported in IE 5.5+, Firefox 3.5+, and WebKit browsers such as Chrome and Safari. "
            },
            {
                "score": 6,
                "body": "try the following:  <code><table style=\"word-break:break-all;\" cellspacing=\"0\" cellpadding=\"0\" width=\"100%\">\n<tr>\n    <td style=\"width:60px;\">\n        ...\n    </td>\n    <td>\n        <div style=\"width:100%;overflow-x:hidden;\">\n            PROBLEMS ARE no longer HERE !\n        </div>\n    </td>\n</tr>\n...\n</table>\n</code> "
            }
        ]
    },
    {
        "title": "Positioning scrollable content under fixed flexbox navigation menu",
        "question_body": "I have the following snippet (need to view in full screen mode), that I'm trying to place the <code><main></code> element directly under the <code><header></code> element. I have the <code><header></code> in a fixed position because I want it to stay at the top of the screen as the user scrolls through the content in the <code><main></code> element. I've tried everything I know, but the best I can come up with is having the <code><header></code> element placed on top of the <code><main></code> element, which cuts off a big chunk of the content.  The closest possible solution I've come up with is putting a guesstimated top padding on the <code><main></code> element so it will clear the <code><header></code> . However, this solution doesn't account for various screen sizes very well, since I'm using rem sizing instead of px. The top padding idea gets even worse when placing several elements inside the <code><header></code> that use relative or percentage based height. On one screen size everything may line up perfect, and on a different screen size the content can be way off.  Lastly, I know I can use jQuery to set the top padding dynamically, but it doesn't always seem to work that well. Wondering is there's a pure css/html solution.  Can anyone tell me what I'm missing here? Is my top padding method the only workable solution?    <code>$(document).ready(function() {\r\n  $('#navToggle').click(function() {\r\n    $(\"div#bottom-container > nav\").slideToggle();\r\n  });\r\n  $(window).resize(function() {\r\n      if(window.innerWidth >= \"751\") {\r\n          $(\"header > div#bottom-container > nav\").show();\r\n      }else {\r\n          $(\"header > div#bottom-container > nav\").hide();\r\n      }\r\n  });\r\n  $(\"header > div#bottom-container > nav > ul > li > a\").click(function(e) {\r\n     if (window.innerWidth <= \"750\") {\r\n       if ($(this).siblings().size() > 0) {\r\n         e.preventDefault();\r\n         $(this).siblings().slideToggle(\"slow\");\r\n      }\r\n    }\r\n  });\r\n   $(\"header > div#bottom-container > nav > ul > li\").hover(function() {\r\n        if (window.innerWidth >= \"751\") {\r\n          if ($(this).children(\"nav\").size() > 0) {\r\n            $(this).children(\"nav\").stop().show();\r\n         }\r\n       }\r\n     },function(){\r\n       if (window.innerWidth >= \"751\") {\r\n         if ($(this).children(\"nav\").size() > 0) {\r\n           $(this).children(\"nav\").hide();\r\n        }\r\n      }\r\n  });\r\n});</code>  <code>* {\r\n  margin: 0;\r\n}\r\n@media (min-width: 48rem) {\r\n  :root {\r\n    font-size: calc(1rem + ((1vw - .48rem) * 1.389));\r\n  }\r\n}\r\nbody {\r\n  background: #eee;\r\n  font-family: \"HelveticaNeue-Light\", Arial;\r\n  height: auto !important;\r\n}\r\n#head-wrap{\r\n    margin: 0 auto;\r\n    position: relative;\r\n    width:100%;\r\n}\r\n#second-wrap{\r\n    position: fixed;\r\n    width:100%;\r\n    z-index:999;\r\n}\r\nmain{\r\n  height:4000px;\r\n  position:relative;\r\n  padding-top:13rem;\r\n}\r\nheader{\r\n  position: absolute;\r\n  top:0;\r\n  left:0;\r\n  width:100%;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  height:200rem;\r\n}\r\n#navToggle {\r\n  background-color: rgba(0, 0, 0, .15);\r\n  position: relative;\r\n  right: 0;\r\n  top: 0;\r\n  z-index:999;\r\n  height: 2.6rem;\r\n}\r\n#navToggle>a {\r\n  color: rgba(255, 255, 255, .85);\r\n  display: block;\r\n  font-size: 0.85em;\r\n  font-weight: 600;\r\n  padding: 0 2.5rem;\r\n  text-decoration: none;\r\n  transition: all 300ms ease;\r\n  padding-top:.9rem;\r\n}\r\n#bottom-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  box-shadow: 2px 5px 10px 1px rgba(0, 0, 0, 0.55);\r\n}\r\n#bottom-container>nav {\r\n  background-color: rgb(250, 209, 14);\r\n  display: none;\r\n  flex: 1;\r\n}\r\n#bottom-container nav>ul {\r\n  list-style-type: none;\r\n}\r\n#bottom-container nav>ul>li {\r\n  position: relative;\r\n}\r\n#bottom-container nav>ul>li>a {\r\n  display: block;\r\n  color: rgba(0, 0, 0, .65);\r\n  padding: 1.3rem 0;\r\n  text-decoration: none;\r\n}\r\n#bottom-container nav>ul>li>a span.toggle {\r\n  background-color: rgba(0, 0, 0, .05);\r\n  color: rgba(0, 0, 0, .25);\r\n  padding: 2px 8px;\r\n}\r\n#bottom-container>nav>ul>li>nav {\r\n  display: none;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  top:100%;\r\n  right: 5%;\r\n  width: 90%;\r\n  z-index: 100;\r\n  background-color: rgb(250, 250, 250);\r\n  margin-bottom:10rem;\r\n}\r\nheader>nav>ul>li>nav>ul>li>a {\r\n  color: rgba(255, 255, 255, .85);\r\n}\r\n/*\r\n/////////////////////////////////////////////////\r\n/////////////////////////////////////////////////\r\n////   THIS IS THE ONLY FIX I KNOW OF  //////////\r\n*/\r\nmain{\r\n  padding-top:5rem;\r\n}\r\n/*\r\n////////////////////////////////////////////////\r\n////////////////////////////////////////////////\r\n*/\r\n/* Medium screens */\r\n@media all and (min-width: 751px) {\r\n  header{\r\n    overflow-y:visible;\r\n    overflow-x:visible;\r\n    padding-bottom:0;\r\n  }\r\n  #navToggle {\r\n    display: none;\r\n  }\r\n  #bottom-container {\r\n    background-color: rgb(250, 209, 14);\r\n    width: 100%;\r\n    border-top: calc(5vh + 2vw) solid yellow;\r\n  }\r\n  #bottom-container>nav {\r\n    display: block;\r\n  }\r\n  #bottom-container>nav>ul {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: row;\r\n    height: 3rem;\r\n  }\r\n  #bottom-container nav>ul>li {\r\n    position: static;\r\n    flex:1;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  #bottom-container nav>ul>li>a {\r\n   padding: 0;\r\n  }\r\n  #bottom-container nav>ul>li>a span.toggle {\r\n    display: none;\r\n  }\r\n  #bottom-container >nav>ul>li>nav>ul>li{\r\n    line-height: 2.5rem;\r\n  }\r\n  #bottom-container>nav>ul>li>nav {\r\n    margin-top:-194.5rem;\r\n  }\r\n}</code>  <code><html>\r\n<head>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.4/jquery.min.js\"></script>\r\n</head>\r\n<body>\r\n<div id=\"head-wrap\">\r\n  <div id=\"second-wrap\">\r\n    <header>\r\n      <div id=\"navToggle\"><a href=\"#\">Menu</a></div>\r\n      <div id='bottom-container'>\r\n        <nav>\r\n          <ul>\r\n            <li><a href=\"#\">ITEM ONE</a></li>\r\n            <li class=\"sub1\">\r\n              <a href=\"#\">ITEM TWO <span class=\"toggle\">Expand</span></a>\r\n            <nav>\r\n              <ul>\r\n                <li><a href=\"#\">Sub Item 1</a></li>\r\n                <li><a href=\"#\">Sub Item 2</a></li>\r\n                <li><a href=\"#\">Sub Item 3</a></li>\r\n                <li><a href=\"#\">Sub Item 4</a></li>\r\n              </ul>\r\n            </nav>\r\n            <li><a href=\"#\">ITEM THREE</a></li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  </div>\r\n</div>\r\n<main>\r\n  <p>content top not visible but should be able to see</P>\r\n  <p>line 1</P>\r\n  <p>line 2</P>\r\n  <p>line 3</P>\r\n  <p>line 4</P>\r\n  <p>line 5</P>\r\n  <p>line 6</P>\r\n  <p>line 7</P>\r\n  <p>line 8</P>\r\n  <p>line 9</P>\r\n  <p>line 10</P>\r\n    <p>line 11</P>\r\n    <p>line 12</P>\r\n    <p>line 13</P>\r\n    <p>line 14</P>\r\n    <p>line 15</P>\r\n    <p>line 16</P>\r\n    <p>line 17</P>\r\n    <p>line 18</P>\r\n    <p>line 19</P>\r\n    <p>line 20</P>\r\n</main>\r\n</body>\r\n</html></code>   ",
        "link": "https://stackoverflow.com/questions/59691478/positioning-scrollable-content-under-fixed-flexbox-navigation-menu",
        "score": 15,
        "tags": [
            "html",
            "css",
            "css-position",
            "fixed"
        ],
        "question_id": 59691478,
        "answer_count": 6,
        "view_count": 2172,
        "comment_count": 8,
        "comments": [
            {
                "body": "That's because of the padding-top placed on the <code>main</code> element. Clunky, but it kind of works. Wondering if there a better solution."
            },
            {
                "body": "My example is a simplified version of my live version. In my live version there are several flex elements in my <code><header></code> element that all use either percentage or relative heights. This makes adding a fixed top pad to the <code><main></code> element almost useless. The <code><main></code> element may line up fine on one screen size and be way off on another. Looks like jQuery may be my only solution here with a css top pad back-up on the <code><main></code> element."
            },
            {
                "body": "Did you try with CSS <code>position: sticky</code>  developer.mozilla.org/en-US/docs/Web/CSS/position instead of using JS ?"
            },
            {
                "body": "Inspect the height of the header, figure out the height of it and add a margin top to the main content?"
            },
            {
                "body": "@Arthur I did try <code>position: sticky</code> but couldn't get that to work either."
            }
        ],
        "answers": [
            {
                "score": 2,
                "body": "I have made same result (correct me, if I'm wrong), but without js. And it seems, that whatever header height is considered by content below.  The main idea - not to wrap <code><header></code> and to apply to it <code>position: sticky</code> , <code>z-index</code> also not necessary.  I didn't use exactly your code, but tried to repeat the result. Hope you will find some useful ideas for your problem.  Some answers' code when screen width is small and toggle the menu, it pushs down main content. My code doesn't contain that issue.    <code>* {\r\n    margin: 0;\r\n}\r\n@media (min-width: 48rem) {\r\n    :root {\r\n        font-size: calc(1rem + ((1vw - .48rem) * 1.389));\r\n    }\r\n}\r\nbody {\r\n    background: #eee;\r\n    font-family: \"HelveticaNeue-Light\", Arial;\r\n    height: auto !important;\r\n }\r\nheader {\r\n    width: 100%;\r\n    position: sticky;\r\n    top: 0;\r\n    box-shadow: 2px 5px 10px 1px rgba(0, 0, 0, 0.55);\r\n}\r\n.wrapper {\r\n    position: relative;\r\n    background-color: rgba(0, 0, 0, .15);\r\n}\r\n#navToggle {\r\n    display: inline-block;\r\n    height: 2.6rem;\r\n}\r\n#navToggle > a {\r\n    color: rgba(255, 255, 255, .85);\r\n    display: block;\r\n    font-size: 0.85em;\r\n    font-weight: 600;\r\n    padding: 0 2.5rem;\r\n    text-decoration: none;\r\n    transition: all 300ms ease;\r\n    padding-top: .9rem;\r\n}\r\n#navToggle:hover + #bottom-container, #bottom-container:hover  {\r\n    visibility: visible;\r\n    opacity: 1;\r\n    transition: all 0.2s ease-in-out;\r\n}\r\n#bottom-container {\r\n    background-color: rgb(250, 209, 14);\r\n    width: 100%;\r\n    visibility: hidden;\r\n    opacity: 0;\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 0;\r\n}\r\n#bottom-container > nav  ul {\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style-type: none;\r\n}\r\n#bottom-container > nav > ul {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n    align-items: center;\r\n}\r\n#bottom-container > nav > ul li {\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n}\r\n#bottom-container nav > ul > li > a {\r\n    display: block;\r\n    color: rgba(0, 0, 0, .65);\r\n    padding: 1.3rem 0;\r\n    text-decoration: none;\r\n}\r\n.sub1 {\r\n    position: relative;\r\n}\r\n.sub1 > nav {\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 0;\r\n    visibility: hidden;\r\n    opacity: 0;\r\n    background-color: rgb(250, 250, 250);\r\n    width: 100%;\r\n    transition: all 0.2s ease-in-out;\r\n}\r\n.sub1 > nav ul li {\r\n    text-align: center;\r\n}\r\n.sub1 > a:hover + nav, .sub1 > a + nav:hover {\r\n    visibility: visible;\r\n    opacity: 1;\r\n    transition: all 0.2s ease-in-out;\r\n}\r\n#bottom-container nav>ul>li>a span.toggle {\r\n    background-color: rgba(0, 0, 0, .05);\r\n    color: rgba(0, 0, 0, .25);\r\n    padding: 2px 8px;\r\n}\r\nmain {\r\n    height:4000px;\r\n}\r\n@media (min-width: 751px){\r\n    #bottom-container > nav > ul {\r\n        flex-direction: row;\r\n        height: 3rem;\r\n    }\r\n    #bottom-container nav>ul>li>a span.toggle {\r\n        display: none;\r\n    }\r\n    #bottom-container {\r\n        height: 100%;\r\n        border-top: calc(5vh + 2vw) solid yellow;\r\n        visibility: visible;\r\n        opacity: 1;\r\n        position: static;\r\n    }\r\n    #navToggle {\r\n        display: none;\r\n    }\r\n}</code>  <code><!doctype html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <title></title>\r\n    <link rel=\"stylesheet\" href=\"styles.css\">\r\n</head>\r\n<body>\r\n    <header>\r\n        <div class=\"wrapper\">\r\n            <div id=\"navToggle\"><a href=\"#\">Menu</a></div>\r\n            <div id='bottom-container'>\r\n                <nav>\r\n                    <ul>\r\n                        <li><a href=\"#\">ITEM ONE</a></li>\r\n                        <li class=\"sub1\">\r\n                            <a href=\"#\">ITEM TWO <span class=\"toggle\">Expand</span></a>\r\n                            <nav>\r\n                                <ul>\r\n                                    <li><a href=\"#\">Sub Item 1</a></li>\r\n                                    <li><a href=\"#\">Sub Item 2</a></li>\r\n                                    <li><a href=\"#\">Sub Item 3</a></li>\r\n                                    <li><a href=\"#\">Sub Item 4</a></li>\r\n                                </ul>\r\n                            </nav>\r\n                        <li><a href=\"#\">ITEM THREE</a></li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    </header>\r\n    <main>\r\n        <p>content top not visible but should be able to see</P>\r\n        <p>line 1</P>\r\n        <p>line 2</P>\r\n        <p>line 3</P>\r\n        <p>line 4</P>\r\n        <p>line 5</P>\r\n        <p>line 6</P>\r\n        <p>line 7</P>\r\n        <p>line 8</P>\r\n        <p>line 9</P>\r\n        <p>line 10</P>\r\n        <p>line 11</P>\r\n        <p>line 12</P>\r\n        <p>line 13</P>\r\n        <p>line 14</P>\r\n        <p>line 15</P>\r\n        <p>line 16</P>\r\n        <p>line 17</P>\r\n        <p>line 18</P>\r\n        <p>line 19</P>\r\n        <p>line 20</P>\r\n    </main>\r\n</body>\r\n</html></code>   "
            },
            {
                "score": 4,
                "body": "This is sort of a rough hack, but you could create a second header which hides behind the real one which stays in the document flow and pushes down the <code><main></code> .  Just duplicate the elements that make up the header, give them a lower <code>z-index</code> and switch it from <code>position: fixed</code> to <code>position: relative</code> . Then just get rid of the height of the hidden <code><header></code> element and remove the <code>padding-top</code> from <code><main></code> .    <code>$(document).ready(function() {\r\n  $('#navToggle').click(function() {\r\n    $(\"div#bottom-container > nav\").slideToggle();\r\n  });\r\n  $(window).resize(function() {\r\n      if(window.innerWidth >= \"751\") {\r\n          $(\"header > div#bottom-container > nav\").show();\r\n      }else {\r\n          $(\"header > div#bottom-container > nav\").hide();\r\n      }\r\n  });\r\n  $(\"header > div#bottom-container > nav > ul > li > a\").click(function(e) {\r\n     if (window.innerWidth <= \"750\") {\r\n       if ($(this).siblings().size() > 0) {\r\n         e.preventDefault();\r\n         $(this).siblings().slideToggle(\"slow\");\r\n      }\r\n    }\r\n  });\r\n   $(\"header > div#bottom-container > nav > ul > li\").hover(function() {\r\n        if (window.innerWidth >= \"751\") {\r\n          if ($(this).children(\"nav\").size() > 0) {\r\n            $(this).children(\"nav\").stop().show();\r\n         }\r\n       }\r\n     },function(){\r\n       if (window.innerWidth >= \"751\") {\r\n         if ($(this).children(\"nav\").size() > 0) {\r\n           $(this).children(\"nav\").hide();\r\n        }\r\n      }\r\n  });\r\n});</code>  <code>* {\r\n  margin: 0;\r\n}\r\n@media (min-width: 48rem) {\r\n  :root {\r\n    font-size: calc(1rem + ((1vw - .48rem) * 1.389));\r\n  }\r\n}\r\nbody {\r\n  background: #eee;\r\n  font-family: \"HelveticaNeue-Light\", Arial;\r\n  height: auto !important;\r\n}\r\n#head-wrap,\r\n#hidden-wrap{\r\n    margin: 0 auto;\r\n    position: relative;\r\n    width:100%;\r\n}\r\n#hidden-wrap header {\r\n  height: inherit;\r\n  position: relative;\r\n}\r\n#second-wrap{\r\n    position: fixed;\r\n    width:100%;\r\n    z-index:999;\r\n}\r\n#second-wrap2{\r\n    position: relative;\r\n    width:100%;\r\n    z-index:998;\r\n}\r\nmain{\r\n  height:4000px;\r\n  position:relative;\r\n  /* padding-top:13rem; */\r\n}\r\nheader{\r\n  position: absolute;\r\n  top:0;\r\n  left:0;\r\n  width:100%;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  height:200rem;\r\n}\r\n#navToggle,\r\n#navToggle2{\r\n  background-color: rgba(0, 0, 0, .15);\r\n  position: relative;\r\n  right: 0;\r\n  top: 0;\r\n  z-index:999;\r\n  height: 2.6rem;\r\n}\r\n#navToggle>a,\r\n#navToggle2>a{\r\n  color: rgba(255, 255, 255, .85);\r\n  display: block;\r\n  font-size: 0.85em;\r\n  font-weight: 600;\r\n  padding: 0 2.5rem;\r\n  text-decoration: none;\r\n  transition: all 300ms ease;\r\n  padding-top:.9rem;\r\n}\r\n#bottom-container,\r\n#bottom-container2{\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  box-shadow: 2px 5px 10px 1px rgba(0, 0, 0, 0.55);\r\n}\r\n#bottom-container>nav,\r\n#bottom-container2>nav{\r\n  background-color: rgb(250, 209, 14);\r\n  display: none;\r\n  flex: 1;\r\n}\r\n#bottom-container nav>ul,\r\n#bottom-container2 nav>ul{\r\n  list-style-type: none;\r\n}\r\n#bottom-container nav>ul>li,\r\n#bottom-container2 nav>ul>li{\r\n  position: relative;\r\n}\r\n#bottom-container nav>ul>li>a,\r\n#bottom-container2 nav>ul>li>a{\r\n  display: block;\r\n  color: rgba(0, 0, 0, .65);\r\n  padding: 1.3rem 0;\r\n  text-decoration: none;\r\n}\r\n#bottom-container nav>ul>li>a span.toggle,\r\n#bottom-container2 nav>ul>li>a span.toggle{\r\n  background-color: rgba(0, 0, 0, .05);\r\n  color: rgba(0, 0, 0, .25);\r\n  padding: 2px 8px;\r\n}\r\n#bottom-container>nav>ul>li>nav,\r\n#bottom-container2>nav>ul>li>nav{\r\n  display: none;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  top:100%;\r\n  right: 5%;\r\n  width: 90%;\r\n  z-index: 100;\r\n  background-color: rgb(250, 250, 250);\r\n  margin-bottom:10rem;\r\n}\r\nheader>nav>ul>li>nav>ul>li>a {\r\n  color: rgba(255, 255, 255, .85);\r\n}\r\n/*\r\n/////////////////////////////////////////////////\r\n/////////////////////////////////////////////////\r\n////   THIS IS THE ONLY FIX I KNOW OF  //////////\r\n*/\r\nmain{\r\n  /*padding-top:5rem;*/\r\n}\r\n/*\r\n////////////////////////////////////////////////\r\n////////////////////////////////////////////////\r\n*/\r\n/* Medium screens */\r\n@media all and (min-width: 751px) {\r\n  header{\r\n    overflow-y:visible;\r\n    overflow-x:visible;\r\n    padding-bottom:0;\r\n  }\r\n  #navToggle,\r\n  #navToggle2{\r\n    display: none;\r\n  }\r\n  #bottom-container,\r\n  #bottom-container2{\r\n    background-color: rgb(250, 209, 14);\r\n    width: 100%;\r\n    border-top: calc(5vh + 2vw) solid yellow;\r\n  }\r\n  #bottom-container>nav,\r\n  #bottom-container2>nav{\r\n    display: block;\r\n  }\r\n  #bottom-container>nav>ul,\r\n  #bottom-container2>nav>ul{\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: row;\r\n    height: 3rem;\r\n  }\r\n  #bottom-container nav>ul>li,\r\n  #bottom-container2 nav>ul>li{\r\n    position: static;\r\n    flex:1;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  #bottom-container nav>ul>li>a,\r\n  #bottom-container2 nav>ul>li>a{\r\n   padding: 0;\r\n  }\r\n  #bottom-container nav>ul>li>a span.toggle,\r\n  #bottom-container2 nav>ul>li>a span.toggle{\r\n    display: none;\r\n  }\r\n  #bottom-container >nav>ul>li>nav>ul>li,\r\n  #bottom-container2 >nav>ul>li>nav>ul>li{\r\n    line-height: 2.5rem;\r\n  }\r\n  #bottom-container>nav>ul>li>nav,\r\n  #bottom-container2>nav>ul>li>nav{\r\n    margin-top:-194.5rem;\r\n  }\r\n}</code>  <code><html>\r\n<head>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.4/jquery.min.js\"></script>\r\n</head>\r\n<body>\r\n<div id=\"head-wrap\">\r\n  <div id=\"second-wrap\">\r\n    <header>\r\n      <div id=\"navToggle\"><a href=\"#\">Menu</a></div>\r\n      <div id='bottom-container'>\r\n        <nav>\r\n          <ul>\r\n            <li><a href=\"#\">ITEM ONE</a></li>\r\n            <li class=\"sub1\">\r\n              <a href=\"#\">ITEM TWO <span class=\"toggle\">Expand</span></a>\r\n            <nav>\r\n              <ul>\r\n                <li><a href=\"#\">Sub Item 1</a></li>\r\n                <li><a href=\"#\">Sub Item 2</a></li>\r\n                <li><a href=\"#\">Sub Item 3</a></li>\r\n                <li><a href=\"#\">Sub Item 4</a></li>\r\n              </ul>\r\n            </nav>\r\n            <li><a href=\"#\">ITEM THREE</a></li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  </div>\r\n</div>\r\n<div id=\"hidden-wrap\">\r\n  <div id=\"second-wrap2\">\r\n    <header>\r\n      <div id=\"navToggle2\"><a href=\"#\">Menu</a></div>\r\n      <div id='bottom-container2'>\r\n        <nav>\r\n          <ul>\r\n            <li><a href=\"#\">ITEM ONE</a></li>\r\n            <li class=\"sub1\">\r\n              <a href=\"#\">ITEM TWO <span class=\"toggle\">Expand</span></a>\r\n            <nav>\r\n              <ul>\r\n                <li><a href=\"#\">Sub Item 1</a></li>\r\n                <li><a href=\"#\">Sub Item 2</a></li>\r\n                <li><a href=\"#\">Sub Item 3</a></li>\r\n                <li><a href=\"#\">Sub Item 4</a></li>\r\n              </ul>\r\n            </nav>\r\n            <li><a href=\"#\">ITEM THREE</a></li>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  </div>\r\n</div>\r\n<main>\r\n  <p>now you can see this text</p>\r\n  <p>line 1</p>\r\n  <p>line 2</p>\r\n  <p>line 3</p>\r\n  <p>line 4</p>\r\n  <p>line 5</p>\r\n  <p>line 6</p>\r\n  <p>line 7</p>\r\n  <p>line 8</p>\r\n  <p>line 9</p>\r\n  <p>line 10</p>\r\n    <p>line 11</p>\r\n    <p>line 12</p>\r\n    <p>line 13</p>\r\n    <p>line 14</p>\r\n    <p>line 15</p>\r\n    <p>line 16</p>\r\n    <p>line 17</p>\r\n    <p>line 18</p>\r\n    <p>line 19</p>\r\n    <p>line 20</p>\r\n</main>\r\n</body>\r\n</html></code>    Edit: I don't know why I didn't think of this before. Just set <code>#headwrap</code> and <code><main></code> to <code>position: relative</code> . Then, remove the <code>height</code> on <code><main></code> and set <code><body></code> to <code>display: flex</code> and <code>flex-direction: column</code> . Finally, wrap the contents of <code><main></code> in a <code><div></code> .  Here, I've set the height of the div to 4000px to demonstrate the scrolling.    <code>$(document).ready(function() {\r\n  $('#navToggle').click(function() {\r\n    $(\"div#bottom-container > nav\").slideToggle();\r\n  });\r\n  $(window).resize(function() {\r\n      if(window.innerWidth >= \"751\") {\r\n          $(\"header > div#bottom-container > nav\").show();\r\n      }else {\r\n          $(\"header > div#bottom-container > nav\").hide();\r\n      }\r\n  });\r\n  $(\"header > div#bottom-container > nav > ul > li > a\").click(function(e) {\r\n     if (window.innerWidth <= \"750\") {\r\n       if ($(this).siblings().size() > 0) {\r\n         e.preventDefault();\r\n         $(this).siblings().slideToggle(\"slow\");\r\n      }\r\n    }\r\n  });\r\n   $(\"header > div#bottom-container > nav > ul > li\").hover(function() {\r\n        if (window.innerWidth >= \"751\") {\r\n          if ($(this).children(\"nav\").size() > 0) {\r\n            $(this).children(\"nav\").stop().show();\r\n         }\r\n       }\r\n     },function(){\r\n       if (window.innerWidth >= \"751\") {\r\n         if ($(this).children(\"nav\").size() > 0) {\r\n           $(this).children(\"nav\").hide();\r\n        }\r\n      }\r\n  });\r\n});</code>  <code>* {\r\n  margin: 0;\r\n}\r\n@media (min-width: 48rem) {\r\n  :root {\r\n    font-size: calc(1rem + ((1vw - .48rem) * 1.389));\r\n  }\r\n}\r\nbody {\r\n  background: #eee;\r\n  font-family: \"HelveticaNeue-Light\", Arial;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n#head-wrap{\r\n    margin: 0 auto;\r\n    position: relative;\r\n    width:100%;\r\n}\r\n#second-wrap{\r\n    position: relative;\r\n    width:100%;\r\n    z-index:999;\r\n}\r\nmain{\r\n  /*height:4000px;*/\r\n  position:relative;\r\n  overflow: auto;\r\n  /* padding-top:13rem; */\r\n}\r\nmain>div {\r\n  height: 4000px;\r\n}\r\nheader{\r\n  position: relative;\r\n  top:0;\r\n  left:0;\r\n  width:100%;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  /*height:200rem;*/\r\n}\r\n#navToggle{\r\n  background-color: rgba(0, 0, 0, .15);\r\n  position: relative;\r\n  right: 0;\r\n  top: 0;\r\n  z-index:999;\r\n  height: 2.6rem;\r\n}\r\n#navToggle>a{\r\n  color: rgba(255, 255, 255, .85);\r\n  display: block;\r\n  font-size: 0.85em;\r\n  font-weight: 600;\r\n  padding: 0 2.5rem;\r\n  text-decoration: none;\r\n  transition: all 300ms ease;\r\n  padding-top:.9rem;\r\n}\r\n#bottom-container{\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  box-shadow: 2px 5px 10px 1px rgba(0, 0, 0, 0.55);\r\n}\r\n#bottom-container>nav{\r\n  background-color: rgb(250, 209, 14);\r\n  display: none;\r\n  flex: 1;\r\n}\r\n#bottom-container nav>ul{\r\n  list-style-type: none;\r\n}\r\n#bottom-container nav>ul>li{\r\n  position: relative;\r\n}\r\n#bottom-container nav>ul>li>a{\r\n  display: block;\r\n  color: rgba(0, 0, 0, .65);\r\n  padding: 1.3rem 0;\r\n  text-decoration: none;\r\n}\r\n#bottom-container nav>ul>li>a span.toggle{\r\n  background-color: rgba(0, 0, 0, .05);\r\n  color: rgba(0, 0, 0, .25);\r\n  padding: 2px 8px;\r\n}\r\n#bottom-container>nav>ul>li>nav{\r\n  display: none;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  top:100%;\r\n  right: 5%;\r\n  width: 90%;\r\n  z-index: 100;\r\n  background-color: rgb(250, 250, 250);\r\n  margin-bottom:10rem;\r\n}\r\nheader>nav>ul>li>nav>ul>li>a {\r\n  color: rgba(255, 255, 255, .85);\r\n}\r\n/*\r\n/////////////////////////////////////////////////\r\n/////////////////////////////////////////////////\r\n////   THIS IS THE ONLY FIX I KNOW OF  //////////\r\n*/\r\nmain{\r\n  /*padding-top:5rem;*/\r\n}\r\n/*\r\n////////////////////////////////////////////////\r\n////////////////////////////////////////////////\r\n*/\r\n/* Medium screens */\r\n@media all and (min-width: 751px) {\r\n  header{\r\n    overflow-y:visible;\r\n    overflow-x:visible;\r\n    padding-bottom:0;\r\n  }\r\n  #navToggle{\r\n    display: none;\r\n  }\r\n  #bottom-container{\r\n    background-color: rgb(250, 209, 14);\r\n    width: 100%;\r\n    border-top: calc(5vh + 2vw) solid yellow;\r\n  }\r\n  #bottom-container>nav{\r\n    display: block;\r\n  }\r\n  #bottom-container>nav>ul{\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: row;\r\n    height: 3rem;\r\n  }\r\n  #bottom-container nav>ul>li{\r\n    position: static;\r\n    flex:1;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  #bottom-container nav>ul>li>a{\r\n   padding: 0;\r\n  }\r\n  #bottom-container nav>ul>li>a span.toggle{\r\n    display: none;\r\n  }\r\n  #bottom-container >nav>ul>li>nav>ul>li{\r\n    line-height: 2.5rem;\r\n  }\r\n  #bottom-container>nav>ul>li>nav{\r\n    margin-top:-194.5rem;\r\n  }\r\n}</code>  <code><html>\r\n<head>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.4/jquery.min.js\"></script>\r\n</head>\r\n<body>\r\n<div id=\"head-wrap\">\r\n  <div id=\"second-wrap\">\r\n    <header>\r\n      <div id=\"navToggle\"><a href=\"#\">Menu</a></div>\r\n      <div id='bottom-container'>\r\n        <nav>\r\n          <ul>\r\n            <li><a href=\"#\">ITEM ONE</a></li>\r\n            <li class=\"sub1\">\r\n              <a href=\"#\">ITEM TWO <span class=\"toggle\">Expand</span></a>\r\n            <nav>\r\n              <ul>\r\n                <li><a href=\"#\">Sub Item 1</a></li>\r\n                <li><a href=\"#\">Sub Item 2</a></li>\r\n                <li><a href=\"#\">Sub Item 3</a></li>\r\n                <li><a href=\"#\">Sub Item 4</a></li>\r\n              </ul>\r\n            </nav>\r\n            <li><a href=\"#\">ITEM THREE</a></li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  </div>\r\n</div>\r\n<main>\r\n  <div>\r\n  <p>now you can see this text</p>\r\n  <p>line 1</p>\r\n  <p>line 2</p>\r\n  <p>line 3</p>\r\n  <p>line 4</p>\r\n  <p>line 5</p>\r\n  <p>line 6</p>\r\n  <p>line 7</p>\r\n  <p>line 8</p>\r\n  <p>line 9</p>\r\n  <p>line 10</p>\r\n    <p>line 11</p>\r\n    <p>line 12</p>\r\n    <p>line 13</p>\r\n    <p>line 14</p>\r\n    <p>line 15</p>\r\n    <p>line 16</p>\r\n    <p>line 17</p>\r\n    <p>line 18</p>\r\n    <p>line 19</p>\r\n    <p>line 20</p>\r\n    </div>\r\n</main>\r\n</body>\r\n</html></code>   "
            },
            {
                "score": 4,
                "body": "Please remove first top two div containers of header element as there is no need to wrap header. header element is already container.  Please remove <code>height:200rem;</code> in header style and <code>padding-top: 13rem or 5rem</code> for main element's style.  Finally, please update header style's position property to sticky instead of <code>absolute</code> and add z-index.  Below, I have tested it and updated codebase.    <code>$(document).ready(function() {\r\n  $('#navToggle').click(function() {\r\n    $(\"div#bottom-container > nav\").slideToggle();\r\n  });\r\n  $(window).resize(function() {\r\n      if(window.innerWidth >= \"751\") {\r\n          $(\"header > div#bottom-container > nav\").show();\r\n      }else {\r\n          $(\"header > div#bottom-container > nav\").hide();\r\n      }\r\n  });\r\n  $(\"header > div#bottom-container > nav > ul > li > a\").click(function(e) {\r\n     if (window.innerWidth <= \"750\") {\r\n       if ($(this).siblings().size() > 0) {\r\n         e.preventDefault();\r\n         $(this).siblings().slideToggle(\"slow\");\r\n      }\r\n    }\r\n  });\r\n   $(\"header > div#bottom-container > nav > ul > li\").hover(function() {\r\n        if (window.innerWidth >= \"751\") {\r\n          if ($(this).children(\"nav\").size() > 0) {\r\n            $(this).children(\"nav\").stop().show();\r\n         }\r\n       }\r\n     },function(){\r\n       if (window.innerWidth >= \"751\") {\r\n         if ($(this).children(\"nav\").size() > 0) {\r\n           $(this).children(\"nav\").hide();\r\n        }\r\n      }\r\n  });\r\n});</code>  <code>* {\r\n  margin: 0;\r\n}\r\n@media (min-width: 48rem) {\r\n  :root {\r\n    font-size: calc(1rem + ((1vw - .48rem) * 1.389));\r\n  }\r\n}\r\nbody {\r\n  background: #eee;\r\n  font-family: \"HelveticaNeue-Light\", Arial;\r\n  height: auto !important;\r\n}\r\nmain{\r\n  height:4000px;\r\n  position:relative;\r\n}\r\nheader{\r\n  position: sticky;\r\n  z-index: 100;\r\n  top:0;\r\n  left:0;\r\n  width:100%;\r\n}\r\n#navToggle {\r\n  background-color: rgba(0, 0, 0, .15);\r\n  position: relative;\r\n  right: 0;\r\n  top: 0;\r\n  z-index:999;\r\n  height: 2.6rem;\r\n}\r\n#navToggle>a {\r\n  color: rgba(255, 255, 255, .85);\r\n  display: block;\r\n  font-size: 0.85em;\r\n  font-weight: 600;\r\n  padding: 0 2.5rem;\r\n  text-decoration: none;\r\n  transition: all 300ms ease;\r\n  padding-top:.9rem;\r\n}\r\n#bottom-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  box-shadow: 2px 5px 10px 1px rgba(0, 0, 0, 0.55);\r\n}\r\n#bottom-container>nav {\r\n  background-color: rgb(250, 209, 14);\r\n  display: none;\r\n  flex: 1;\r\n}\r\n#bottom-container nav>ul {\r\n  list-style-type: none;\r\n}\r\n#bottom-container nav>ul>li {\r\n  position: relative;\r\n}\r\n#bottom-container nav>ul>li>a {\r\n  display: block;\r\n  color: rgba(0, 0, 0, .65);\r\n  padding: 1.3rem 0;\r\n  text-decoration: none;\r\n}\r\n#bottom-container nav>ul>li>a span.toggle {\r\n  background-color: rgba(0, 0, 0, .05);\r\n  color: rgba(0, 0, 0, .25);\r\n  padding: 2px 8px;\r\n}\r\n#bottom-container>nav>ul>li>nav {\r\n  display: none;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  top:100%;\r\n  right: 5%;\r\n  width: 90%;\r\n  z-index: 100;\r\n  background-color: rgb(250, 250, 250);\r\n  margin-bottom:10rem;\r\n}\r\nheader>nav>ul>li>nav>ul>li>a {\r\n  color: rgba(255, 255, 255, .85);\r\n}\r\n/*\r\n/////////////////////////////////////////////////\r\n/////////////////////////////////////////////////\r\n////   THIS IS THE ONLY FIX I KNOW OF  //////////\r\n*/\r\nmain{\r\n  /* remove padding top */\r\n}\r\n/*\r\n////////////////////////////////////////////////\r\n////////////////////////////////////////////////\r\n*/\r\n/* Medium screens */\r\n@media all and (min-width: 751px) {\r\n  header{\r\n    overflow-y:visible;\r\n    overflow-x:visible;\r\n    padding-bottom:0;\r\n  }\r\n  #navToggle {\r\n    display: none;\r\n  }\r\n  #bottom-container {\r\n    background-color: rgb(250, 209, 14);\r\n    width: 100%;\r\n    border-top: calc(5vh + 2vw) solid yellow;\r\n  }\r\n  #bottom-container>nav {\r\n    display: block;\r\n  }\r\n  #bottom-container>nav>ul {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: row;\r\n    height: 3rem;\r\n  }\r\n  #bottom-container nav>ul>li {\r\n    position: static;\r\n    flex:1;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  #bottom-container nav>ul>li>a {\r\n   padding: 0;\r\n  }\r\n  #bottom-container nav>ul>li>a span.toggle {\r\n    display: none;\r\n  }\r\n  #bottom-container >nav>ul>li>nav>ul>li{\r\n    line-height: 2.5rem;\r\n  }\r\n  #bottom-container>nav>ul>li>nav {\r\n    margin-top:-194.5rem;\r\n  }</code>  <code><html>\r\n<head>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.4/jquery.min.js\"></script>\r\n</head>\r\n<body>\r\n  <header>\r\n    <div id=\"navToggle\"><a href=\"#\">Menu</a></div>\r\n    <div id='bottom-container'>\r\n      <nav>\r\n        <ul>\r\n          <li><a href=\"#\">ITEM ONE</a></li>\r\n          <li class=\"sub1\">\r\n            <a href=\"#\">ITEM TWO <span class=\"toggle\">Expand</span></a>\r\n          <nav>\r\n            <ul>\r\n              <li><a href=\"#\">Sub Item 1</a></li>\r\n              <li><a href=\"#\">Sub Item 2</a></li>\r\n              <li><a href=\"#\">Sub Item 3</a></li>\r\n              <li><a href=\"#\">Sub Item 4</a></li>\r\n            </ul>\r\n          </nav>\r\n          <li><a href=\"#\">ITEM THREE</a></li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  </header>\r\n  <main>\r\n    <p>content top not visible but should be able to see</P>\r\n    <p>line 1</P>\r\n    <p>line 2</P>\r\n    <p>line 3</P>\r\n    <p>line 4</P>\r\n    <p>line 5</P>\r\n    <p>line 6</P>\r\n    <p>line 7</P>\r\n    <p>line 8</P>\r\n    <p>line 9</P>\r\n    <p>line 10</P>\r\n      <p>line 11</P>\r\n      <p>line 12</P>\r\n      <p>line 13</P>\r\n      <p>line 14</P>\r\n      <p>line 15</P>\r\n      <p>line 16</P>\r\n      <p>line 17</P>\r\n      <p>line 18</P>\r\n      <p>line 19</P>\r\n      <p>line 20</P>\r\n  </main>\r\n</body>\r\n</html>\r\n Run code snippet</code>   "
            }
        ]
    },
    {
        "title": "Bootstrap modal body max height 100%",
        "question_body": "I have a custom sized (80% height width) bootstrap modal body and it scrolls (body content will overflow on some sized screens)  There are 2 problems:   I can't set the max-height to 100% as that will be 100% of the entire document instead of the max height of the container, which is what i need for scrolling to work properly.  If there is a div with a fixed height inside the modal body at the very end, it will overflow outside of the modal if the screen is not big enough for the content.   How would I fix this? I'm currently experimenting with negative margins but i'm not too familiar with it.  JavaScript solutions are acceptable (jQuery is available as is backbone.js)  Thanks  Edit: Screenshot provided   Edit 2: More screenshot  ",
        "link": "https://stackoverflow.com/questions/14242227/bootstrap-modal-body-max-height-100",
        "score": 14,
        "tags": [
            "javascript",
            "css",
            "html",
            "twitter-bootstrap"
        ],
        "question_id": 14242227,
        "answer_count": 11,
        "view_count": 74926,
        "comment_count": 3,
        "comments": [],
        "answers": [
            {
                "score": 2,
                "body": "As a follow up to pwnna's answer this code is working better for me as it's working with a variable height depending on the content size with a max-height as well and it runs on load too, instead of just resize.  <code>//adjust modal body sizes\nvar fit_modal_body;\nfit_modal_body = function(modal) {\n  var body, bodypaddings, header, headerheight, height, modalheight;\n  header = $(\".modal-header\", modal);\n  footer = $(\".modal-footer\", modal);\n  body = $(\".modal-body\", modal);\n  modalheight = parseInt(modal.css(\"height\"));\n  headerheight = parseInt(header.css(\"height\")) + parseInt(header.css(\"padding-top\")) + parseInt(header.css(\"padding-bottom\"));\n  footerheight = parseInt(footer.css(\"height\")) + parseInt(footer.css(\"padding-top\")) + parseInt(footer.css(\"padding-bottom\"));\n  bodypaddings = parseInt(body.css(\"padding-top\")) + parseInt(body.css(\"padding-bottom\"));\n  height = $(window).height() - headerheight - footerheight - bodypaddings - 150;\n  return body.css({\"max-height\": \"\" + height + \"px\", 'height':'auto'});\n};\nfit_modal_body($(\".modal\"));\n$(window).resize(function() {\n  return fit_modal_body($(\".modal\"));\n});\n</code> "
            },
            {
                "score": 2,
                "body": "Here is a fully working Sass solution, but it requires flexbox .  <code>  // don't clamp modal height when screen is shorter than 400px\n  // .modal-body is short in that case, and the default behavior\n  // (entire modal will scroll) is easier to use\n  @media(min-height:400px)\n    .modal\n      // use top/bottom margin here instead of .modal-dialog\n      // so that .modal-dialog can use height: 100%\n      margin: 30px\n      // without overflow: visible the shadow will be clipped\n      // at the bottom\n      overflow: visible\n      > .modal-dialog\n        margin: 0 auto\n        // height must be explicitly set for .modal-content to\n        // use percentage max-height\n        height: 100%\n        > .modal-content\n          display: flex\n          flex-direction: column\n          max-height: 100%\n          > .modal-header,\n          > .modal-footer,\n            // don't allow header/footer to grow or shrink\n            flex: 0 0 auto\n          > .modal-body\n            // allow body to shrink but not grow\n            flex: 0 1 auto\n            // make body scrollable instead of entire modal\n            overflow-y: auto\n</code> "
            },
            {
                "score": 3,
                "body": "You just need to set the height of modal popup on its show, get the height of screen / window and set it to modal's height. (you can multiply it by 0.8 to get 80% height of screen, which fits nicely).  <code>$('#YourModalId').on('show.bs.modal', function () {\n    $('.modal .modal-body').css('overflow-y', 'auto'); \n    var _height = $(window).height()*0.8;\n    $('.modal .modal-body').css('max-height', _height);\n});\n</code> "
            },
            {
                "score": 6,
                "body": "I faced the same problem with a long form. Javascript was not an option for me, so I ended up with a fully HTML-CSS solution.  The main goal was to code it just working with percentages, in order to have an easy way to build the media queries.  I've tested it with Firefox 22.0, Google Chrome 28.0.1500.71, Safari 6.0.5 and IE8. Here's the demo .  Modal HTML Structure:  The key is to have the structural divs clean from padding/margin/border. All these styles should be applied to the items inside them.  <code><div id=\"dialog\" class=\"modal hide dialog1\" aria-hidden=\"false\">\n    <div class=\"modal-header\">\n    </div>\n    <div class=\"modal-body\">\n        <div>\n        </div>\n    </div>\n</div>\n</code>  Styles:  The styles applied to these structure divs are the ones which determines its size.  <code>.modal.dialog1 { /* customized styles. this way you can have N dialogs, each one with its own size styles */\n    width: 60%;\n    height: 50%;\n    left: 20%; /* ( window's width [100%] - dialog's width [60%] ) / 2 */\n}\n/* media query for mobile devices */\n@media ( max-width: 480px ) {\n    .modal.dialog1 {\n        height: 90%;\n        left: 5%; /* ( window's width [100%] - dialog's width [90%] ) / 2 */\n        top: 5%;\n        width: 90%;\n    }\n}\n/* split the modal in two divs (header and body) with defined heights */\n.modal .modal-header {\n    height: 10%;\n}\n.modal .modal-body {\n    height: 90%;\n}\n/* The div inside modal-body is the key; there's where we put the content (which may need the vertical scrollbar) */\n.modal .modal-body div {\n    height: 100%;\n    overflow-y: auto;\n    width: 100%;\n}\n</code>  For more detailed code, refer to the demo , where you'll see whole styling classes and those bootstrap styles which needs to be disabled/overriden. "
            },
            {
                "score": 9,
                "body": "I caved in and wrote coffeescript to fix this. If anyone's interested, here's the coffeescript:  <code>fit_modal_body = (modal) ->\n  header = $(\".modal-header\", modal)\n  body = $(\".modal-body\", modal)\n  modalheight = parseInt(modal.css(\"height\"))\n  headerheight = parseInt(header.css(\"height\")) + parseInt(header.css(\"padding-top\")) + parseInt(header.css(\"padding-bottom\"))\n  bodypaddings = parseInt(body.css(\"padding-top\")) + parseInt(body.css(\"padding-bottom\"))\n  height = modalheight - headerheight - bodypaddings - 5 # fudge factor\n  body.css(\"max-height\", \"#{height}px\")\n# Here you need to bind your event with the appropriate modal, as an example:\n$(window).resize(() -> fit_modal_body($(\".modal\")))\n</code>  Or the equivalent javascript as generated per above.  <code>var fit_modal_body;\nfit_modal_body = function(modal) {\n  var body, bodypaddings, header, headerheight, height, modalheight;\n  header = $(\".modal-header\", modal);\n  body = $(\".modal-body\", modal);\n  modalheight = parseInt(modal.css(\"height\"));\n  headerheight = parseInt(header.css(\"height\")) + parseInt(header.css(\"padding-top\")) + parseInt(header.css(\"padding-bottom\"));\n  bodypaddings = parseInt(body.css(\"padding-top\")) + parseInt(body.css(\"padding-bottom\"));\n  height = modalheight - headerheight - bodypaddings - 5;\n  return body.css(\"max-height\", \"\" + height + \"px\");\n};\n$(window).resize(function() {\n  return fit_modal_body($(\".modal\"));\n});\n</code> "
            }
        ]
    },
    {
        "title": "Google Chrome - Fieldset Overflow Bug",
        "question_body": "Google Chrome seems to have a bug when overflowing content inside of a fieldset.  Here is a jsfiddle that demonstrates the problem: http://jsfiddle.net/Dismissile/Lnm42/  If you look at the page, you will see that when you have a container inside of a fieldset, and the container has <code>overflow: auto</code> set, and that container has content that will overflow horizontally, the fieldset actually expands instead of using a scrollbar:  <code><fieldset class=\"parent\">\n    <div class=\"child\">\n        <div class=\"grandchild\">\n            asdf\n        </div>\n     </div>\n</fieldset>\n<div class=\"parent\">\n    <div class=\"child\">\n        <div class=\"grandchild\">\n            asdf\n        </div>\n    </div>\n</div>\n</code>  CSS:  <code>.parent {\n    border: 1px solid green;\n    padding: 20px;\n    margin: 20px;\n}\n.child {\n    border: 1px solid red;\n    padding: 20px;\n    overflow: auto;\n}\n.grandchild {\n    border: 1px solid #ccc;\n    width: 2000px;\n    padding: 10px;\n}\n</code>  Is there a CSS hack/fix I can use so that content overflows properly when inside a fieldset in Chrome? ",
        "link": "https://stackoverflow.com/questions/8084343/google-chrome-fieldset-overflow-bug",
        "score": 13,
        "tags": [
            "html",
            "css",
            "google-chrome"
        ],
        "question_id": 8084343,
        "answer_count": 5,
        "view_count": 8187,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 1,
                "body": "Using a pseudo fieldset (aka <code><div class=\"fieldset\"></div></code> ) I believe you can get close. See jsfiddle .  Try this styling:  <code>fieldset,.fieldset {\n   margin: 10px;\n   border: solid 1px black;\n   position: relative;\n   padding: .5em;\n}\n.legend {\n   left: 0.5em;\n   top: -0.6em;\n   color: black;\n   position: absolute;\n   background-color: white;\n   padding: 0 0.25em 0 0.25em;\n}\n</code>  It is less than ideal as fieldset styling needs to be duplicated, but for me it was the only tolerable solution to my run-in with this problem that I have been able to come up with. As above you may be able to apply your existing fieldset styling to the pseudo one. "
            },
            {
                "score": 1,
                "body": "Try:  <code>fieldset {\n  display: table-cell;\n  min-width: 0;\n  box-sizing: border-box;\n}\n</code>  This is your example with fix: http://jsfiddle.net/2u3a9goc/ "
            },
            {
                "score": 12,
                "body": "UPDATE:  As of a recent Chrome for MS Windows update (v28 maybe? Haven't tracked it down yet), <code>auto</code> is no longer a valid value for <code>min-width</code> , and this solution no longer works!  New solution:  Using <code>inherit</code> instead of <code>auto</code> appears to fix the issue for all cases I have tested so far. (Including the original fiddle.. see the new fiddle fix for details.)  The updated fix: <code>FIELDSET {min-width: inherit; }</code>  Original answer:  Chrome defines for <code>fieldset</code> the default user agent style: <code>min-width: -webkit-min-content</code> .  So when your viewable area (aka \"screen\") is smaller than your <code>div</code> with specific width, the <code>-webkit-min-content</code> grows the fieldset to accommodate the size of the contents (plus padding, etc.).  The fix: <code>FIELDSET { min-width: auto; }</code>  I fixed your fiddle, try it out ! "
            }
        ]
    },
    {
        "title": "Why is my page not scrollable?",
        "question_body": "So I have made a few pages that use the following css code:  <code>html { overflow-y: scroll; }\n    ul.navbar {\n    list-style-type: none;\n    position: fixed;\n    top: 00px;\n    left: 00px;\n    width: 200px;\n    height: 700px; \n    background-image:url('/images/B_left-background.png');\n}\nul.header {\n    position: fixed;\n    top: -20px;\n    left: 240px;\n    height: 100px;\n    width:700px;\n    background-image:url('/images/B_left-top.png');\n}\nbody {\n    position: fixed;\n    top: 100px;\n    left: 300px;\n    font-family: Georgia, \"Times New Roman\",\n        Times, serif;\n    background-color: #D6E9B4;\n}\ndiv.scrollableContainer {\n    background: none repeat scroll 0 0 ;\n    border: 1px solid #999999;\n    height: 400px;\n    margin: 40px;\n    overflow: auto;\n    width: 800px;\n}\nh1 {font-family: Helvetica, Geneva, Arial,\n        SunSans-Regular, sans-serif }\nul.navbar a {text-decoration: none }\na.send{\n    color: black;\n    background-image:url('/images/send-message-bt.png');\n    position:fixed;\n    top:200px;\n    left:0px;\n    height:80px;\n    width:290px;\n}\na.token{\n    color: black;\n    background-image:url('/images/token-ID-bt.png');\n    position:fixed;\n    top:300px;\n    left:0px;\n    height:80px;\n    width:290px;\n}\na.history{\n    color: black;\n    background-image:url('/images/history-bt.png');\n    position:fixed;\n    top:400px;\n    left:0px;\n    height:80px;\n    width:290px;\n}\na.comp{\n    background-image:url('/images/competition-bt.png');\n    position:fixed;\n    top:500px;\n    left:0px;\n    height:80px;\n    width:290px;\n}\na.out{\n    background-image:url('/images/B_log-out-bt.png');\n    position:fixed;\n    top:600px;\n    left:50px;\n    height:60px;\n    width:160px;\n}\n</code>  I would like to make the whole page scrollable, so that if someone on a low-resolution device can still scroll down. As you can see I put in the: html { overflow-y: scroll; } But this does not help.  Is there any way I can fix this? Does it have something to do with me setting the fixed-heights? ",
        "link": "https://stackoverflow.com/questions/12575251/why-is-my-page-not-scrollable",
        "score": 13,
        "tags": [
            "html",
            "css",
            "scrollable"
        ],
        "question_id": 12575251,
        "answer_count": 3,
        "view_count": 83809,
        "comment_count": 3,
        "comments": [
            {
                "body": "it's all your fixed positioning that's causing the problem, that page does not know how long it is hence why you never get a scrollbar, try to change it to relative or absolute and see if that makes any difference"
            }
        ],
        "answers": [
            {
                "score": 29,
                "body": "Try this:  <code>html { overflow-y: scroll; }\nbody { position: absolute; }\n</code>  Or this:  <code>html { overflow-y: scroll; overflow-x:hidden; }\nbody { position: absolute; }\n</code> "
            }
        ]
    },
    {
        "title": "CSS - table data not going under fixed table header - Overflow-X",
        "question_body": "In the Table Fixed Header, I need the all text to go under the fixed header and for the fixed header not to misalign. This works for everything in the second table. However all content in the 2nd table is within the 98% width.  In the 1st table, I have a TD tag where white-space:nowrap keeps all content on 1 line, so when the overflow-x occurs, the fixed header becomes misaligned. How can I fix this fixed header to match the table header and not be misaligned?  So I need this to work when the Overflow-X: Auto occurs. I want the horizontal scrolls so that is fine, but it is the fixed header that gets jumbled.  You may have to change the size of your viewpoint to see this occur  I believe it is probably in the CSS or JQUERY where I need to make the adjustment but cannot figure out how to adjust ....  JSFIDDLE https://jsfiddle.net/rbla/1Ljuycbe/61/  <code>.up:hover {\n    cursor:pointer;\n}\n.tooltip2 {\n    position: relative;\n    display: inline-block;\n    border-bottom: 3px dotted black; /* If you want dots under the hoverable text */\n    text-decoration: none; \n    color: #00F;\n}\nimg.cadre {\n    border: 3px solid #D2D1D1; \n    border-radius: 4px; \n    width: 125px;\n    height: 125px;\n}\n.tooltip2 .tooltiptext2 { \n    visibility: hidden;\n    width: 130px;\n    background-color: #fff;\n    color: #fff;\n    text-align: center;\n    padding: 5px 5px;\n    border-radius: 6px;\n    margin-left: 7px;\n    position: absolute;\n    z-index: 0;\n}\n.tooltip2:hover .tooltiptext2 {\n    visibility: visible;\n    cursor:pointer;\n }\n.tooltip2 .tooltiptext2 { \n    top: -5px;\n    left: 105%; \n }\n /* Left Arrow */\n.tooltip2 .tooltiptext2::after {\n     content: \" \";\n     position: absolute;\n     top: 15px;\n     right: 100%; /* To the left of the tooltip */\n     margin-top: -5px;\n     border-width: 5px;\n     border-style: solid;\n     border-color: transparent white transparent transparent;\n }\n  table.blue.fixed {\n     z-index: 99;\n }\n</code> ",
        "link": "https://stackoverflow.com/questions/52543075/css-table-data-not-going-under-fixed-table-header-overflow-x",
        "score": 13,
        "tags": [
            "html",
            "css"
        ],
        "question_id": 52543075,
        "answer_count": 2,
        "view_count": 697,
        "comment_count": 2,
        "comments": [
            {
                "body": "maybe just use a regular table, position:sticky on <code>th</code> , and no javascript at all?"
            }
        ],
        "answers": [
            {
                "score": 1,
                "body": "<code>$t_fixed.css(\"width\",$this.outerWidth()+\"px\");\n$this.parent().on( 'scroll', function(){\n  $t_fixed.css(\"left\",(($this.parent().scrollLeft())*-1)+\"px\");\n});\n$( window ).resize(function() {\n    $t_fixed.css(\"width\",$this.outerWidth()+\"px\");\n});\n</code>  There are three thing that you need changed to make this work.  1) The width of the table has to match the width on the original table. The first line of code fixes the column position.  2) When you scroll the table the columns will not match unless you move the cloned header row with the scrolling.  3) \".resize\" will fix the table when the viewport is resized.  fiddle "
            },
            {
                "score": 3,
                "body": "Well, solution to your specific problem is fairly simple; however, there can be vast improvements to your code, eg instead of cloning the whole <code>table</code> and removing the <code>tbody</code> , etc, but I guess this is out of the scope of this question.  Just add these few css lines:  <code>.blue.fixed {\n  width:100%;\n  table-layout:fixed;\n}\n</code>  https://jsfiddle.net/1Ljuycbe/84/ "
            }
        ]
    },
    {
        "title": "HTML, overflow:scroll, and float",
        "question_body": "I have a div that encapsulates many unordered lists (ul). I have each ul set to \"float:left\". And I also have the parent div that contains them set to \"overflow-x:scroll\". What's happening is the ul's are wrapping when they hit the edge of the page and not staying side by side to take advantage of the scrolling property of the parent div (the scroll bars are there). Why? How can I fix this?  Thanks for any help. ",
        "link": "https://stackoverflow.com/questions/5926076/html-overflowscroll-and-float",
        "score": 11,
        "tags": [
            "html",
            "css",
            "overflow",
            "html-lists",
            "css-float"
        ],
        "question_id": 5926076,
        "answer_count": 4,
        "view_count": 15281,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 5,
                "body": "Because you floated the ULs, they don't exist in the document flow anymore so they won't expand the parent div (hence the wrapping.)  Try setting an explicit width on the parent div that allows for all of them to exist side by side.  ALSO, if you aren't clearing the ULs in the parent div then you'll more than likely run into issues there too, vertical ones. Make sure you clear your floats :) "
            },
            {
                "score": 6,
                "body": "you need to insert those uls in another div, to which you'll give width=[width of ul]*[number of uls]  http://jsfiddle.net/seler/gAGKh/ or count total width of uls http://jsfiddle.net/seler/gAGKh/1/ "
            },
            {
                "score": 6,
                "body": "You can set your list items to display: inline-block, then use white-space: nowrap. Works in most modern browsers.  http://jsfiddle.net/gAGKh/22/ "
            }
        ]
    },
    {
        "title": "Margin not working only in Safari (element is at the bottom of the page)",
        "question_body": "Please check the following link in the latest safari: http://www.grupoguion.com/  The footer is fixed at the bottom and supossed to revealed with the scrolling, so the previous section has a margin-bottom but it doesn't work, only in Safari. Everywhere else is ok, even in I.E. I tried to add overflow: auto in the page-wrapper, but everything gets weird in all browsers with elements dissapear and appear. I also have read that removing height: 100% in the body and html may fix that, but that is not an option for me, because i need the images to fix the browser height.  Does anybody have another possible solution please?  Thank in advance. ",
        "link": "https://stackoverflow.com/questions/30431192/margin-not-working-only-in-safari-element-is-at-the-bottom-of-the-page",
        "score": 11,
        "tags": [
            "html",
            "css",
            "safari"
        ],
        "question_id": 30431192,
        "answer_count": 3,
        "view_count": 18478,
        "comment_count": 3,
        "comments": [],
        "answers": [
            {
                "score": 6,
                "body": "The accepted answer is way too complicated. Consider this approach ( taken from another thread ):   It's a normal weird behaviour calling margin collapse. To simply avoid it add <code>overflow: auto;</code> on the [footer] container.   Your footer container could look something like this:  <code>.footer-container {\n    overflow: auto;\n}\n</code> "
            },
            {
                "score": 7,
                "body": "You can add a div with the size of your bottom and make it transparent. html:  <code><div id='tr-footer'>\n</div>\n</code>  css :  <code>#tr-footer{\nheight: ?px;\nwidth:100%;\nbackground:transparent;\n}\n</code> "
            },
            {
                "score": 8,
                "body": "Try making the element  <code>display:inline-block \n</code>  and Safari should respect its dimensions and margin. "
            }
        ]
    },
    {
        "title": "Fixed height for bootstrap pre-scrollable DIV",
        "question_body": "In my application I have to display bootsatarp grid for database records. Since the number of records count are large enough to view without full page scrolling I wrap my table with bootstrap pre-scrollable div and it gave me the functionality to scroll the table. However all the time DIV size is half of the browser windows. I tried almost every stack overflow posts and suggestions and simply they not work for me. I also tried to fix this with support of java script and it also failed.  This is my HTML code  <code><div class=\"col-md-9\">\n<div  class=\"pre-scrollable\">\n<table class=\"table table-bordered table-hover header-fixed\"  id=\"sometable\">\n                    <thead>\n                  <tr>\n                    <th>EMP_No</th>\n                    <th>Name</th>\n                    <th>Designation</th>\n                    <th>Department</th>\n                    <th>Type</th>\n                    <th>#Days</th>\n                    <th>Start Date</th>\n                    <th>End Date</th>\n                    <th>Half day</th>\n                    <th>Status</th>\n                  </tr>\n                </thead>\n                <tbody>\n                </tbody>\n                <?php  //php code for print the table\n                 ?>\n</div>      \n</div>\n</code>  I populate above table with the results of PHP code. I have not idea how to set this DIV's height to fixed value or full value of the browser windows.below are the CSS that are use  <code><style>\ntable {\n    font-family: arial, sans-serif;\n    border-collapse: collapse;\n    width: 100%;\n}\ntd, th {\n    border: 1px solid #dddddd;\n    text-align: center;\n    padding: 1px;\n}\nthead th {\n    text-align: center;\n    background-color: #3498db;\n}\ntr:nth-child(even) {\n    background-color: #dddddd;\n}\n</style>\n</code>  This is the result web page ",
        "link": "https://stackoverflow.com/questions/39147226/fixed-height-for-bootstrap-pre-scrollable-div",
        "score": 11,
        "tags": [
            "javascript",
            "php",
            "css",
            "html",
            "twitter-bootstrap-3"
        ],
        "question_id": 39147226,
        "answer_count": 3,
        "view_count": 36244,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 5,
                "body": "Twitter bootstrap - Fixed layout with scrollable sidebar will help... As the example on linked page will show you need to set the height of the div not table.  <code><style type=\"text/css\">\n        body, html {\n            height: 100%;\n            overflow: hidden;\n        }\n        .navbar-inner {\n            height: 40px;\n        }\n        .scrollable {\n            height: 100%;\n            overflow: auto;\n        }\n        .max-height {\n            height: 100%;\n        }\n        .no-overflow {\n            overflow: hidden;\n        }\n        .pad40-top {\n            padding-top: 40px;\n        }\n</style>\n</code> "
            },
            {
                "score": 14,
                "body": "For simplicity you can use css viewport dimensions. Something like this:  <code><div class=\"pre-scrollable\" style=\"max-height: 75vh\">\n     <table>...</table>\n</div>\n</code>  where \"75vh\" is 75% of visible height. "
            },
            {
                "score": 30,
                "body": "There is a max-height property set for the .pre-scrollable div in the bootstrap css file.  <code>.pre-scrollable {\n    max-height: 340px;\n    overflow-y: scroll;\n}\n</code>  That might be the source of your problem. "
            }
        ]
    },
    {
        "title": "Continuous text in text-area cuts the PDF overflowing the text when using Itext 7.1.7",
        "question_body": "I see there are lot many questions related to the same scenario this one is little different couldn't figure out the solution. I have a in a tabl in a cell. When I give the continous text like \"cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\" Its overflowing the text when I download the print file and its normal when I give normal text with breaks.Here is my code    <code>.generaltable {\r\n\tbackground-color : #5C7FBF;\r\n\tborder:thin;\r\n\twidth : 100%;\r\n\tfont-family: Arial, Helvetica, sans-serif;\r\n\tfont-size: 14px;\r\n\t}\r\n\t.column {\r\n\tbackground-color : #DEEDFF;\r\n\tfont-weight : bold;\r\n\tpadding-bottom : 1px;\r\n\tpadding-left : 1px;\r\n\tpadding-right : 1px;\r\n\tpadding-top : 1px;\r\n\ttext-align : center;\r\n\tfont-family: Arial, Helvetica, sans-serif;\r\n\tfont-size: 14px;\r\n\tborder: none;\r\n\t}\r\n .edit {\r\n\tbackground-color : #DEEDFF;\r\n\tborder-width: 1px;\r\n\tborder-style:solid;\r\n\tborder-color:#DEEDFF;\r\n\tborder: 1px solid #DEEDFF;\r\n\tcolor: black;\r\n\ttext-align : left;\r\n\tfont-weight : bold;\r\n\tfont-family: Arial, Helvetica, sans-serif;\r\n\tfont-size: 14px;\r\n\tword-break: break-all;\r\n\t}\r\n  .iedit2 {\r\n\tbackground-color : white;\r\n\ttext-align: left;\r\n\tcolor: black;\r\n\tfont-family: Arial, Helvetica, sans-serif;\r\n\tfont-weight: bold;\r\n\tborder-top: 1px solid #999999;\r\n\tborder-right: 1px solid #333333;\r\n\tborder-bottom: 1px solid #333333;\r\n\tborder-left: 1px solid #999999;\r\n\tword-break: break-all;\r\n\t}\r\n  </code>  <code><table border=\"1\" width=\"100%\" align=\"center\" cellpadding=\"2\" cellspacing=\"1\"  class=\"generaltable\">  <tbody><tr id=\"Row35494#0\">\r\n    <th id=\"04\" class=\"column\" width=\"39%\"><a href=\"javascript:alert('Self Explanatory')\">Brief                 description of the issue *</a></th>\r\n        <td id=\"1 04\" width=\"39%\" class=\"edit\">\r\n            <textarea id=\"269494_0\" class=\"iedit2\" cols=\"35\" rows=\"5\" wrap=\"virtual\" maxlength=\"4000\"                   name=\"fiy\">ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\r\n             </textarea>\r\n        </td>\r\n      </tr>\r\n  </tbody>\r\n </table></code>    please find the pictures it for clear overview  I have a click like Go once I do it it downloads the entire document here using JAVA code and the code part is working Good but the issue is with itext 7.1.7. this is happening and I have changed it to flying saucer its working good but causing other issues. I want to stay with Itext 7.1.7 and solve this continuous fix.   ",
        "link": "https://stackoverflow.com/questions/56397796/continuous-text-in-text-area-cuts-the-pdf-overflowing-the-text-when-using-itext",
        "score": 11,
        "tags": [
            "java",
            "html",
            "css",
            "textarea",
            "itext7"
        ],
        "question_id": 56397796,
        "answer_count": 4,
        "view_count": 3257,
        "comment_count": 6,
        "comments": [
            {
                "body": "try setting the CSS rule: <code>TABLE {table-layout: fixed; max-width: 100%;}</code>"
            }
        ],
        "answers": []
    },
    {
        "title": "Draggable divs from accordion",
        "question_body": "I have created a pop out sideBar. In that sideBar I have a accordion which contains divs. Those divs are draggable. The user can drag those divs and position them main page.  The problem that I am experiencing is that when the divs are dragged they are not visible outside the accordion. This can been seen in This video.  I can see that it is to do with the overflow being set to hidden however when I remove this the accordion content is shown when it should be hidden.  <code>overflow: hidden;\n</code>  JSFiddle to further show my problem.  How could I possibly fix this / what are possible ways to get around it. ",
        "link": "https://stackoverflow.com/questions/18400488/draggable-divs-from-accordion",
        "score": 10,
        "tags": [
            "javascript",
            "jquery",
            "html",
            "css",
            "jquery-ui"
        ],
        "question_id": 18400488,
        "answer_count": 1,
        "view_count": 699,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 3,
                "body": "Try adding this to your css  <code>.accordion-heading + div.accordion-body {\n     position: static;\n}\n</code>  Is this what you are looking for? Updated fiddle http://jsfiddle.net/gNAFY/3/ If this solved your problem, it seems that inside bootstrap.css file, at line 5245, \"position: relative\" rule makes your divs not appearing outside the accordion. So you need to \"reset\" position to static. For \"el + el\" css selector to work in IE8 and earlier, don't forget the <!DOCTYPE>. "
            }
        ]
    },
    {
        "title": "Why does overflow hidden affect height and how can I fix it in this example?",
        "question_body": "Fiddle: https://jsfiddle.net/wa51kdh7/  Code:  HTML: Hello world  <code><span class=\"span2\">\n    Goodbye cruel world\n</span>\n</code>  CSS:  <code>span {\n    display: inline-block;\n    margin: 0;\n    padding: 0;\n    line-height: 16px;\n    font-size: 16px;\n    height: 16px;\n}\n.span1 {\n    background-color: lightblue;\n}\n.span2 {\n    background-color: pink;\n    overflow: hidden;\n    width: 130px;\n    text-overflow: ellipsis;\n}\n</code>  Here I am trying to create two spans next to each other, only one of them has overflow: hidden and the other shouldn't have overflow: hidden. For some reason the overflow: hidden affects the heights and they don't line up - even when I use an explicit height.  Any idea how to fix this? ",
        "link": "https://stackoverflow.com/questions/32190967/why-does-overflow-hidden-affect-height-and-how-can-i-fix-it-in-this-example",
        "score": 10,
        "tags": [
            "html",
            "css"
        ],
        "question_id": 32190967,
        "answer_count": 3,
        "view_count": 2697,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 1,
                "body": "Hi I just updated your <code>span</code> to <code>float: left</code> and it works. It's not the <code>overflow</code> but the fact the <code>span</code> s aren't floated that they are misaligned. "
            }
        ]
    },
    {
        "title": "Fully circular buttons with dynamic size",
        "question_body": "I am trying to create circular buttons in CSS. I use <code>border-radius: 100%</code> to make the button look like a circle but it only works if I explicitly set the width and height of the element. But if I do so, the buttons will not adjust to fix larger text  This is what I've tried so far:    <code>.round-button{\r\n  width: 60px;\r\n  height: 60px;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  outline: none;\r\n  cursor: pointer;\r\n  border-style: none;\r\n  color: white;\r\n  background-color: #3498db;\r\n  border-radius: 100%;\r\n  overflow: none;\r\n  text-align: center;\r\n}\r\n.round-button:active{\r\n  background-color: #2980b9;\r\n}</code>  <code><div>\r\n  <button class=\"round-button\">Button</button>\r\n</div>\r\n<div>\r\n  <button class=\"round-button\">This text will overflow the button!</button>  \r\n</div></code>    As you can see the first button looks pretty OK, but the text in the second button overflows it. I've used <code>overflow: hidden</code> to prevent it from looking ugly but I would like the buttons size to adjust according to the content's size. Is that possible? ",
        "link": "https://stackoverflow.com/questions/37373734/fully-circular-buttons-with-dynamic-size",
        "score": 10,
        "tags": [
            "html",
            "css"
        ],
        "question_id": 37373734,
        "answer_count": 2,
        "view_count": 12536,
        "comment_count": 3,
        "comments": [
            {
                "body": "You mean you actually want the button's height to adjust to the contents' width? I'm not sure that's possible"
            },
            {
                "body": "@MrLister Not just the height but the width too. If more content is added the circle should grow larger while still looking like a perfect circle"
            },
            {
                "body": "Well, the width is not the problem. Keeping the height/width ratio is."
            }
        ],
        "answers": [
            {
                "score": 17,
                "body": "In order to draw a circle, you need a square to start with .  You can insert a pseudo of an height equal to width using vertical padding with percentage value.   https://www.w3.org/TR/CSS2/box.html#padding-properties The percentage is calculated with respect to the width of the generated box's containing block, even for 'padding-top' and 'padding-bottom'. If the containing block's width depends on this element, then the resulting layout is undefined in CSS 2.1.  Unlike margin properties, values for padding values cannot be negative. Like margin properties, percentage values for padding properties refer to the width of the generated box's containing block.   Make this pseudo inline-block to help yoy center text.  If text has to wrap a few lines, it needs to be wraped within an inline-block .. if you use an inline-block pseudo.  You can set max and min width too.  example:    <code>.round-button{\r\n  min-width: 60px;\r\n  max-width:120px;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  outline: none;\r\n  cursor: pointer;\r\n  border-style: none;\r\n  color: white;\r\n  background-color: #3498db;\r\n  border-radius: 100%;\r\n  overflow: none;\r\n  text-align: center;\r\n  padding:0;\r\n}\r\n.round-button:before {\r\n  content:'';\r\n  display:inline-block;;\r\n  vertical-align:middle;\r\n  padding-top:100%;\r\n}\r\nspan {\r\n  display:inline-block;\r\n  vertical-align:middle;\r\n  max-width:90%;\r\n}\r\n.round-button:active{\r\n  background-color: #2980b9;\r\n}</code>  <code><div>\r\n  <button class=\"round-button\"><span>Button</span></button>\r\n</div>\r\n<div>\r\n  <button class=\"round-button\"><span>This text should NOT overflow the button!</span></button>  \r\n</div></code>   "
            }
        ]
    },
    {
        "title": "How to make flexbox items shrink correctly when in a nested container?",
        "question_body": "If I set up a nested flexbox container like so:  <code><div class=\"container1\">\n  <div class=\"grow1\">\n    <div class=\"container2\">\n      <div class=\"grow2\"></div>\n    </div>\n  </div>\n</div>\n</code>  ...and then set the width of grow2 such that it is wider than container1 then grow2 overflows container1.  I believe this should not happen since flex elements are supposed to shrink when they are larger than the flex container.  If I set the flex-basis of grow2 then this works as expected.  Please see the following example for a demo:  https://jsfiddle.net/chris00/ot1gjjtk/20/  Please use Chrome or Firefox for this  Furthermore, I read that the flexbox spec says that width and flex-basis should have the same effect (when using horizontal layouts) which they clearly don't.  Now I could just use flex-basis instead of width, but... Edge does the same thing for both flex-basis and width, and it does it in the \"wrong\" way. IE11 does it wrong also (although that appears to have multiple flexbox bugs). Please check out the demo with Edge.  So how is this supposed to work?  Are there bugs in all browsers?  Is flex-basis actually supposed to be different from width (in simple horizontal layouts)?  Or is Edge correct and both width and flex-basis are supposed to overflow the parent container?  Finally, is there a workaround that can fix the overflow for Edge (and even IE11)?    <code>.container1 {\r\n  margin-top: 10px;\r\n  display: flex;\r\n  width: 200px;\r\n  height: 50px;\r\n  background-color: red;\r\n}\r\n.grow1 {\r\n  flex-grow: 1;\r\n  height: 40px;\r\n  background-color: green;\r\n}\r\n.container2 {\r\n  display: flex;\r\n  height: 30px;\r\n  background-color: yellow;\r\n}\r\n.grow2a {\r\n  flex-grow: 1;\r\n  flex-basis: 400px;\r\n  height: 20px;\r\n  background-color: turquoise;\r\n}\r\n.grow2b {\r\n  flex-grow: 1;\r\n  width: 400px;\r\n  height: 20px;\r\n  background-color: turquoise;\r\n}</code>  <code><div class=\"container1\">\r\n  <div class=\"grow1\">\r\n    <div class=\"container2\">\r\n      <div class=\"grow2a\">Working (flex-basis)</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"container1\">\r\n  <div class=\"grow1\">\r\n    <div class=\"container2\">\r\n      <div class=\"grow2b\">Not working (width)</div>\r\n    </div>\r\n  </div>\r\n</div></code>   ",
        "link": "https://stackoverflow.com/questions/43934648/how-to-make-flexbox-items-shrink-correctly-when-in-a-nested-container",
        "score": 10,
        "tags": [
            "html",
            "css",
            "flexbox"
        ],
        "question_id": 43934648,
        "answer_count": 1,
        "view_count": 5337,
        "comment_count": 3,
        "comments": [
            {
                "body": "\"width and flex-basis should have the same effect\" ...no, they don't and shouldn't. - See stackoverflow.com/questions/34352140/…"
            },
            {
                "body": "That post says: \"7.2.3. The flex-basis property - For all values other than auto and content, flex-basis is resolved the same way as width in horizontal writing modes.\" - but this is not what I am seeing. I know they are different, but they shouldn't be in horizontal calculations."
            },
            {
                "body": "\"resolve the same\" not ARE the same. <code>width</code> is width...flex-basis is the width unless acted on by <code>flex-grow/shrink</code> . A <code>px</code> width is a fixed value..flexbox doesn't (and shouldn't) override that."
            }
        ],
        "answers": [
            {
                "score": 19,
                "body": "The Problem  As far as the spec is concerned, this isn't an issue pertaining to <code>flex-basis</code> , <code>width</code> , <code>flex-grow</code> or <code>flex</code> . It's something entirely different.   4.5. Implied Minimum Size of Flex Items  To provide a more reasonable default minimum size for flex items, this specification introduces a new <code>auto</code> value as the initial value of the <code>min-width</code> and <code>min-height</code> properties defined in CSS 2.1.   In other words, a flex item, by default, cannot be smaller than the length of its content (essentially, the longest word or fixed-size element).  The item cannot stay within its container (or even render a scroll bar or ellipsis), because its content is not permitted to overflow. The content simply expands the item. This behavior applies to fixed-sizing, as well (such as the <code>flex-basis: 400px</code> in your code).  Again, the initial settings are:   <code>min-width: auto</code> , in row-direction  <code>min-height: auto</code> , in column-direction   For a more complete explanation see this post:   Why doesn't flex item shrink past content size?    Solution for Chrome, Safari, Firefox and Edge  The standard solution to this problem is simple: override the default.  In your code, add <code>min-width: 0</code> to <code>.grow1</code> .  That solves the problem in Chrome, Safari, FF and Edge.    <code>.container1 {\r\n  margin-top: 10px;\r\n  display: flex;\r\n  width: 200px;\r\n  height: 50px;\r\n  background-color: red;\r\n}\r\n.grow1 {\r\n  flex-grow: 1;\r\n  height: 40px;\r\n  background-color: green;\r\n  min-width: 0; /* NEW */\r\n}\r\n.container2 {\r\n  display: flex;\r\n  height: 30px;\r\n  background-color: yellow;\r\n}\r\n.grow2a {\r\n  flex-grow: 1;\r\n  flex-basis: 400px;\r\n  height: 20px;\r\n  background-color: turquoise;\r\n}\r\n.grow2b {\r\n  flex-grow: 1;\r\n  width: 400px;\r\n  height: 20px;\r\n  background-color: turquoise;\r\n}</code>  <code><div class=\"container1\">\r\n  <div class=\"grow1\">\r\n    <div class=\"container2\">\r\n      <div class=\"grow2a\">Working (flex-basis)</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"container1\">\r\n  <div class=\"grow1\">\r\n    <div class=\"container2\">\r\n      <div class=\"grow2b\">Not working (width)</div>\r\n    </div>\r\n  </div>\r\n</div></code>    revised fiddle 1   Solution for IE11  In IE11, contrary to spec guidance, the flex <code>min-width</code> / <code>min-height</code> default values are already <code>0</code> , yet the flex item still breaks out.  The defaults are <code>0</code> because when the flexbox spec was first released, the <code>min-*</code> properties did not deviate from the CSS 2.1 initial values , which are <code>0</code> .  Later, after browsers had completed their implementations, the flex <code>min-*</code> values were updated to <code>auto</code> . Chrome, Safari, FF and Edge made the update. IE11 did not.  The reason the flex items break out in IE11 relates to another issue: the browser wants an explicit width on the container  In your code, add <code>flex-basis: 100%</code> to <code>.grow1</code> .  More details here:   Why IE11 doesn't wrap the text in flexbox?  flexbox flex-basis: 0px in Chrome     <code>.container1 {\r\n  margin-top: 10px;\r\n  display: flex;\r\n  width: 200px;\r\n  height: 50px;\r\n  background-color: red;\r\n}\r\n.grow1 {\r\n  flex-grow: 1;\r\n  height: 40px;\r\n  background-color: green;\r\n  flex-basis: 100%; /* NEW */\r\n}\r\n.container2 {\r\n  display: flex;\r\n  height: 30px;\r\n  background-color: yellow;\r\n}\r\n.grow2a {\r\n  flex-grow: 1;\r\n  flex-basis: 400px;\r\n  height: 20px;\r\n  background-color: turquoise;\r\n}\r\n.grow2b {\r\n  flex-grow: 1;\r\n  width: 400px;\r\n  height: 20px;\r\n  background-color: turquoise;\r\n}</code>  <code><div class=\"container1\">\r\n  <div class=\"grow1\">\r\n    <div class=\"container2\">\r\n      <div class=\"grow2a\">Working (flex-basis)</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"container1\">\r\n  <div class=\"grow1\">\r\n    <div class=\"container2\">\r\n      <div class=\"grow2b\">Not working (width)</div>\r\n    </div>\r\n  </div>\r\n</div></code>    revised fiddle 2 (IE11)   More Browser Discrepancies  Evidence appears to exist (in this question and other examples I've seen) that Webkit-based browsers are no longer honoring the <code>auto</code> default defined in the spec.  Moreover, the adherence to the <code>auto</code> standard may vary based on which property is used for sizing: <code>flex-basis</code> vs. <code>width</code> / <code>height</code>  As discussed in the following post, these properties should render the same way.   What are the differences between flex-basis and width?  "
            }
        ]
    },
    {
        "title": "Flexbox item with scrollable content",
        "question_body": "I have a simple flexbox layout with two items; one fluid width and the other fixed. When the fluid item contains children that are wider / taller than itself, this causes the page to scroll, rather than the fluid item itself.  I have tried solutions to a few similar questions but none seem to work for me. As someone who hasn't used flexbox very much, I feel like I'm missing something obvious...  EDIT:  Adding <code>overflow:auto</code> to <code>.main</code> fixes the scrolling, thanks. However my example was simplified somewhat; I am also attempting to center the child item both vertically and horizontally, using flexbox <code>align-items</code> and <code>justify-content</code> . When this is applied, the <code>main</code> element becomes unscrollable.  EDIT 2  I used the <code>margin:auto</code> trick on the child item as specified at Can't scroll to top of flex item that is overflowing container to fix the second issue.    <code>* {\r\n\tmargin: 0;\r\n}\r\nhtml, body {\r\n\theight: 100%;\r\n}\r\n.container {\r\n\tdisplay: flex;\r\n\theight: 100%;\r\n}\r\n.main {\r\n\tflex: 1;\r\n\theight: 100%;\r\n\tbackground: green;\r\n        overflow: auto;\r\n        display: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n}\r\n.sidebar {\r\n\tflex: 0 0 200px;\r\n\tbackground: blue;\r\n\theight: 100%;\r\n}\r\n.item {\r\n\twidth: 2000px;\r\n\theight: 50px;\r\n\tbackground: red;\r\n}</code>  <code><div class=\"container\">\r\n\t<div class=\"main\">\r\n\t\t<div class=\"item\">\r\n\t\t\tWhen his is 2000px wide, it should scroll inside its parent.\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"sidebar\">\r\n\t\t200px wide sidebar\r\n\t</div>\r\n</div></code>   ",
        "link": "https://stackoverflow.com/questions/46892471/flexbox-item-with-scrollable-content",
        "score": 10,
        "tags": [
            "html",
            "css",
            "scroll",
            "flexbox"
        ],
        "question_id": 46892471,
        "answer_count": 1,
        "view_count": 17980,
        "comment_count": 2,
        "comments": [
            {
                "body": "An initial setting on flex items is <code>min-width: auto</code> . This means that an item cannot be shorter than its content. That's why the item in your case is expanded, causing a horizontal scrollbar on the viewport. You can override this default with <code>min-width: 0</code> or <code>overflow</code> with any value other than <code>visible</code> . jsfiddle.net/e6g70uho/1"
            }
        ],
        "answers": [
            {
                "score": 4,
                "body": "You need to apply <code>overflow:auto</code> to the parent. this property isn't automatic    <code>* {\r\n\tmargin: 0;\r\n}\r\nhtml, body {\r\n\theight: 100%;\r\n}\r\n.container {\r\n\tdisplay: flex;\r\n\theight: 100%;\r\n}\r\n.main {\r\n\tflex: 1;\r\n\theight: 100%;\r\n\tbackground: green;\r\n\toverflow: auto;\r\n}\r\n.sidebar {\r\n\tflex: 0 0 200px;\r\n\tbackground: blue;\r\n\theight: 100%;\r\n}\r\n.item {\r\n\twidth: 2000px;\r\n\theight: 50px;\r\n\tbackground: red;\r\n}</code>  <code><div class=\"container\">\r\n\t<div class=\"main\">\r\n\t\t<div class=\"item\">\r\n\t\t\tThis is 2000px wide, and should scroll inside its parent. Instead, the body is scrolling.\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"sidebar\">\r\n\t\t200px wide sidebar\r\n\t</div>\r\n</div></code>   "
            }
        ]
    },
    {
        "title": "Overflow auto not working with justify-content: flex-end",
        "question_body": "I'm trying to get an element to have items aligned to the right, and all overflowing elements to be hidden but accessed by scrollbar.  But it seems like the scrollbar disappears when specifying <code>justify-content: flex-end</code> . Why is that, and how do I fix it?  Here is demo: https://jsfiddle.net/efguz4mp/1/    <code>.row {\r\n  width: 100%;\r\n  max-width: 500px;\r\n  background: #DADADA;\r\n  display: flex;\r\n  overflow: auto;\r\n  justify-content: flex-end;\r\n}\r\n.box {\r\n  width: 200px;\r\n  height: 40px;\r\n  margin: 4px 10px;\r\n  background: red;\r\n  flex-shrink: 0;\r\n}</code>  <code><div class=\"row\">\r\n  <div class=\"box\"></div>\r\n  <div class=\"box\"></div>\r\n  <div class=\"box\"></div>\r\n  <div class=\"box\"></div>\r\n  <div class=\"box\"></div>\r\n  <div class=\"box\"></div>\r\n</div></code>    ...and here is demo without <code>justify-content: flex-end;</code> : https://jsfiddle.net/efguz4mp    <code>.row {\r\n  width: 100%;\r\n  max-width: 500px;\r\n  background: #DADADA;\r\n  display: flex;\r\n  overflow: auto;\r\n}\r\n.box {\r\n  width: 200px;\r\n  height: 40px;\r\n  margin: 4px 10px;\r\n  background: red;\r\n  flex-shrink: 0;\r\n}</code>  <code><div class=\"row\">\r\n  <div class=\"box\"></div>\r\n  <div class=\"box\"></div>\r\n  <div class=\"box\"></div>\r\n  <div class=\"box\"></div>\r\n  <div class=\"box\"></div>\r\n  <div class=\"box\"></div>\r\n</div></code>   ",
        "link": "https://stackoverflow.com/questions/47372148/overflow-auto-not-working-with-justify-content-flex-end",
        "score": 10,
        "tags": [
            "html",
            "css",
            "flexbox"
        ],
        "question_id": 47372148,
        "answer_count": 4,
        "view_count": 6564,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 3,
                "body": "The main problem is that you're dealing with a contradiction:   The <code>justify-content</code> property is designed to distribute extra space in the container.  However, an <code>overflow</code> condition occurs when there is no space left in the container.   Basically, <code>justify-content</code> and <code>overflow</code> have no association. The former applies only inside the container. The latter applies only outside the container.  With <code>justify-content: flex-end</code> , the flex items must be packed at the end of the container (not the end of the <code>flex-start</code> overflow area).  If the end-aligned items are too big to fit in the container, they will overflow on the start side, which is what you're seeing in your layout. But because the <code>overflow</code> property only applies in the direction of the writing mode (LTR, in this case), scrollbars are not rendered ( more details ).  So I would suggest forgetting about <code>justify-content</code> to make this layout work.  Instead, consider this: Use an invisible spacer item to push your content items to the right.    <code>.row {\r\n  display: flex;\r\n  overflow: auto;\r\n  max-width: 500px;\r\n  background: #DADADA;\r\n}\r\n.box {\r\n  flex: 0 0 200px;\r\n  height: 40px;\r\n  margin: 4px 10px;\r\n  background: red;\r\n}\r\n.row::before {\r\n  content: \"\";\r\n  flex: 0 0 400px;\r\n  visibility: hidden;\r\n}</code>  <code><div class=\"row\">\r\n  <div class=\"box\"></div>\r\n  <div class=\"box\"></div>\r\n  <div class=\"box\"></div>\r\n  <div class=\"box\"></div>\r\n  <div class=\"box\"></div>\r\n  <div class=\"box\"></div>\r\n</div></code>    You'll notice that the last item margin collapses. That issue is explained here:   Last margin / padding collapsing in flexbox  "
            },
            {
                "score": 11,
                "body": "When an overflow occur to the left (or top), a scroll doesn't get rendered, and the reason is that a HTML document's normal flow is left-to-right (top-to-bottom).  Flexbox has a row-reverse direction, which will solve that, thought 2 things comes with that:   One need to reorder the items or use an inner wrapper  I.a. Firefox and Edge doesn't show the scroll (possible bug)   Stack snippet    <code>.row {\r\n  width: 100%;\r\n  max-width: 500px;\r\n  background: #DADADA;\r\n  display: flex;\r\n  flex-direction: row-reverse;\r\n  overflow: auto;\r\n}\r\n.box {\r\n  width: 200px;\r\n  height: 40px;\r\n  margin: 4px 10px;\r\n  background: red;\r\n  flex-shrink: 0;\r\n}\r\n/* no wrapper */\r\n.row > .box:nth-child(1) { order: 6; }\r\n.row > .box:nth-child(2) { order: 5; }\r\n.row > .box:nth-child(3) { order: 4; }\r\n.row > .box:nth-child(4) { order: 3; }\r\n.row > .box:nth-child(5) { order: 2; }\r\n.row > .box:nth-child(6) { order: 1; }\r\n/* wrapper */\r\n.inner {\r\n  display: flex;\r\n}</code>  <code><div class=\"row\">\r\n  <div class=\"box\">1</div>\r\n  <div class=\"box\">2</div>\r\n  <div class=\"box\">3</div>\r\n  <div class=\"box\">4</div>\r\n  <div class=\"box\">5</div>\r\n  <div class=\"box\">6</div>\r\n</div>\r\n<div><br><br></div>\r\n<div class=\"row\">\r\n  <div class=\"inner\">\r\n    <div class=\"box\">1</div>\r\n    <div class=\"box\">2</div>\r\n    <div class=\"box\">3</div>\r\n    <div class=\"box\">4</div>\r\n    <div class=\"box\">5</div>\r\n    <div class=\"box\">6</div>\r\n  </div>\r\n</div></code>     Possible workarounds are:   Use <code>direction: rtl</code> to change the flow direction     <code>.row {\r\n  width: 100%;\r\n  max-width: 500px;\r\n  background: #DADADA;\r\n  display: flex;\r\n  overflow: auto;\r\n  direction: rtl;\r\n}\r\n.inner {\r\n  display: flex;\r\n  direction: ltr;\r\n}\r\n.box {\r\n  width: 200px;\r\n  height: 40px;\r\n  margin: 4px 10px;\r\n  background: red;\r\n  flex-shrink: 0;\r\n}</code>  <code><div class=\"row\">\r\n  <div class=\"inner\">\r\n    <div class=\"box\">1</div>\r\n    <div class=\"box\">2</div>\r\n    <div class=\"box\">3</div>\r\n    <div class=\"box\">4</div>\r\n    <div class=\"box\">5</div>\r\n    <div class=\"box\">6</div>\r\n  </div>\r\n</div></code>     Use <code>transform</code> to flip the <code>row</code> element     <code>.row {\r\n  width: 100%;\r\n  max-width: 500px;\r\n  background: #DADADA;\r\n  display: flex;\r\n  overflow: auto;\r\n  transform: scale(-1,1);        /*  flip horizontally  */\r\n}\r\n.inner {\r\n  display: flex;\r\n  transform: scale(-1,1);        /*  reset so items is not backwards  */\r\n}\r\n.box {\r\n  width: 200px;\r\n  height: 40px;\r\n  margin: 4px 10px;\r\n  background: red;\r\n  flex-shrink: 0;\r\n}</code>  <code><div class=\"row\">\r\n  <div class=\"inner\">\r\n    <div class=\"box\">1</div>\r\n    <div class=\"box\">2</div>\r\n    <div class=\"box\">3</div>\r\n    <div class=\"box\">4</div>\r\n    <div class=\"box\">5</div>\r\n    <div class=\"box\">6</div>\r\n  </div>\r\n</div></code>     Use a script on page load to scroll to the right     <code>window.addEventListener(\"load\", function(e) {\r\n  var el = document.querySelector(\".row\");\r\n  el.scrollLeft = el.scrollWidth;\r\n});</code>  <code>.row {\r\n  width: 100%;\r\n  max-width: 500px;\r\n  background: #DADADA;\r\n  display: flex;\r\n  overflow: auto;\r\n}\r\n.box {\r\n  width: 200px;\r\n  height: 40px;\r\n  margin: 4px 10px;\r\n  background: red;\r\n  flex-shrink: 0;\r\n}</code>  <code><div class=\"row\">\r\n  <div class=\"box\">1</div>\r\n  <div class=\"box\">2</div>\r\n  <div class=\"box\">3</div>\r\n  <div class=\"box\">4</div>\r\n  <div class=\"box\">5</div>\r\n  <div class=\"box\">6</div>\r\n</div></code>   "
            }
        ]
    },
    {
        "title": "::first-letter selector - IE11 has a different layout compared to Firefox",
        "question_body": "I'm trying to style a title with <code>::first-letter</code> CSS selector but I have strange layout resulting in Internet Explorer 11.  The code is quite simple: JSFiddle .    <code>h2.titoloPagina::first-letter {\r\n  color: #1d5987;\r\n  display: block;\r\n  float: left;\r\n  font-family: Bell MT !important;\r\n  font-size: 70px;\r\n  /* margin-top: -15px;*/\r\n  padding-right: 3px;\r\n}\r\nh2.titoloPagina span {\r\n  border-bottom: 7px solid #1d5987;\r\n  color: #538cc3;\r\n  font-family: Bell MT !important;\r\n  font-size: 30px !important;\r\n  letter-spacing: 0;\r\n  margin-left: 4px;\r\n  padding-bottom: 5px;\r\n}\r\n/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */\r\n/**\r\n * 1. Set default font family to sans-serif (opinionated).\r\n * 2. Prevent iOS and IE text size adjust after device orientation change,\r\n *    without disabling user zoom.\r\n */\r\nhtml {\r\n  font-family: sans-serif; /* 1 */\r\n  -ms-text-size-adjust: 100%; /* 2 */\r\n  -webkit-text-size-adjust: 100%; /* 2 */\r\n}\r\n/**\r\n * Remove default margin (opinionated).\r\n */\r\nbody {\r\n  margin: 0;\r\n}\r\n/* HTML5 display definitions\r\n   ========================================================================== */\r\n/**\r\n * Correct `block` display not defined for any HTML5 element in IE 8/9.\r\n * Correct `block` display not defined for `details` or `summary` in IE 10/11\r\n * and Firefox.\r\n * Correct `block` display not defined for `main` in IE 11.\r\n */\r\narticle,\r\naside,\r\ndetails,\r\nfigcaption,\r\nfigure,\r\nfooter,\r\nheader,\r\nmain,\r\nmenu,\r\nnav,\r\nsection,\r\nsummary {\r\n  display: block;\r\n}\r\n/**\r\n * 1. Correct `inline-block` display not defined in IE 8/9.\r\n * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\r\n */\r\naudio,\r\ncanvas,\r\nprogress,\r\nvideo {\r\n  display: inline-block; /* 1 */\r\n  vertical-align: baseline; /* 2 */\r\n}\r\n/**\r\n * Prevent displaying `audio` without controls in Mobile Safari 4/5/6/7.\r\n */\r\naudio:not([controls]) {\r\n  display: none;\r\n  height: 0;\r\n}\r\n/**\r\n * Address `[hidden]` styling not present in IE 8/9/10.\r\n * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.\r\n */\r\n[hidden],\r\ntemplate {\r\n  display: none;\r\n}\r\n/* Links\r\n   ========================================================================== */\r\n/**\r\n * Remove the gray background color from active links in IE 10.\r\n */\r\na {\r\n  background-color: transparent;\r\n}\r\n/**\r\n * Improve readability of focused elements when they are also in an\r\n * active/hover state (opinionated).\r\n */\r\na:active,\r\na:hover {\r\n  outline-width: 0;\r\n}\r\n/* Text-level semantics\r\n   ========================================================================== */\r\n/**\r\n * Address inconsistent styling of `abbr[title]`.\r\n * 1. Correct styling in Firefox 39 and Opera 12.\r\n * 2. Correct missing styling in Chrome, Edge, IE, Opera, and Safari.\r\n */\r\nabbr[title] {\r\n  border-bottom: none; /* 1 */\r\n  text-decoration: underline; /* 2 */\r\n  text-decoration: underline dotted; /* 2 */\r\n}\r\n/**\r\n * Address inconsistent styling of b and strong.\r\n * 1. Correct duplicate application of `bolder` in Safari 6.0.2.\r\n * 2. Correct style set to `bold` in Edge 12+, Safari 6.2+, and Chrome 18+.\r\n */\r\nb,\r\nstrong {\r\n  font-weight: inherit; /* 1 */\r\n}\r\nb,\r\nstrong {\r\n  font-weight: bolder; /* 2 */\r\n}\r\n/**\r\n * Address styling not present in Safari and Chrome.\r\n */\r\ndfn {\r\n  font-style: italic;\r\n}\r\n/**\r\n * Address variable `h1` font-size and margin within `section` and `article`\r\n * contexts in Firefox 4+, Safari, and Chrome.\r\n */\r\nh1 {\r\n  font-size: 2em;\r\n  margin: 0.67em 0;\r\n}\r\n/**\r\n * Address styling not present in IE 8/9.\r\n */\r\nmark {\r\n  background-color: #ff0;\r\n  color: #000;\r\n}\r\n/**\r\n * Address inconsistent and variable font size in all browsers.\r\n */\r\nsmall {\r\n  font-size: 80%;\r\n}\r\n/**\r\n * Prevent `sub` and `sup` affecting `line-height` in all browsers.\r\n */\r\nsub,\r\nsup {\r\n  font-size: 75%;\r\n  line-height: 0;\r\n  position: relative;\r\n  vertical-align: baseline;\r\n}\r\nsup {\r\n  top: -0.5em;\r\n}\r\nsub {\r\n  bottom: -0.25em;\r\n}\r\n/* Embedded content\r\n   ========================================================================== */\r\n/**\r\n * Remove border when inside `a` element in IE 8/9/10.\r\n */\r\nimg {\r\n  border: 0;\r\n}\r\n/**\r\n * Correct overflow not hidden in IE 9/10/11.\r\n */\r\nsvg:not(:root) {\r\n  overflow: hidden;\r\n}\r\n/* Grouping content\r\n   ========================================================================== */\r\n/**\r\n * Address margin not present in IE 8/9 and Safari.\r\n */\r\nfigure {\r\n  margin: 1em 40px;\r\n}\r\n/**\r\n * Address inconsistent styling of `hr`.\r\n * 1. Correct `box-sizing` set to `border-box` in Firefox.\r\n * 2. Correct `overflow` set to `hidden` in IE 8/9/10/11 and Edge 12.\r\n */\r\nhr {\r\n  box-sizing: content-box; /* 1 */\r\n  height: 0; /* 1 */\r\n  overflow: visible; /* 2 */\r\n}\r\n/**\r\n * Contain overflow in all browsers.\r\n */\r\npre {\r\n  overflow: auto;\r\n}\r\n/**\r\n * 1. Correct inheritance and scaling of font-size for preformatted text.\r\n * 2. Address odd `em`-unit font size rendering in all browsers.\r\n */\r\ncode,\r\nkbd,\r\npre,\r\nsamp {\r\n  font-family: monospace, monospace; /* 1 */\r\n  font-size: 1em; /* 2 */\r\n}\r\n/* Forms\r\n   ========================================================================== */\r\n/**\r\n * Known limitation: by default, Chrome and Safari on OS X allow very limited\r\n * styling of `select`, unless a `border` property is set.\r\n */\r\n/**\r\n * 1. Correct font properties not being inherited.\r\n * 2. Address margins set differently in Firefox 4+, Safari, and Chrome.\r\n */\r\nbutton,\r\ninput,\r\noptgroup,\r\nselect,\r\ntextarea {\r\n  font: inherit; /* 1 */\r\n  margin: 0; /* 2 */\r\n}\r\n/**\r\n * Address `overflow` set to `hidden` in IE 8/9/10/11.\r\n */\r\nbutton {\r\n  overflow: visible;\r\n}\r\n/**\r\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\r\n * All other form control elements do not inherit `text-transform` values.\r\n * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\r\n * Correct `select` style inheritance in Firefox.\r\n */\r\nbutton,\r\nselect {\r\n  text-transform: none;\r\n}\r\n/**\r\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\r\n *    and `video` controls.\r\n * 2. Correct inability to style clickable `input` types in iOS.\r\n * 3. Improve usability and consistency of cursor style between image-type\r\n *    `input` and others.\r\n */\r\nbutton,\r\nhtml input[type=\"button\"], /* 1 */\r\ninput[type=\"reset\"],\r\ninput[type=\"submit\"] {\r\n  -webkit-appearance: button; /* 2 */\r\n  cursor: pointer; /* 3 */\r\n}\r\n/**\r\n * Re-set default cursor for disabled elements.\r\n */\r\nbutton[disabled],\r\nhtml input[disabled] {\r\n  cursor: default;\r\n}\r\n/**\r\n * Remove inner padding and border in Firefox 4+.\r\n */\r\nbutton::-moz-focus-inner,\r\ninput::-moz-focus-inner {\r\n  border: 0;\r\n  padding: 0;\r\n}\r\n/**\r\n * Restore focus style in Firefox 4+ (unset by a rule above)\r\n */\r\nbutton:-moz-focusring,\r\ninput:-moz-focusring {\r\n  outline: 1px dotted ButtonText;\r\n}\r\n/**\r\n * Address Firefox 4+ setting `line-height` on `input` using `!important` in\r\n * the UA stylesheet.\r\n */\r\ninput {\r\n  line-height: normal;\r\n}\r\n/**\r\n * It's recommended that you don't attempt to style these elements.\r\n * Firefox's implementation doesn't respect box-sizing, padding, or width.\r\n *\r\n * 1. Address box sizing set to `content-box` in IE 8/9/10.\r\n * 2. Remove excess padding in IE 8/9/10.\r\n */\r\ninput[type=\"checkbox\"],\r\ninput[type=\"radio\"] {\r\n  box-sizing: border-box; /* 1 */\r\n  padding: 0; /* 2 */\r\n}\r\n/**\r\n * Fix the cursor style for Chrome's increment/decrement buttons. For certain\r\n * `font-size` values of the `input`, it causes the cursor style of the\r\n * decrement button to change from `default` to `text`.\r\n */\r\ninput[type=\"number\"]::-webkit-inner-spin-button,\r\ninput[type=\"number\"]::-webkit-outer-spin-button {\r\n  height: auto;\r\n}\r\n/**\r\n * Address `appearance` set to `searchfield` in Safari and Chrome.\r\n */\r\ninput[type=\"search\"] {\r\n  -webkit-appearance: textfield;\r\n}\r\n/**\r\n * Remove inner padding and search cancel button in Safari and Chrome on OS X.\r\n * Safari (but not Chrome) clips the cancel button when the search input has\r\n * padding (and `textfield` appearance).\r\n */\r\ninput[type=\"search\"]::-webkit-search-cancel-button,\r\ninput[type=\"search\"]::-webkit-search-decoration {\r\n  -webkit-appearance: none;\r\n}\r\n/**\r\n * Define consistent border, margin, and padding.\r\n */\r\nfieldset {\r\n  border: 1px solid #c0c0c0;\r\n  margin: 0 2px;\r\n  padding: 0.35em 0.625em 0.75em;\r\n}\r\n/**\r\n * 1. Correct `color` not being inherited from fieldset in IE 8/9/10/11.\r\n * 2. Remove padding so people aren't caught out if they zero out fieldsets.\r\n */\r\nlegend {\r\n  color: inherit; /* 1 */\r\n  padding: 0; /* 2 */\r\n}\r\n/**\r\n * Remove default vertical scrollbar in IE 8/9/10/11.\r\n */\r\ntextarea {\r\n  overflow: auto;\r\n}\r\n/**\r\n * Restore font weight (unset by a rule above).\r\n * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\r\n */\r\noptgroup {\r\n  font-weight: bold;\r\n}</code>  <code><h2 class=\"titoloPagina\">\r\n  <span>Title</span>\r\n</h2></code>    With Mozilla Firefox, the first letter is base aligned with the underline, while with Internet Explorer 11 it's 15px lower.  What am I missing? ",
        "link": "https://stackoverflow.com/questions/36032360/first-letter-selector-ie11-has-a-different-layout-compared-to-firefox",
        "score": 9,
        "tags": [
            "html",
            "css",
            "pseudo-element"
        ],
        "question_id": 36032360,
        "answer_count": 5,
        "view_count": 1382,
        "comment_count": 5,
        "comments": [
            {
                "body": "If I remember correctly you can get them to look similar (not the same) with playing around with the line-height. I can't test this right now but I had the same problem sometime way back."
            }
        ],
        "answers": [
            {
                "score": 1,
                "body": "You have to set more properties, like <code>margin</code> , <code>padding</code> and <code>line-height</code> . With some changes it works fine:    <code>h2 {\r\n  margin: 0;\r\n  padding: 0.3em 0;\r\n}\r\nh2.titoloPagina::first-letter {\r\n    color: #1d5987;\r\n    display: block;\r\n    float: left;\r\n    font-family: Bell MT !important;\r\n    font-size: 70px;\r\n   /* margin-top: -15px;*/\r\n    padding: 0 3px 0 0;\r\n    margin: 0;\r\n    line-height: 50px;\r\n}\r\nh2.titoloPagina span {\r\n    border-bottom: 7px solid #1d5987;\r\n    color: #538cc3;\r\n    font-family: Bell MT !important;\r\n    font-size: 30px !important;\r\n    letter-spacing: 0;\r\n    margin-left: 4px;\r\n    padding-bottom: 5px;\r\n}</code>  <code><h2 class=\"titoloPagina\">\r\n  <span>Title</span>\r\n</h2></code>   "
            },
            {
                "score": 2,
                "body": "Your requirement is not completely clear at this point as we are not able to deduct how do you want the alignment of remaining letters and the underline regarding the size and position of your first exactly.  But here are two versions of a code which will be targeting your possible original requirement.:  <code>h2.titoloPagina { \n    font-family: Bell MT !important;\n}\nh2.titoloPagina::first-letter {\n    float: left;\n    font-size: 70px;\n    color: #1d5987;\n    margin-top: 2.5px;\n}\nh2.titoloPagina span {\n    border-bottom: 7px solid #1d5987;\n    font-size: 30px;\n    color: #538cc3;\n    line-height: 70px;\n}\n</code>   <code>h2.titoloPagina { \n    font-family: Bell MT !important;\n}\nh2.titoloPagina::first-letter {\n    float: left;\n    font-size: 70px;\n    color: #1d5987;\n    padding: 14px;\npadding-right: 3px;\n}\nh2.titoloPagina span {\n    border-bottom: 7px solid #1d5987;\n    font-size: 30px;\n    color: #538cc3;\n    line-height: 70px;\n    padding-bottom: 12.5px;\n}\n</code>   p.s.: You need to test your code on browsers other than Firefox, because your code renders exactly the same on Chrome as it does on Explorer and every other major browser except for Mozilla's. "
            },
            {
                "score": 5,
                "body": "This is a well-known discrepancy between Firefox's treatment of floating <code>::first-letter</code> pseudo-elements versus other browsers, documented in this bug report . Firefox is the only browser that follows CSS2.1 correctly here, which is ironic considering that Firefox is otherwise the browser where <code>::first-letter</code> is most broken in (Chrome being a close second).  The bad news is that there is nothing you can do to work around this in other browsers without using some sort of browser hack.  The (sorta) good news is that the working group is planning to consolidate this behavior in CSS Inline Module Level 3 with the <code>initial-letter-align</code> property , and we can only hope that browser vendors implement it eventually. "
            }
        ]
    },
    {
        "title": "uikit dropdowns clipped by overflow container",
        "question_body": "I have a responsive table inside an overflow container like described in the uikit docs :  <code><div class=\"uk-overflow-container\">\n    <table class=\"uk-table uk-table-striped uk-table-hover\">\n        <thead>\n            ...\n        </thead>\n        <tbody>\n            ...\n        </tbody>\n    </table>\n</div>\n</code>  Inside the last <code>td</code> of each row of the <code>tbody</code> I have some dropdown buttons:  <code>...\n<td>...</td>\n<td>\n    ...\n    <div class=\"uk-button-dropdown\"\n         data-uk-dropdown=\"{mode:'click', pos:'bottom-right'}\">\n        <button class=\"uk-button\">\n            <i class=\"uk-icon-angle-down\"></i>\n        </button>\n        <div class=\"uk-dropdown uk-dropdown-close\">\n            <ul class=\"uk-nav uk-nav-dropdown\">\n                <li>...</li>\n            </ul>\n        </div>\n    </div>\n</td>\n</code>  At the end of the table the dropdowns are clipped by the overflow container:   As you can see the dropdown makes the overflow container scroll vertically and at the top of the table the dropdown (or dropup so to say) is just clipped without scrolling:   It's even more problematic in a table with only one row or just a few:   So here is what I tried so far to solve this:  1. I tried using the <code>boundary</code> option as described in the uikit docs (Automatic dropdown flip)  <code><div class=\"uk-overflow-container\" id=\"fix-dropdowns\">\n   ...\n      <div class=\"uk-button-dropdown\" data-uk-dropdown=\"{mode:'click', pos:'bottom-right', boundary:'#fix-dropdowns'}\">\n</code>  This should flip the lower dropdowns up but the automatic flip still refers to the viewport. I even put the <code>id=\"fix-dropdowns\"</code> to different parent elements like the <code>table</code> or <code>tbody</code>  2. I removed the <code>uk-overflow-container</code> class and replaced it with some own css.  <code><div style=\"overflow-x: scroll; overflow-y: visible;\">\n</code>  Also doesn't work.  Solutions?  The examples above omits some details but I prepared a JSFiddle for you with the exact code taken from my project. ",
        "link": "https://stackoverflow.com/questions/42157447/uikit-dropdowns-clipped-by-overflow-container",
        "score": 9,
        "tags": [
            "jquery",
            "html",
            "css",
            "drop-down-menu",
            "uikit"
        ],
        "question_id": 42157447,
        "answer_count": 1,
        "view_count": 1680,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 2,
                "body": "According to this post , you cannot use <code>overflow-x: scroll; overflow-y: visible;</code> , as the <code>visible</code> will always become <code>auto</code> :   If you are using <code>visible</code> for either <code>overflow-x</code> or <code>overflow-y</code> and something other than <code>visible</code> for the other. The <code>visible</code> value is interpreted as <code>auto</code> .   If that's an option, You can set the whole container to <code>overflow: visible;</code> :    <code>.container.uk-overflow-container {\r\n    overflow: visible;\r\n}</code>  <code><script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"></script>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/uikit/2.27.2/js/uikit.min.js\"></script>\r\n<link href=\"https://cdnjs.cloudflare.com/ajax/libs/uikit/2.27.2/css/uikit.almost-flat.min.css\" rel=\"stylesheet\"/>\r\n<br><br><br><br><br>\r\n<div class=\"container uk-overflow-container bordered-container\">\r\n  <table class=\"uk-table uk-table-striped uk-table-hover\">\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th class=\"uk-text-nowrap\">Adressen</th>\r\n        <th class=\"uk-text-nowrap\">Projekte</th>\r\n        <th class=\"uk-text-nowrap\">Tickets</th>\r\n        <th class=\"uk-text-nowrap\">Intern</th>\r\n        <th class=\"uk-text-nowrap\">Cool</th>\r\n        <th class=\"uk-text-nowrap\">Beschreibung</th>\r\n        <th></th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td>Bechtelar, Bergnaum and King</td>\r\n        <td class=\"uk-text-nowrap\"><b>Little Pike 605</b>\r\n          <br>352 Howemouth</td>\r\n        <td class=\"uk-text-nowrap\"><a href=\"#\" class=\"uk-text-muted\">Lorem ipsum </a></td>\r\n        <td>\r\n          <div class=\"uk-button-group\">2</div>\r\n        </td>\r\n        <td><i class=\"uk-icon-ban uk-text-danger\"></i></td>\r\n        <td class=\"uk-text-nowrap\"><i class=\"uk-icon-check uk-text-success\"></i></td>\r\n        <td>Quia soluta numquam harum fuga distinctio cupiditate aperiam. Ipsum iure sequi necessitatibus volupt...</td>\r\n        <td class=\"uk-text-right\">\r\n          <div class=\"uk-button-group\">\r\n            <a href=\"#\" class=\"uk-button uk-button-small uk-button-primary\" data-uk-tooltip=\"\">\r\n              <i class=\"uk-icon-eye\"></i>\r\n            </a>\r\n            <div class=\"uk-button-dropdown\" data-uk-dropdown=\"{mode:'click', pos:'bottom-right', boundary:'#fix-dropdowns'}\" data-uk-tooltip=\"\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              <button class=\"uk-button uk-button-small uk-button-primary\">\r\n                <i class=\"uk-icon-angle-down\"></i>\r\n              </button>\r\n              <div class=\"uk-dropdown uk-dropdown-small uk-dropdown-close uk-dropdown-bottom\" style=\"width: 250px; top: 25px; left: -221px;\" aria-hidden=\"true\" tabindex=\"\">\r\n                <ul class=\"uk-nav uk-nav-dropdown uk-text-left\">\r\n                  <li class=\"uk-nav-header\">Kontakt</li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <span class=\"uk-badge uk-float-right\">2</span> <i class=\"uk-icon-map-marker\"></i> Adressen\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <span class=\"uk-badge uk-float-right\">4</span> <i class=\"uk-icon-user\"></i> Ansprechpartner\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <span class=\"uk-badge uk-float-right\">2</span> <i class=\"uk-icon-credit-card\"></i> Kontoverbindungen\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <span class=\"uk-badge uk-float-right\">0</span> <i class=\"uk-icon-key\"></i> Zugänge\r\n                    </a>\r\n                  </li>\r\n                  <li class=\"uk-nav-header\">Projekte</li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-university\"></i> Projekte\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-check-circle-o\"></i> Tickets\r\n                    </a>\r\n                  </li>\r\n                  <li class=\"uk-nav-header\">Buchhaltung</li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-tag\"></i> Angebote\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-edit\"></i> Aufträge\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-euro\"></i> Rechnungen\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-warning\"></i> Mahnungen\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-plus-square\"></i> Gutschriften\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <a href=\"#\" class=\"uk-button uk-button-small uk-button-primary\" data-uk-tooltip=\"\" title=\"Bearbeiten\">\r\n              <i class=\"uk-icon-pencil\"></i>\r\n            </a>\r\n            <a href=\"#\" class=\"uk-button uk-button-small uk-button-danger\" data-uk-tooltip=\"\" title=\"Löschen\" data-uk-modal=\"\">\r\n              <i class=\"uk-icon-trash\"></i>\r\n            </a>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>Bechtelar, Bergnaum and King</td>\r\n        <td class=\"uk-text-nowrap\"><b>Little Pike 605</b>\r\n          <br>352 Howemouth</td>\r\n        <td class=\"uk-text-nowrap\"><a href=\"#\" class=\"uk-text-muted\">Lorem ipsum </a></td>\r\n        <td>\r\n          <div class=\"uk-button-group\">2</div>\r\n        </td>\r\n        <td><i class=\"uk-icon-ban uk-text-danger\"></i></td>\r\n        <td class=\"uk-text-nowrap\"><i class=\"uk-icon-check uk-text-success\"></i></td>\r\n        <td>Quia soluta numquam harum fuga distinctio cupiditate aperiam. Ipsum iure sequi necessitatibus volupt...</td>\r\n        <td class=\"uk-text-right\">\r\n          <div class=\"uk-button-group\">\r\n            <a href=\"#\" class=\"uk-button uk-button-small uk-button-primary\" data-uk-tooltip=\"\">\r\n              <i class=\"uk-icon-eye\"></i>\r\n            </a>\r\n            <div class=\"uk-button-dropdown\" data-uk-dropdown=\"{mode:'click', pos:'bottom-right', boundary:'#fix-dropdowns'}\" data-uk-tooltip=\"\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              <button class=\"uk-button uk-button-small uk-button-primary\">\r\n                <i class=\"uk-icon-angle-down\"></i>\r\n              </button>\r\n              <div class=\"uk-dropdown uk-dropdown-small uk-dropdown-close uk-dropdown-bottom\" style=\"width: 250px; top: 25px; left: -221px;\" aria-hidden=\"true\" tabindex=\"\">\r\n                <ul class=\"uk-nav uk-nav-dropdown uk-text-left\">\r\n                  <li class=\"uk-nav-header\">Kontakt</li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <span class=\"uk-badge uk-float-right\">2</span> <i class=\"uk-icon-map-marker\"></i> Adressen\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <span class=\"uk-badge uk-float-right\">4</span> <i class=\"uk-icon-user\"></i> Ansprechpartner\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <span class=\"uk-badge uk-float-right\">2</span> <i class=\"uk-icon-credit-card\"></i> Kontoverbindungen\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <span class=\"uk-badge uk-float-right\">0</span> <i class=\"uk-icon-key\"></i> Zugänge\r\n                    </a>\r\n                  </li>\r\n                  <li class=\"uk-nav-header\">Projekte</li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-university\"></i> Projekte\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-check-circle-o\"></i> Tickets\r\n                    </a>\r\n                  </li>\r\n                  <li class=\"uk-nav-header\">Buchhaltung</li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-tag\"></i> Angebote\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-edit\"></i> Aufträge\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-euro\"></i> Rechnungen\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-warning\"></i> Mahnungen\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-plus-square\"></i> Gutschriften\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <a href=\"#\" class=\"uk-button uk-button-small uk-button-primary\" data-uk-tooltip=\"\" title=\"Bearbeiten\">\r\n              <i class=\"uk-icon-pencil\"></i>\r\n            </a>\r\n            <a href=\"#\" class=\"uk-button uk-button-small uk-button-danger\" data-uk-tooltip=\"\" title=\"Löschen\" data-uk-modal=\"\">\r\n              <i class=\"uk-icon-trash\"></i>\r\n            </a>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>Bechtelar, Bergnaum and King</td>\r\n        <td class=\"uk-text-nowrap\"><b>Little Pike 605</b>\r\n          <br>352 Howemouth</td>\r\n        <td class=\"uk-text-nowrap\"><a href=\"#\" class=\"uk-text-muted\">Lorem ipsum </a></td>\r\n        <td>\r\n          <div class=\"uk-button-group\">2</div>\r\n        </td>\r\n        <td><i class=\"uk-icon-ban uk-text-danger\"></i></td>\r\n        <td class=\"uk-text-nowrap\"><i class=\"uk-icon-check uk-text-success\"></i></td>\r\n        <td>Quia soluta numquam harum fuga distinctio cupiditate aperiam. Ipsum iure sequi necessitatibus volupt...</td>\r\n        <td class=\"uk-text-right\">\r\n          <div class=\"uk-button-group\">\r\n            <a href=\"#\" class=\"uk-button uk-button-small uk-button-primary\" data-uk-tooltip=\"\">\r\n              <i class=\"uk-icon-eye\"></i>\r\n            </a>\r\n            <div class=\"uk-button-dropdown\" data-uk-dropdown=\"{mode:'click', pos:'bottom-right', boundary:'#fix-dropdowns'}\" data-uk-tooltip=\"\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              <button class=\"uk-button uk-button-small uk-button-primary\">\r\n                <i class=\"uk-icon-angle-down\"></i>\r\n              </button>\r\n              <div class=\"uk-dropdown uk-dropdown-small uk-dropdown-close uk-dropdown-bottom\" style=\"width: 250px; top: 25px; left: -221px;\" aria-hidden=\"true\" tabindex=\"\">\r\n                <ul class=\"uk-nav uk-nav-dropdown uk-text-left\">\r\n                  <li class=\"uk-nav-header\">Kontakt</li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <span class=\"uk-badge uk-float-right\">2</span> <i class=\"uk-icon-map-marker\"></i> Adressen\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <span class=\"uk-badge uk-float-right\">4</span> <i class=\"uk-icon-user\"></i> Ansprechpartner\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <span class=\"uk-badge uk-float-right\">2</span> <i class=\"uk-icon-credit-card\"></i> Kontoverbindungen\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <span class=\"uk-badge uk-float-right\">0</span> <i class=\"uk-icon-key\"></i> Zugänge\r\n                    </a>\r\n                  </li>\r\n                  <li class=\"uk-nav-header\">Projekte</li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-university\"></i> Projekte\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-check-circle-o\"></i> Tickets\r\n                    </a>\r\n                  </li>\r\n                  <li class=\"uk-nav-header\">Buchhaltung</li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-tag\"></i> Angebote\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-edit\"></i> Aufträge\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-euro\"></i> Rechnungen\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-warning\"></i> Mahnungen\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-plus-square\"></i> Gutschriften\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <a href=\"#\" class=\"uk-button uk-button-small uk-button-primary\" data-uk-tooltip=\"\" title=\"Bearbeiten\">\r\n              <i class=\"uk-icon-pencil\"></i>\r\n            </a>\r\n            <a href=\"#\" class=\"uk-button uk-button-small uk-button-danger\" data-uk-tooltip=\"\" title=\"Löschen\" data-uk-modal=\"\">\r\n              <i class=\"uk-icon-trash\"></i>\r\n            </a>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>Bechtelar, Bergnaum and King</td>\r\n        <td class=\"uk-text-nowrap\"><b>Little Pike 605</b>\r\n          <br>352 Howemouth</td>\r\n        <td class=\"uk-text-nowrap\"><a href=\"#\" class=\"uk-text-muted\">Lorem ipsum </a></td>\r\n        <td>\r\n          <div class=\"uk-button-group\">2</div>\r\n        </td>\r\n        <td><i class=\"uk-icon-ban uk-text-danger\"></i></td>\r\n        <td class=\"uk-text-nowrap\"><i class=\"uk-icon-check uk-text-success\"></i></td>\r\n        <td>Quia soluta numquam harum fuga distinctio cupiditate aperiam. Ipsum iure sequi necessitatibus volupt...</td>\r\n        <td class=\"uk-text-right\">\r\n          <div class=\"uk-button-group\">\r\n            <a href=\"#\" class=\"uk-button uk-button-small uk-button-primary\" data-uk-tooltip=\"\">\r\n              <i class=\"uk-icon-eye\"></i>\r\n            </a>\r\n            <div class=\"uk-button-dropdown\" data-uk-dropdown=\"{mode:'click', pos:'bottom-right', boundary:'#fix-dropdowns'}\" data-uk-tooltip=\"\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              <button class=\"uk-button uk-button-small uk-button-primary\">\r\n                <i class=\"uk-icon-angle-down\"></i>\r\n              </button>\r\n              <div class=\"uk-dropdown uk-dropdown-small uk-dropdown-close uk-dropdown-bottom\" style=\"width: 250px; top: 25px; left: -221px;\" aria-hidden=\"true\" tabindex=\"\">\r\n                <ul class=\"uk-nav uk-nav-dropdown uk-text-left\">\r\n                  <li class=\"uk-nav-header\">Kontakt</li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <span class=\"uk-badge uk-float-right\">2</span> <i class=\"uk-icon-map-marker\"></i> Adressen\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <span class=\"uk-badge uk-float-right\">4</span> <i class=\"uk-icon-user\"></i> Ansprechpartner\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <span class=\"uk-badge uk-float-right\">2</span> <i class=\"uk-icon-credit-card\"></i> Kontoverbindungen\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <span class=\"uk-badge uk-float-right\">0</span> <i class=\"uk-icon-key\"></i> Zugänge\r\n                    </a>\r\n                  </li>\r\n                  <li class=\"uk-nav-header\">Projekte</li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-university\"></i> Projekte\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-check-circle-o\"></i> Tickets\r\n                    </a>\r\n                  </li>\r\n                  <li class=\"uk-nav-header\">Buchhaltung</li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-tag\"></i> Angebote\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-edit\"></i> Aufträge\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-euro\"></i> Rechnungen\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-warning\"></i> Mahnungen\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-plus-square\"></i> Gutschriften\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <a href=\"#\" class=\"uk-button uk-button-small uk-button-primary\" data-uk-tooltip=\"\" title=\"Bearbeiten\">\r\n              <i class=\"uk-icon-pencil\"></i>\r\n            </a>\r\n            <a href=\"#\" class=\"uk-button uk-button-small uk-button-danger\" data-uk-tooltip=\"\" title=\"Löschen\" data-uk-modal=\"\">\r\n              <i class=\"uk-icon-trash\"></i>\r\n            </a>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>Bechtelar, Bergnaum and King</td>\r\n        <td class=\"uk-text-nowrap\"><b>Little Pike 605</b>\r\n          <br>352 Howemouth</td>\r\n        <td class=\"uk-text-nowrap\"><a href=\"#\" class=\"uk-text-muted\">Lorem ipsum </a></td>\r\n        <td>\r\n          <div class=\"uk-button-group\">2</div>\r\n        </td>\r\n        <td><i class=\"uk-icon-ban uk-text-danger\"></i></td>\r\n        <td class=\"uk-text-nowrap\"><i class=\"uk-icon-check uk-text-success\"></i></td>\r\n        <td>Quia soluta numquam harum fuga distinctio cupiditate aperiam. Ipsum iure sequi necessitatibus volupt...</td>\r\n        <td class=\"uk-text-right\">\r\n          <div class=\"uk-button-group\">\r\n            <a href=\"#\" class=\"uk-button uk-button-small uk-button-primary\" data-uk-tooltip=\"\">\r\n              <i class=\"uk-icon-eye\"></i>\r\n            </a>\r\n            <div class=\"uk-button-dropdown\" data-uk-dropdown=\"{mode:'click', pos:'bottom-right', boundary:'#fix-dropdowns'}\" data-uk-tooltip=\"\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              <button class=\"uk-button uk-button-small uk-button-primary\">\r\n                <i class=\"uk-icon-angle-down\"></i>\r\n              </button>\r\n              <div class=\"uk-dropdown uk-dropdown-small uk-dropdown-close uk-dropdown-bottom\" style=\"width: 250px; top: 25px; left: -221px;\" aria-hidden=\"true\" tabindex=\"\">\r\n                <ul class=\"uk-nav uk-nav-dropdown uk-text-left\">\r\n                  <li class=\"uk-nav-header\">Kontakt</li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <span class=\"uk-badge uk-float-right\">2</span> <i class=\"uk-icon-map-marker\"></i> Adressen\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <span class=\"uk-badge uk-float-right\">4</span> <i class=\"uk-icon-user\"></i> Ansprechpartner\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <span class=\"uk-badge uk-float-right\">2</span> <i class=\"uk-icon-credit-card\"></i> Kontoverbindungen\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <span class=\"uk-badge uk-float-right\">0</span> <i class=\"uk-icon-key\"></i> Zugänge\r\n                    </a>\r\n                  </li>\r\n                  <li class=\"uk-nav-header\">Projekte</li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-university\"></i> Projekte\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-check-circle-o\"></i> Tickets\r\n                    </a>\r\n                  </li>\r\n                  <li class=\"uk-nav-header\">Buchhaltung</li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-tag\"></i> Angebote\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-edit\"></i> Aufträge\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-euro\"></i> Rechnungen\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-warning\"></i> Mahnungen\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">\r\n                      <i class=\"uk-icon-plus-square\"></i> Gutschriften\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <a href=\"#\" class=\"uk-button uk-button-small uk-button-primary\" data-uk-tooltip=\"\" title=\"Bearbeiten\">\r\n              <i class=\"uk-icon-pencil\"></i>\r\n            </a>\r\n            <a href=\"#\" class=\"uk-button uk-button-small uk-button-danger\" data-uk-tooltip=\"\" title=\"Löschen\" data-uk-modal=\"\">\r\n              <i class=\"uk-icon-trash\"></i>\r\n            </a>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<br><br><br><br><br></code>   "
            }
        ]
    },
    {
        "title": "How to slow down CSS animation on hovering element without jumps?",
        "question_body": "I'm trying to make marquee in css that will slow down on hovering over the element. I have done something like this but it doesn't stop the main animation and when the mouse exits the marquee it goes back to it's position as if I didn't do anything.  Here's the code in CSS and HTML    <code>.prices {\r\n  background-color: #f5fafd;\r\n  font-size: 14px;\r\n  padding: 6px 0;\r\n  border-bottom: solid 1px #d9d9d9;\r\n  margin-left: 0;\r\n  margin-right: 0;\r\n}\r\n.currency {\r\n  text-align: center;\r\n  color: #444444;\r\n  font-weight: 300;\r\n}\r\n.marquee {\r\n  height: 30px;\r\n  min-width: 640px;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n.marquee p {\r\n  position: absolute;\r\n  width: 640px;\r\n  height: 100%;\r\n  margin: 0;\r\n  line-height: 30px;\r\n  text-align: center;\r\n  transition: all 0.3s ease;\r\n  transform: translateX(100%);\r\n  animation: scroll-left 20s linear infinite;\r\n}\r\n.marquee:hover p {\r\n  transform: translateX(100%);\r\n  animation: scroll-left 30s linear infinite;\r\n}\r\n@keyframes scroll-left {\r\n  0% {\r\n    -moz-transform: translateX(100%);\r\n    /* Browser bug fix */\r\n    -webkit-transform: translateX(100%);\r\n    /* Browser bug fix */\r\n    transform: translateX(100%);\r\n  }\r\n  100% {\r\n    -moz-transform: translateX(-100%);\r\n    /* Browser bug fix */\r\n    -webkit-transform: translateX(-100%);\r\n    /* Browser bug fix */\r\n    transform: translateX(-100%);\r\n  }\r\n}</code>  <code><section class=\"container-fluid prices\">\r\n  <div class=\"row\">\r\n    <div class=\"marquee\">\r\n      <p> lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum </p>\r\n    </div>\r\n  </div>\r\n</section></code>   ",
        "link": "https://stackoverflow.com/questions/48082314/how-to-slow-down-css-animation-on-hovering-element-without-jumps",
        "score": 9,
        "tags": [
            "html",
            "css",
            "css-animations"
        ],
        "question_id": 48082314,
        "answer_count": 1,
        "view_count": 4669,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 12,
                "body": "The issue is that both animations have the same start/end point and different duration. One will be faster than the other BUT they won't have the same state at different time slot.  You can imagine both animations start running at the same time and it's like you hide one and you show the other one.  Here is an example, hover on the first one and you will see it behave like the second one:    <code>.marquee {\r\n  height: 30px;\r\n  min-width: 1140px;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n.marquee p {\r\n  position: absolute;\r\n  height: 100%;\r\n  margin: 0;\r\n  line-height: 30px;\r\n  text-align: center;\r\n  transition: all 0.3s ease;\r\n  animation: scroll-left 20s linear infinite;\r\n}\r\n.marquee.next p,.marquee:hover p  {\r\n  animation: scroll-left 30s linear infinite;\r\n}\r\n@keyframes scroll-left {\r\n  0% {\r\n    transform: translateX(100%);\r\n  }\r\n  100% {\r\n    transform: translateX(-100%);\r\n  }\r\n}</code>  <code><div class=\"marquee\">\r\n  <p> lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum</p>\r\n</div>\r\n<div class=\"marquee next\">\r\n  <p> lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum</p>\r\n</div></code>    You don't have to change animation on hover. Instead you may consider moving the container in the other direction. The idea is to rely on some Physics .  The speed of an element is equal to its speed + the speed of its container and in our case, the container is not moving so its speed is 0. The idea is to move the container in the opposite direction so that we have a negative speed thus the text will be slower.  Here is an example:    <code>.marquee {\r\n  height: 30px;\r\n  min-width: 1140px;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  transition:5s linear;\r\n  transform:translateX(-10%);\r\n}\r\n.marquee p {\r\n  position: absolute;\r\n  height: 100%;\r\n  margin: 0;\r\n  line-height: 30px;\r\n  text-align: center;\r\n  transition: all 0.3s ease;\r\n  animation: scroll-left 20s linear infinite;\r\n}\r\n.marquee:hover {\r\n  transform:translateX(0%);\r\n}\r\n@keyframes scroll-left {\r\n  0% {\r\n    transform: translateX(100%);\r\n  }\r\n  100% {\r\n    transform: translateX(-100%);\r\n  }\r\n}</code>  <code><div class=\"marquee\">\r\n  <p> lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum</p>\r\n</div></code>    You may notice that when the container start moving the speed decreases but when the transition ends, the text gain it's initial speed. And also when you release the mouse the text will gain more speed as the container will get back to its initial position.  Maybe this is not a generic solution to make your element slower at a fixed speed on hover, but you can adjust some values in order to achieve the effect you need. Especially by using big values on the transition of the container as I don't think the user will maintain the hover for too long. "
            }
        ]
    },
    {
        "title": "Anchor link cutting off the page based on height of absolute positioned element",
        "question_body": "When clicking on an anchor link, it cuts off a portion of the page. Near as I can tell it occurs in all browsers.  http://jsfiddle.net/PJDWs/  If you go to that fiddle and click on the link at the top, you will notice that you are unable to scroll up to the top of the page. Effectively part of the page has been removed.  There are a couple things that cause it, but I don't know why they do. If you remove <code>overflow: hidden</code> from the <code>.bodyContent</code> then it does not exhibit this behavior. Also, you will notice that the distance of the cut off is exactly equal to the value of <code>top: XXpx</code> on <code>.stuff</code> . Thus setting <code>top: 0px</code> will fix the problem as well.  The issue is that for the specific design I'm working on, neither of these are options as the element needs to be positioned off the top and the parent needs overflow hidden. But more importantly, why is this occurring, and especially why does it occur across all browsers... it almost seems like it's by design. ",
        "link": "https://stackoverflow.com/questions/8016673/anchor-link-cutting-off-the-page-based-on-height-of-absolute-positioned-element",
        "score": 8,
        "tags": [
            "html",
            "css"
        ],
        "question_id": 8016673,
        "answer_count": 1,
        "view_count": 6790,
        "comment_count": 4,
        "comments": [
            {
                "body": "Just for reference some useful info here positioniseverything.net/articles/onetruelayout/appendix/… Also contains test to see if it will happen."
            }
        ],
        "answers": [
            {
                "score": 5,
                "body": "If you remove the <code>height:100%;</code> and replace it with <code>bottom:0;</code> it will work because the height, with top and bottom set, is then defined by the enclosing container - it's an interesting bug but this workaround will get the job done. "
            }
        ]
    },
    {
        "title": "Html - Overflow:hidden still takes space",
        "question_body": "I have a problem with a scrollable div. There's a div acting as a scrollable container (using a jquery plugin). The container has an overflow:hidden style. it works as expected, but i noticed that the browser has a scroll too, something which I want to prevent.  I know i can disable scrolling on the html body entirely, but i wish to avoid this since it means manipulation on resize which isn't really an elegant fix.  I know that the hidden overflow, contrary to a \"display: none\", still takes up space. what I'm looking for is a simple way to have my overflow \"really\" hidden. Thanks. ",
        "link": "https://stackoverflow.com/questions/16333298/html-overflowhidden-still-takes-space",
        "score": 8,
        "tags": [
            "jquery",
            "html",
            "css",
            "scroll",
            "overflow"
        ],
        "question_id": 16333298,
        "answer_count": 1,
        "view_count": 4217,
        "comment_count": 5,
        "comments": [
            {
                "body": "Have you set the height of the container? You need to give it a height."
            }
        ],
        "answers": []
    },
    {
        "title": "jQuery .height() outputting same value as .scrollHeight on div with overflow:auto (IE8)",
        "question_body": "After routing around many other questions I have not found an answer that fixes my problem.  I am writing a script to find out whether the div is overflowing. But when trying to retrieve the visible height with <code>jQuery.height()</code> , <code>jQuery.innerHeight()</code> or <code>JavaScripts offsetHeight</code> . I am given the value of the whole <code>div</code> (Including the part which is overflowing) i.e: the same value as scrollHeight.  The containing DIVs style:  <code>{\n    overflow-x: hidden;\n    overflow-y: auto;\n    width: 73%;\n    bottom: 0px;\n    float: left;\n    height: 100%;\n    top: 0px;\n}\n</code>  I've created a mock up of the scenario on jsFiddle: http://jsfiddle.net/Lukedturnbull/L2bxmszv/3/ (Make sure to make the preview screen smaller to create the scroll bar) ",
        "link": "https://stackoverflow.com/questions/25609506/jquery-height-outputting-same-value-as-scrollheight-on-div-with-overflowaut",
        "score": 8,
        "tags": [
            "javascript",
            "jquery",
            "html",
            "css",
            "internet-explorer-8"
        ],
        "question_id": 25609506,
        "answer_count": 3,
        "view_count": 42551,
        "comment_count": 2,
        "comments": [
            {
                "body": "Which <code>div</code> are you targeting with Jquery to get the <code>height</code> ? The container one, or the inner one?"
            }
        ],
        "answers": [
            {
                "score": 16,
                "body": "Everything seems fine, <code>jQuery.height()</code> and <code>jQuery.innerHeight()</code> has nothing to do with the overflow property. They will return heights, not just the visible part.  If you want to know the content height you have to use <code>scrollHeight</code> . This <code>scrollHeight</code> is a regular javascript property you don't have to use jQuery  <code>document.getElementById(\"wrapper\").scrollHeight;\n</code>  Or you can use jQuery selector  <code>$('#wrapper')[0].scrollHeight;\n</code>  See the working jsfiddle: http://jsfiddle.net/scgz7an5/1/  Notice that  <code>$('#wrapper').scrollHeight;\n</code>  returns undefined.  UPDATE  You forgot the most important part of floating elements. You forgot to clear them.  Take a look at this jsfiddle, is an edit of yours but with floating elements cleared. There you see different values for <code>scrollHeight</code> and <code>jQuery.height()</code> . See that <code>.structureContent</code> is the one that has the scroll bar, not <code>.content</code> neither <code>.width100</code> .  <code>.structureContent</code> has <code>overflow:auto</code> and the scrollbar you see comes from it.  http://jsfiddle.net/L2bxmszv/5/  I added this class to clear your floating elements.  <code>.clearfix:before,\n.clearfix:after, {\n  content: '\\0020';\n  display: block;\n  overflow: hidden;\n  visibility: hidden;\n  width: 0;\n  height: 0; }\n.clearfix:after {\n  clear: both; }\n.clearfix {\n  zoom: 1; }\n</code>  The output was this:  <code>.content\n324 for scrollHeight\n324 for clientHeight\n324 for jQuery.height()\n.structureContent\n324 for scrollHeight\n276 for clientHeight\n276 for jQuery.height()\n</code>  See a great article about floating elements and clearing them here: http://css-tricks.com/all-about-floats/ "
            }
        ]
    },
    {
        "title": "CSS ellipsis inside flex item",
        "question_body": "I have a layout based on flexbox. Two columns, one fixed size and the second need to take the rest space. In the grow column I have a string that I want it to be clipped.  In Chrome it works fine. But it doesn't work in Firefox and IE. I tried to fix it by giving the grow (flex item) inner element a width by using relative and absolute positions, but then I got a corrupt layout. The corruption is related that the element's height doesn't take in account to all its child elements.  Note: the inner element inside the flex grow item is built with several div tags.  Here is the jsFiddle .    <code>.cols {\r\n  display: flex;\r\n}\r\n.flex--0 {\r\n  flex: 0 0 auto;\r\n}\r\n.flex--1 {\r\n  flex: 1 1 auto;\r\n}\r\n.absolute {\r\n  position: absolute;\r\n}\r\n.relative {\r\n  position: relative;\r\n}\r\n.width--100 {\r\n  width: 100%;\r\n}\r\n.ellipsis {\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n}\r\n.border {\r\n  border: 1px solid gray;\r\n}</code>  <code><h1>Ellipsis inside Flex item</h1>\r\n<h2>Working fine in Chrome Not working in FF and IE</h2>\r\n<div class=\"cols border\">\r\n  <div class=\"flex--0 border padding--sm\">Icon</div>\r\n  <div class=\"flex--1 border padding--sm\">\r\n    <div class=\"ellipsis\">Icon lkdjasdoif dlkjasdfo;isd fasldf ;asofj as;doifja dflkas d;laiksjdf oaisjdf asldkfj a;slkfdj as;oifj as;ldkfj asldkfjowiejfa;wlkdfj as;lkdjf as;lkdfj a;osifj aw;lkefj asldkfj ;aolifj aw;oiefjasl;dkfj a;slkdfj aodfj aw;lfjk as;lkdfj a;oiwefjr</div>\r\n    <div>Icon</div>\r\n    <div>Icon</div>\r\n    <div>Icon</div>\r\n  </div>\r\n</div>\r\n<div>Second BLOCK</div>\r\n<h2>Trying to fix in FF and IE (Layout corrupts)</h2>\r\n<div class=\"cols border\">\r\n  <div class=\"flex--0 border padding--sm\">Icon</div>\r\n  <div class=\"flex--1 relative border padding--sm\">\r\n    <div class=\"absolute width--100\">\r\n      <div class=\"ellipsis\">Icon lkdjasdoif dlkjasdfo;isd fasldf ;asofj as;doifja dflkas d;laiksjdf oaisjdf asldkfj a;slkfdj as;oifj as;ldkfj asldkfjowiejfa;wlkdfj as;lkdjf as;lkdfj a;osifj aw;lkefj asldkfj ;aolifj aw;oiefjasl;dkfj a;slkdfj aodfj aw;lfjk as;lkdfj a;oiwefjr</div>\r\n      <div>Icon</div>\r\n      <div>Icon</div>\r\n      <div>Icon</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div>Second BLOCK</div></code>   ",
        "link": "https://stackoverflow.com/questions/29947245/css-ellipsis-inside-flex-item",
        "score": 8,
        "tags": [
            "html",
            "css",
            "flexbox",
            "ellipsis"
        ],
        "question_id": 29947245,
        "answer_count": 1,
        "view_count": 7427,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 20,
                "body": "You can add <code>min-width: 0;</code> to the flex item.  <code>.flex--1 {\n  flex: 1 1 auto;\n  min-width: 0;\n}\n</code>  jsFiddle  Or add <code>overflow: hidden;</code> to it.  <code>.flex--1 {\n  flex: 1 1 auto;\n  overflow: hidden; /*or auto*/\n}\n</code>  jsFiddle   Why?   4.5. Implied Minimum Size of Flex Items  To provide a more reasonable default minimum size for flex items, this specification introduces a new <code>auto</code> value as the initial value of the <code>min-width</code> and <code>min-height</code> properties defined in CSS 2.1.    Alternatively, you can wrap the content into a container.  <code>.container {\n  display: table;\n  table-layout: fixed;\n  width: 100%;\n}\n.ellipsis {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n</code>  jsFiddle "
            }
        ]
    },
    {
        "title": "CSS column-count and Chrome bug: how to avoid overflow content being cropped",
        "question_body": "When <code>column-count</code> is used, it seems to crop any overflow content.    <code>#columns {\r\n  -webkit-column-count: 1;\r\n  -webkit-column-gap: 10px;\r\n  /*-webkit-column-fill: auto;*/\r\n  -moz-column-count: 1;\r\n  -moz-column-gap: 10px;\r\n  /*-moz-column-fill: auto;*/\r\n  column-count: 1;\r\n  column-gap: 10px;\r\n  /*column-fill: auto;*/\r\n  border: 1px solid red;\r\n  overflow: visible;\r\n}\r\n.pin {\r\n  width: 100%;\r\n  display: inline-block;\r\n  padding: 10px;\r\n  margin-bottom: 5px;\r\n}</code>  <code><div id=\"columns\">\r\n  <div class=\"pin\">\r\n    <a href=\"#\">\r\n      <span class=\"onsale\">Sale!</span>\r\n      <img src=\"#.jpg\" />\r\n    </a>\r\n    <h3>Product 1</h3>\r\n    </a>\r\n  </div>\r\n</div></code>    Result:   Any ideas how I can fix this?  EDIT 1:  It seems it is a bug in Chrome .  it is fine on Firefox though:   EDIT 2:  <code>span.onsale {\n    min-height: 3.236em;\n    min-width: 3.236em;\n    padding: .202em;\n    font-size: 1em;\n    font-weight: 700;\n    position: absolute;\n    text-align: center;\n    line-height: 3.236;\n    top: -.5em;\n    left: -.5em;\n    margin: 0;\n    border-radius: 100%;\n    background-color: $highlight;\n    color: $highlightext;\n    font-size: .857em;\n    -webkit-font-smoothing: antialiased;\n}\n</code> ",
        "link": "https://stackoverflow.com/questions/36009713/css-column-count-and-chrome-bug-how-to-avoid-overflow-content-being-cropped",
        "score": 8,
        "tags": [
            "html",
            "css",
            "column-count"
        ],
        "question_id": 36009713,
        "answer_count": 4,
        "view_count": 4702,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 1,
                "body": "I'm not sure how you are styling your <code>.onsale</code> so I styled on my own way.  If you use <code>position:relative</code> in <code>.pin</code> and then <code>position:absolute</code> you can achieve what you want.  UPDATE: The issue is the <code>webkit-column-count:1</code> in Chrome and since having that with <code>1</code> or nothing is the same, just remove it and use another technique that will allow you to have the <code>.onsale</code> out of flow by using <code>position:absolute</code>    <code>#columns {\r\n  border: 1px solid red;\r\n}\r\n.pin {\r\n  width: 100%;\r\n  display: inline-block;\r\n  padding: 10px;\r\n  margin-bottom: 5px;\r\n  position: relative\r\n}\r\n.onsale {\r\n   min-height: 3.236em;\r\n    min-width: 3.236em;\r\n    padding: .202em;\r\n    font-size: 1em;\r\n    font-weight: 700;\r\n    position: absolute;\r\n    text-align: center;\r\n    line-height: 3.236;\r\n    top: -.5em;\r\n    left: -.5em;\r\n    margin: 0;\r\n    border-radius: 100%;\r\n    background-color: lightgreen;\r\n    color: white;\r\n    font-size: .857em;\r\n    -webkit-font-smoothing: antialiased;\r\n}</code>  <code><div id=\"columns\">\r\n  <div class=\"pin\">\r\n    <a href=\"#\">\r\n      <span class=\"onsale\">Sale!</span>\r\n      <img src=\"//placehold.it/300x300\" />\r\n    </a>\r\n    <h3>Product 1</h3>\r\n  </div>\r\n  <div class=\"pin\">\r\n    <a href=\"#\">\r\n      <span class=\"onsale\">Sale!</span>\r\n      <img src=\"//placehold.it/300x300\" />\r\n    </a>\r\n    <h3>Product 2</h3>\r\n  </div>\r\n</div></code>   "
            }
        ]
    },
    {
        "title": "Table Width 100% with Overflow Scroll",
        "question_body": "I have tables on my web page set to <code>width:100%</code> . This stretches the table to the full width of my page if needed, or causes the contents of the table to wrap if the page is too narrow. Everything in the table is kept in a grid.  Unfortunately, some issues arise if there are long words in the table which prevents the td from getting narrower. When this happens, the page starts to developing a horizontal scroll bar to accommodate the table, put other elements on the page, such as paragraphs, stay the width of the original page.  I tried to set the table to <code>overflow:scroll</code> to prevent the webpage from getting wider, limiting it to just the table, but this didn't fix the issue. I even tried <code>overflow:hidden</code> to see if it would respond, but I couldn't get it to work.  The overflow would work if I set the table to <code>display:block</code> , but I can't get the table rows and table data cells to stretch across the full table and maintain its table-like appearance.  Is it possible to always have a table be 100% the width of a page, and to use overflow scroll if the table exceeds this width?  I added this example below. It works nicely except when the page gets very narrow, like around 150px for this example. The table cells get so narrow that it can't wrap any more. I'd like for the table to overflow, but instead the whole page overflows.  <code><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent finibus nulla et lorem imperdiet, eu malesuada enim viverra. Fusce sit amet nisi sed ante semper porta non in velit. Aenean euismod finibus nibh id mollis. Duis finibus, urna eu gravida posuere, nisl tortor condimentum dui, sed suscipit ante lacus et augue. Vestibulum ut leo hendrerit, convallis lectus quis, mollis purus. Mauris vitae libero aliquam, porttitor nisi vitae, pellentesque odio. Mauris vestibulum lacinia sem. Aenean sit amet nulla ipsum. Mauris pellentesque dui feugiat odio feugiat, vel egestas eros pellentesque. Cras porttitor metus eu porttitor lacinia.</p>\n<table style=\"width:100%;overflow:scroll;background:#555\">\n<tr><td>column one</td><td>column two</td><td>column three</td></tr>\n</table>\n</code> ",
        "link": "https://stackoverflow.com/questions/63666463/table-width-100-with-overflow-scroll",
        "score": 8,
        "tags": [
            "html",
            "css"
        ],
        "question_id": 63666463,
        "answer_count": 4,
        "view_count": 17180,
        "comment_count": 5,
        "comments": [
            {
                "body": "Maybe word-break is what you're looking for, or the <code>white-space</code> property"
            }
        ],
        "answers": [
            {
                "score": 8,
                "body": "Using CSS grid.    <code>.table-wrapper {\n  display: grid;\n  grid-template-columns: repeat(1, minmax(0, 1fr));\n  overflow: auto;\n  white-space: nowrap;\n}</code>  <code><div class=\"table-wrapper\">\n<table>\n  <thead>\n    <tr>\n        <th>Head 1</th>\n        <th>Head 2</th>\n        <th>Head 3</th>\n        <th>Head 4</th>\n        <th>Head 5</th>\n        <th>Head 1</th>\n        <th>Head 2</th>\n        <th>Head 3</th>\n        <th>Head 4</th>\n        <th>Head 5</th>\n        <th>Head 1</th>\n        <th>Head 2</th>\n        <th>Head 3</th>\n        <th>Head 4</th>\n        <th>Head 5</th>\n        <th>Head 1</th>\n        <th>Head 2</th>\n        <th>Head 3</th>\n        <th>Head 4</th>\n        <th>Head 5</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n        <td>Content 1</td>\n        <td>Content 2</td>\n        <td>Content 3</td>\n        <td>Content 4</td>\n        <td>Content 5</td>\n        <td>Content 1</td>\n        <td>Content 2</td>\n        <td>Content 3</td>\n        <td>Content 4</td>\n        <td>Content 5</td>\n        <td>Content 1</td>\n        <td>Content 2</td>\n        <td>Content 3</td>\n        <td>Content 4</td>\n        <td>Content 5</td>\n        <td>Content 1</td>\n        <td>Content 2</td>\n        <td>Content 3</td>\n        <td>Content 4</td>\n        <td>Content 5</td>\n    </tr>\n  </tbody>\n</table>\n</div></code>   "
            },
            {
                "score": 9,
                "body": "You can't do it by changing <code>display</code> alone for the table, but there are a couple of ways you can achieve this.  1. Add a \"scrolling\" container div  You can up the standard table in a container div and give it the <code>overflow: auto;</code> , so it will have the scroll bar.  <code>table          { width: 100%; }\n.scrollwrapper { overflow: auto; }\n</code>  This means the table will stretch to at least 100% of the width even if it is not wide enough on its own, and if the content makes it wider than 100% them the div gets a scrollbar.  Working Example:    <code>table {\n  width: 100%;\n  border: 1px solid blue;\n}\n.scrollwrapper {\n  overflow: auto;\n}\ntd {\n  border: 1px solid #aaa;\n}</code>  <code><h3>Scrolling Wrapper - Wide Table</h3>\n<div class=\"scrollwrapper\">\n  <table>\n    <tr>\n      <td>thisisoneverylongwordthatwillnotwrapinthetablecell</td>\n      <td>thisisoneverylongwordthatwillnotwrapinthetablecell</td>\n      <td>thisisoneverylongwordthatwillnotwrapinthetablecell</td>\n    </tr>\n    <tr>\n    <td>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent finibus nulla et lorem imperdiet, eu malesuada enim viverra.</td>\n    <td>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent finibus nulla et lorem imperdiet, eu malesuada enim viverra.</td>\n    <td>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent finibus nulla et lorem imperdiet, eu malesuada enim viverra.</td>\n    </tr>\n  </table>\n</div>\n<h3>Scrolling Wrapper - Narrow Table</h3>\n<div class=\"scrollwrapper\">\n  <table>\n    <tr>\n      <td>Column 1</td>\n      <td>Column 2</td>\n      <td>Column 3</td>\n    </tr>\n    <tr>\n      <td>Short text</td>\n      <td>Short text</td>\n      <td>Short text</td>\n    </tr>\n  </table>\n</div></code>    2. Table with display:block  This doesn't do what you want, but lets look at why...  When you give the table <code>display:block</code> property, it adds the scrollbar to tables if they are wider than the available space, which is what you want. However as you noted, if the table isn't as wide as the available space, <code>width:100%</code> doesn't make the columns stretch to fill the width:  Working Example of display:block on tables    <code>table {\n  width: 100%;\n  border: 1px solid red;\n  overflow: auto;\n  display: block;\n}\ntd {\n  border: 1px solid #aaa;\n}</code>  <code><h3>Display:Block - Wide Table</h3>\n<table>\n  <tr>\n    <td>thisisoneverylongwordthatwillnotwrapinthetablecell</td>\n    <td>thisisoneverylongwordthatwillnotwrapinthetablecell</td>\n    <td>thisisoneverylongwordthatwillnotwrapinthetablecell</td>\n  </tr>\n  <tr>\n    <td>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent finibus nulla et lorem imperdiet, eu malesuada enim viverra.</td>\n    <td>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent finibus nulla et lorem imperdiet, eu malesuada enim viverra.</td>\n    <td>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent finibus nulla et lorem imperdiet, eu malesuada enim viverra.</td>\n  </tr>\n</table>\n<h3>Display:Block - Narrow Table</h3>\n<table>\n  <tr>\n    <td>Column 1</td>\n    <td>Column 2</td>\n    <td>Column 3</td>\n  </tr>\n  <tr>\n    <td>Short text</td>\n    <td>Short text</td>\n    <td>Short text</td>\n  </tr>\n</table></code>    As we can see in the example above, the table is actually stretching to 100%, however because the table row and cells don't fill the table. This is when I discovered the <code>tbody</code> hack...  3. Table with Display:block and tbody \"hack\"  Note that this is very much a hack and I've no idea how well supported it might be!  While playing around with this, I realised that the problem is that the rows and cells are not acting as normal rows and cells because they are not in a parent with <code>display:table</code> .  That's when I discovered that when I added <code>display:table</code> to the <code>tbody</code> , it gave the rows and cells a parent with the correct display type and it worked!  <code>table       { display: block; overflow: auto; }\ntable tbody { display: table; width: 100%; }\n</code>  It seems to work even when the <code>tbody</code> is not explicitly added in the html.  Working Example of tbody hack    <code>table {\n  border: 1px solid blue;\n  overflow: auto;\n  display: block;\n}\ntable tbody {\n  display: table;\n  width: 100%;\n}\ntd {\n  border: 1px solid #aaa;\n}</code>  <code><h3>Tbody \"Hack\" - Wide Table</h3>\n<table>\n  <tr>\n    <td>thisisoneverylongwordthatwillnotwrapinthetablecell</td>\n    <td>thisisoneverylongwordthatwillnotwrapinthetablecell</td>\n    <td>thisisoneverylongwordthatwillnotwrapinthetablecell</td>\n  </tr>\n  <tr>\n    <td>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent finibus nulla et lorem imperdiet, eu malesuada enim viverra.</td>\n    <td>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent finibus nulla et lorem imperdiet, eu malesuada enim viverra.</td>\n    <td>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent finibus nulla et lorem imperdiet, eu malesuada enim viverra.</td>\n  </tr>\n</table>\n<h3>Tbody \"Hack\" - Narrow Table</h3>\n<table class=\"tbody-hack\">\n  <tr>\n    <td>Column 1</td>\n    <td>Column 2</td>\n    <td>Column 3</td>\n  </tr>\n  <tr>\n    <td>Short text</td>\n    <td>Short text</td>\n    <td>Short text</td>\n  </tr>\n</table></code>   "
            }
        ]
    },
    {
        "title": "Table with dynamic columns but layout fixed",
        "question_body": "I want a table that is 100% if the page that can contain any number of columns, dynamically created. Each column can contain very long words, so long that they all might not fit on one page. To fix this i used <code>table-layout: fixed</code> which made all columns of the table visible on the page. The problem is that I still want the width of each column to be dynamic so that if a column have short words it should be shorter than the one with the long word.  Example: jsfiddle .  Table 1 always shows all columns but when the page is wide enough it breaks the word even though there are free space in other columns.  Table 2 works fine when the page is wider than the columns but the first column pushes the other columns out of the screen/onto other objects when the window is smaller.  Is there a way to get it all? A table that always contains all columns and columns that are not wider than they have to be to fit? I want it to break the words if it has to rather than overflowing the table.  I could accept a js/jquery solution but if it's possible with css that is preferable.  Edit:  Small table: Note: asasdasdasdasdasdasdasdasdasdasdasd is one word that is shortened because the table can't be larger than this.  <code>+--------------------+----------+---------+\n|asasdasdasdasdasdasd|qweqweqweq|zxczxczxc|\n|asdasdasdasdasd     |          |         |\n+--------------------+----------+---------+\n</code>  Large table: Note: all columns are not of equal size, preferably they increase with empty spaces equally distributed.  <code>+--------------------------------------+-------------+------------+\n|asasdasdasdasdasdasdasdasdasdasdasd   |qweqweqweq   |zxczxczxc   |\n+--------------------------------------+-------------+------------+\n</code> ",
        "link": "https://stackoverflow.com/questions/10833711/table-with-dynamic-columns-but-layout-fixed",
        "score": 7,
        "tags": [
            "javascript",
            "jquery",
            "html",
            "css"
        ],
        "question_id": 10833711,
        "answer_count": 2,
        "view_count": 2312,
        "comment_count": 2,
        "comments": [],
        "answers": [
            {
                "score": 1,
                "body": "If I understand this could be a starting point:  <code>var tds;\n$(\"table\").each(function() {\n   tds = $(\"td\");\n    for(var x = 0; x < tds.length; x++){\n        tds.eq(x).css('max-width', '100px');\n    }\n});\n</code> "
            }
        ]
    },
    {
        "title": "Scrolling the Float",
        "question_body": "I am quite inexperienced when it comes to HTML/CSS, so please help me out.  I have the following layout  <code><style>\n#main {background-color: red; width: 30%;}\n#right_al{float: right;}\n#to_scroll{overflow: scroll;}\n</style>\n<div id='main'>\n    <div id='right_al'>\n        CONTENT#foo\n        <div id='to_scroll'>\n        ZZZ<br />ZZZ<br />ZZZ<br />ZZZ<br />ZZZ<br />\n        ZZZ<br />ZZZ<br />ZZZ<br />\n        </div>\n    </div>\n    <div id='div1'>CONTENT #1</div>\n    <div id='div2'>CONTENT #2</div>\n    <div id='div3'>CONTENT #3</div>\n    <div id='div4'>CONTENT #4</div>\n    <div id='div5'>CONTENT #5</div>\n</div>\n</code>  The <code>overflow: scroll</code> inside <code>#to_scroll</code> is to show what i want, it doesn't work. The <code>#right_al</code> crosses the parent boundary and clearing the float will increase the parent's size, which i don't want.  jsFiddle link: http://jsfiddle.net/5ycnw/  What i want is   div1 to div5 lies on the left inside the parent.  the divs on the left decide the max height the parent div stretches to. The div floated to the right has a child <code>#to_scroll</code> which scrolls when its contents overflow the <code>#main</code> .   A solution i came up with involves fixing the height of the <code>right_al</code> , but the height of the parent <code>#main</code> is subject to the contents on the left divs and i want a CSS only solution.  Thanks in advance. ",
        "link": "https://stackoverflow.com/questions/13952636/scrolling-the-float",
        "score": 7,
        "tags": [
            "html",
            "css"
        ],
        "question_id": 13952636,
        "answer_count": 2,
        "view_count": 275,
        "comment_count": 8,
        "comments": [
            {
                "body": "you could put a wrapper div around div to 5 and float it left."
            },
            {
                "body": "@SvenBieder But i want the div1 to div5 to stretch the parent <code>#main</code> 's height which they won't i float them."
            },
            {
                "body": "Just want to make sure I get it right: you want to have the right element #right_al have the same height as #main? Using \"float:right\" already removed the element from the document flow so this solution will not work. Will try to show another solution without floating elements."
            },
            {
                "body": "I reread your initial question and I can't think of a solution without adding some height definition at some point. Imagine the following underlying problem: you have two \"cells\" (comparable to HTML tables) and both are part of the same row. Now the row's height needs to be calculated and therefore the height information of both cells is compared. If the right cell has overflow:scroll and a height, this height will be the minimum height of the row, without a defined height the row will stretch to fit the contents defined inside the right \"cell\"."
            },
            {
                "body": "More info from W3C's overflow definition : [Add scrollbars when] \"an element's height exceeds an explicit height assigned to the containing block (i.e., the containing block's height is determined by the 'height' property, not by content height).\". Following W3C's definition, you either have height+scrollbars or no height+no scrollbars."
            }
        ],
        "answers": [
            {
                "score": 2,
                "body": "As mentioned in my above comment, the W3C specs will not allow scrolling containers when no height is given because the container's inner height will be used to define its total height. If using a bit of JS code would be an option, have a look at the following Fiddle:  http://jsfiddle.net/Moonbird_IT/kf3vD/  Here's my HTML structure I used in the demo:  <code><div id=\"main\">\n<div id=\"main-column\">...</div>\n<div id=\"side-bar\">\n  <div id=\"side-bar-header\">\n  Sidebar Header\n  </div>\n  <div id=\"side-bar-scroller\">\n      <ul>\n          <li>Option 1</li>\n          <li>Option 2</li>\n          <li>Option 3</li>        \n          <li>Option 4</li>\n          <li>Option 5</li>\n          <li>Option 6</li>                \n          <li>Option 7</li>\n          <li>Option 8</li>\n          <li>Option 9</li>  \n          <li>Option 10</li>\n          <li>Option 11</li>\n          <li>Option 12</li>               \n      </ul>\n  </div>\n</div>\n</code>  ​  When the document is completely loaded, height information of the left element (main content element) will be used to set the height of the scrolling element inside the side bar minus the height needed to display the title of the sidebar.  The essential part would be this short jQuery instruction:  <code>$(document).ready(function() {\n  var mainHeight=$('#main-column').height();    \n  var sidebarHeaderHeight=$('#side-bar-header').height();    \n  $('#side-bar-scroller').css('height', mainHeight-sidebarHeaderHeight);\n});​\n</code>  I tested the code in Chrome only so you will definitely need a bit of fine-tuning there :-) "
            }
        ]
    },
    {
        "title": "Website is displaying a white space on right side of screen in iPhone",
        "question_body": "I am having a problem on http://eiglaw.com -- an approximately 25px wide white space/border is showing on the right side of the screen on iPhone. I researched the problem on stackoverflow and these posts are relevant but when I tried the various solutions offered I have not been able to fix the problem:  Responsive website on iPhone - unwanted white space on rotate from landscape to portrait  Website body background rendering a right white margin in iPhone Safari  White space on right side of header on zoom  I had a similar problem on iPad but was able to fix it with this media query:  <code>@media only screen \nand (min-device-width : 768px) \nand (max-device-width : 1024px) \n/*and (orientation : landscape)*/ {\nhtml,\nbody {\nwidth:1000px; \n}\n}\n</code>  I have tried various media queries targeting the html and body elements with no luck. I have looked through the entire CSS file for problems with background images, margins, padding, overflows, etc., but am really stumped. Does anyone out there have any suggestions?  Many thanks! ",
        "link": "https://stackoverflow.com/questions/18947793/website-is-displaying-a-white-space-on-right-side-of-screen-in-iphone",
        "score": 7,
        "tags": [
            "html",
            "iphone",
            "ios",
            "css",
            "removing-whitespace"
        ],
        "question_id": 18947793,
        "answer_count": 5,
        "view_count": 32752,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 6,
                "body": "The trouble is in your <code><h3 class=\"menu-toggle\">Menu</h3></code> (why h3, btw?), which appears to be wider than a viewport because of having <code>width: 100%</code> + some padding.  Try setting a <code>box-sizing: border-box;</code> to that element. "
            }
        ]
    },
    {
        "title": "A true sticky footer with a fixed header?",
        "question_body": "First of all, please read this whole question so you can fully understand what i am looking for, Thanks!  This is a question i have been trying to research for a great time now, and has stumped me for quit a while. Can i have a true sticky footer with a fixed header?  How can i implement a sticky footer with a fixed header? I can't add padding or a margin to the body or content, since that will break the footer. Also, i want to be able to use <code>width:100%</code> and <code>height: 100%</code> inside my content without it overflowing and creating a mess.  Here is what i am aiming for (Please excuse my great Photoshop skills) :   This look good, when i use <code>position:fixed;</code> and <code>bottom:0;</code> on my footer. But to make it truly sticky, i need to add some css to my page. (from : http://css-tricks.com/snippets/css/sticky-footer/ )  <code>* {\n  margin: 0;\n}\nhtml, body {\n  height: 100%;\n}\n.page-wrap {\n  min-height: 100%;\n  /* equal to footer height */\n  margin-bottom: -142px; \n}\n.page-wrap:after {\n  content: \"\";\n  display: block;\n}\n.site-footer, .page-wrap:after {\n  /* .push must be the same height as footer */\n  height: 142px; \n}\n.site-footer {\n  background: orange;\n}\n</code>  This allows me to have a GREAT looking sticky footer, but here is the problem. Some of the content is underneath my fixed navigation bar.  I can't add padding or a margin to the body, html, OR the content, because that will make the sticky footer mess up. Is there any way i can do this without CSS \"Hacks\"?  This is with the content under the header: http://jsfiddle.net/g2ydV/3/  Looks good right!, but some of the content is hidden under the header? Lets fix that by adding a margin to the content: http://jsfiddle.net/g2ydV/2/  The above example works, BUT the footer is messed up. How can i achieve this effect without messing up my sticky footer? ",
        "link": "https://stackoverflow.com/questions/21588959/a-true-sticky-footer-with-a-fixed-header",
        "score": 7,
        "tags": [
            "html",
            "css",
            "footer",
            "sticky-footer"
        ],
        "question_id": 21588959,
        "answer_count": 4,
        "view_count": 9444,
        "comment_count": 7,
        "comments": [
            {
                "body": "@EliteGamer Your content has a height of 300px. If you get rid of that, then your content will only be as high as your content."
            },
            {
                "body": "It works with content-90%, header/footer-10% to, but you can't set line-height in px (it may not fit) in footer. I think the \"safest\" solution is above - @ntgCleaner"
            }
        ],
        "answers": [
            {
                "score": 1,
                "body": "it's my decision for fixed header  <code>html {\n    position: relative;\n    min-height: 100%;\n}\n#main-container {\n    padding-top: 55px; /*  this is header height  */\n}\nfooter {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n}\n</code> "
            },
            {
                "score": 4,
                "body": "There's an alternative way of doing this using <code>display: table;</code> and <code>display: table-cell</code> which seems to be becoming increasingly popular.  I'm just offering it up as an alternative worth having a look at. It's quite clean and doesn't require any defined heights for the header and footer which is nice.  HTML  <code><div id=\"wrap\">\n  <div id=\"wrap-inner\">\n    <div class=\"navbar\">\n      <span>Fixed Header (content under here)</span>\n    </div>\n    <div class=\"content\">\n      <p>Content Here ... part of this is under the header, i need to see all of it without messing up the sticky footer</p>\n    </div>\n    <div class=\"footer\">\n      <span>Sticky footer!</span>\n    </div>\n  </div>\n</div>\n</code>  CSS  <code>html, body {\n  height: 100%;\n}\nbody {\n  margin: 0;\n}\n#wrap {\n  display: table;\n  width: 100%;\n  height: 100%;\n  min-height: 100%;\n}\n#wrap-inner {\n  vertical-align: middle; /* optional for positioning content in the middle */\n  display: table-cell;\n}\n.navbar, .footer {\n  position: fixed;\n  width: 100%;\n}\n.navbar {\n  top: 0;\n  width: 100%;\n}\n.footer {\n  bottom: 0;\n}\n</code>  Demo "
            },
            {
                "score": 5,
                "body": "One potential solution is to swap your <code>content:after</code> to <code>content:before</code> .  Working Demo  CSS:  <code>/* .content:after {\n     content: \"\";\n     display: block;\n} */\n.content:before {\n content: \"\";\n display: block;\n height: 45px;\n}\n</code> "
            }
        ]
    },
    {
        "title": "How can I fix the position of tooltips within a scrolling &lt;div&gt;?",
        "question_body": "I'm having some trouble with the positioning of tooltips on a column of data within a table, which itself is inside a vertical scrolling div. A little background for you...  Due to legacy issues which are beyond my control, the page I am developing has to be displayed through an iframe of fixed width and height. The data I need to display has about 12 columns, all of which are required to be displayed. One column will contain serial numbers, which sometimes end up overflowing the bounds of the cell. I've set the overflow of this column to show an ellipsis, and have added tooltips as described in the accepted answer to this question.  When the tooltips are added, it appears to take the distance from the top of the table to the hovered cell, and draw the tooltip that distance from the top of the parent div. This means that, when you scroll down through the div, the tooltips end up being drawn down below the bottom of the div.  I've created a jsFiddle which demonstrates this: http://jsfiddle.net/kuzxLwxe/4/  Here's my css:  <code>.ResultsWrapper {\n    width:150px;\n    height:314px;\n    text-align:center;\n    overflow-x:hidden;\n    overflow-y:scroll;\n    border:1px solid black;\n}\n.ResultsTable {\n    width:86px;\n    border-collapse:collapse;\n    table-layout:fixed;\n}\n.ResultsTable th, .ResultsTable td {\n    border:1px solid black;\n    overflow:hidden;\n    text-overflow:ellipsis;\n}\n.ColumnSerialNo {\n   width:81px;\n}\n.hasTooltip span {\n    display: none;\n    color: #000;\n    text-decoration: none;\n    padding: 3px;\n}\n.hasTooltip:hover span {\n    display: block;\n    position: absolute;\n    background-color: #FFF;\n    border: 1px solid #CCC;\n    margin: 2px 10px;\n}\n</code>  And my html:  <code><div class=\"ResultsWrapper\">\n    <table class=\"ResultsTable\">\n        <thead>\n            <tr>\n                <th class=\"ColumnSerialNo\">Serial Number</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td class=\"hasTooltip\">3119985815206<span>3119985815206</span></td>\n            </tr>\n            <tr>\n                <td class=\"hasTooltip\">5665811486586<span>5665811486586</span></td>\n            </tr>\n            ...\n        </tbody>\n    </table>\n</div>\n</code>  I'm using jQuery for other things within the same page, but so far haven't been able to come up with a solution with it. If you think the best way to fix this is by using JS or jQuery I'd love to see the result!  Thanks in advance ",
        "link": "https://stackoverflow.com/questions/25993378/how-can-i-fix-the-position-of-tooltips-within-a-scrolling-div",
        "score": 7,
        "tags": [
            "html",
            "css"
        ],
        "question_id": 25993378,
        "answer_count": 2,
        "view_count": 22975,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 7,
                "body": "Change your HTML markup to take more control on <code>overflow</code> :  <code><tr>\n    <td class=\"hasTooltip\">\n        <div class=\"SerialNumberContainer\">\n            <div class=\"SerialNumber\">3119985815206</div>\n            <div class=\"SerialNumberTooltip\">3119985815206</div>\n        </div>\n    </td>\n</tr>\n</code>  And in your CSS, remove <code>overflow</code> from <code>td</code> :  <code>.ResultsTable th, .ResultsTable td {\n    border:1px solid black;\n    /* overflow: hidden; this line should delete */\n    text-overflow:ellipsis;\n}\n</code>  And new CSS:  <code>.SerialNumberContainer {\n    position: relative;\n    z-index: 10;\n}\n.SerialNumber {\n    width: 80px;\n    overflow: hidden;\n}\n.SerialNumberTooltip {\n    position: absolute;\n    top: 10px;\n    left: 2px;\n    background-color: #FFF;\n    border: 1px solid #CCC;\n    display: none;\n}\n.SerialNumberContainer:hover {\n    z-index: 20;\n}\n.SerialNumberContainer:hover .SerialNumberTooltip {\n    display: block;\n}\n</code>  JSFiddle Demo . "
            }
        ]
    },
    {
        "title": "Alternative for [OVERFLOW:HIDDEN]",
        "question_body": "I am currently working in our system and I find it difficult to use overflow in my HTML.  Please take a look at my fiddle. and try to put  <code>overflow:hidden;\n</code>  in  <code>#nav-holder{\nbackground: #333333;\npadding-left: 30px;\npadding-right: 30px;\n}\n</code>  http://jsfiddle.net/mjanthrax/L7vgnzvt/  You will notice that, after including <code>overflow:hidden</code> in the css, the navigation menu(hover) doesn't display.  How can I fix that? ",
        "link": "https://stackoverflow.com/questions/28778290/alternative-for-overflowhidden",
        "score": 7,
        "tags": [
            "html",
            "css"
        ],
        "question_id": 28778290,
        "answer_count": 1,
        "view_count": 25261,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 14,
                "body": "You will need display: inline-block and set the <code>width</code> to <code>100%</code>  inline-block   The element generates a block element box that will be flowed with surrounding content as if it were a single inline box (behaving much like a replaced element would)   Change  <code>#nav-holder{\n    background: #333333;\n    padding-left: 30px;\n    padding-right: 30px;\n}\n</code>  to  <code>#nav-holder {\n    background: #333333;\n    padding-left: 30px;\n    padding-right: 30px;\n    width: 100%;\n    clear: both;\n    display: inline-block;\n}\n</code>  Jsfiddle demo  You then may want to add <code>*{box-sizing: border-box}</code> at the top pf you css  Full demo  Read more about box-sizing here  bonus "
            }
        ]
    },
    {
        "title": "Chrome adds unexpected padding to text input with custom styling",
        "question_body": "To put it simply, this fiddle works as expected on Firefox, but not on Chrome.  The input, which has the same styling as the select, should be the same height, but it doesn't on Chrome, how can I fix this?  Upon further inspection, it seems to be related to the overflow property, no idea why though    <code>@import url(https://fonts.googleapis.com/css?family=Open+Sans);\r\n.my-custom-forms {\r\n    font-family: 'Open Sans',serif;\r\n}\r\nselect.my-custom-forms, input.my-custom-forms{\r\n    border-top: none;\r\n    border-left: none;\r\n    border-right: none;\r\n    border-radius: 0;\r\n    border-bottom: 2px solid lightblue;\r\n    padding: .25rem .1rem .25rem .1rem;\r\n    overflow: auto;\r\n    width: 100%;\r\n    background-color: transparent;\r\n    transition: border .5s ease;\r\n}</code>  <code><link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css\" rel=\"stylesheet\"/>\r\n<div class=\"container m-3\">\r\n  <div class=\"row\">\r\n    <div class=\"col-3\">\r\n      <select class=\"my-custom-forms\">\r\n        <option>Option</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"col-3\">\r\n      <select class=\"my-custom-forms\">\r\n        <option>Option</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <input placeholder=\"text\" class=\"my-custom-forms\">\r\n    </div>\r\n  </div>\r\n</div></code>    I'm using Bootstrap as a barebones, but unsure if it's related to the issue. ",
        "link": "https://stackoverflow.com/questions/54911475/chrome-adds-unexpected-padding-to-text-input-with-custom-styling",
        "score": 7,
        "tags": [
            "html",
            "twitter-bootstrap",
            "css",
            "bootstrap-4"
        ],
        "question_id": 54911475,
        "answer_count": 3,
        "view_count": 820,
        "comment_count": 3,
        "comments": [
            {
                "body": "add height : 33px as well to look same in both browsers - codepen.io/nagasai/pen/JzdBzz"
            }
        ],
        "answers": [
            {
                "score": 1,
                "body": "The problem is the <code>overflow: visible !important</code> for the <code><select></code> elements defined on the user agent stylesheet. You can't overide this rule with CSS or inline style on the <code><select></code> element itself.  The following CSS rule is active all the time:  <code>select:not(:-internal-list-box) {\n    overflow: visible !important;\n}\n</code>  If you set the overflow of the <code>.my-custom-forms</code> to <code>visible</code> (same as the <code><select></code> element) all controls get the same height.   So you can use the following solution (using your current code):    <code>@import url(https://fonts.googleapis.com/css?family=Open+Sans);\r\n.my-custom-forms {\r\n  font-family: 'Open Sans',serif;\r\n}\r\nselect.my-custom-forms, input.my-custom-forms {\r\n  background-color: transparent;\r\n  border: none;\r\n  border-bottom: 2px solid lightblue;\r\n  border-radius: 0;\r\n  overflow: visible;\r\n  padding: 0.25rem 0.1rem;\r\n  transition: border 0.5s ease;\r\n  width: 100%;\r\n}</code>  <code><link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n<div class=\"container m-3\">\r\n  <div class=\"row\">\r\n    <div class=\"col-3\">\r\n      <select class=\"my-custom-forms\">\r\n        <option>Option</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"col-3\">\r\n      <select class=\"my-custom-forms\">\r\n        <option>Option</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <input placeholder=\"text\" class=\"my-custom-forms\">\r\n    </div>\r\n  </div>\r\n</div></code>     I also recommend to use the <code>.form-row</code> and <code>.form-control</code> classes on the corresponding elements. Now you can overide the CSS rule <code>select.form-control:not([size]):not([multiple])</code> so the height of the <code><select></code> elements isn't calculated and depends on the specified <code>padding</code> :    <code>@import url(https://fonts.googleapis.com/css?family=Open+Sans);\r\n.my-custom-forms {\r\n  font-family: 'Open Sans',serif;\r\n}\r\nselect.form-control.my-custom-forms:not([size]):not([multiple]) {\r\n  height: auto !important;\r\n}\r\nselect.my-custom-forms, input.my-custom-forms {\r\n  background-color: transparent;\r\n  border: none;\r\n  border-bottom: 2px solid lightblue;\r\n  border-radius: 0;\r\n  overflow: visible;\r\n  padding: 0.25rem 0.1rem;\r\n  transition: border 0.5s ease;\r\n  width: 100%;\r\n}</code>  <code><link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n<div class=\"container m-3\">\r\n  <div class=\"form-row\">\r\n    <div class=\"col-3\">\r\n      <select class=\"form-control my-custom-forms\">\r\n        <option>Option</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"col-3\">\r\n      <select class=\"form-control my-custom-forms\">\r\n        <option>Option</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <input class=\"form-control my-custom-forms\" placeholder=\"text\" type=\"text\">\r\n    </div>\r\n  </div>\r\n</div></code>   "
            }
        ]
    },
    {
        "title": "How to show a dropdown menu outside a parent element with overflow: auto in CSS?",
        "question_body": "I have tried a lot of things and searched online but I cannot figure out the solution to this problem.  I have a div container which has a max-height, min-height and also overflow: auto. When the inner content is larger than the max-height, a scrollbar appears as expected. But, inside the content there is a dropdown, which when clicked, the menu expands, and instead of being displayed outside the parent container, it is like changing the inner content height.  The only solution I found online and made sense to me, is to wrap the container to div with relative positioning and make the dropdown absolute, but there is a big drawback now, the dropdown stays fixed on scroll, as it is absolute positioned relative to the wrapper and not the content. Is there any common way to fix this or any other solution ?  I didn't post any code because I do not want the answer to rely on my code. I just want a minimal example if possible with these properties:   Container has a max-height  If content is larger than the container's max-height then the container should display a scrollbar.  The content has a dropdown which should scroll with every other element of the content.  The menu options of the dropdown element are escaping the container / are displayed outside the boundaries of the container.  ",
        "link": "https://stackoverflow.com/questions/67045692/how-to-show-a-dropdown-menu-outside-a-parent-element-with-overflow-auto-in-css",
        "score": 7,
        "tags": [
            "html",
            "css",
            "css-position",
            "sticky",
            "absolute"
        ],
        "question_id": 67045692,
        "answer_count": 1,
        "view_count": 12480,
        "comment_count": 4,
        "comments": [
            {
                "body": "It only works if none of the dropdown's ancestor elements up to the overflowing container is positioned (that is, has a computed value for <code>position</code> other than <code>static</code> )."
            },
            {
                "body": "Dropdowns are always positioned <code>absolute</code> . Please show a minimal example of the problem in form of a snippet. Long story short, using dropdown elements inside scrollable containers is going to get you into trouble, every single time."
            },
            {
                "body": "try using box-sizing: border-box. Basically what it will do is that the border and padding will get added into the elements height and width. Hope this works. But it would be easier if you could show us the code because without the code we cannot know where you are going wrong. However, I hope I solve your query."
            }
        ],
        "answers": [
            {
                "score": 2,
                "body": "To illustrate on my comments on the question, here's an MCVE:    <code>.scroll-container {\n  border: 3px dashed #eee;\n  height: 400px;\n  padding: 10px;\n  overflow: auto;\n  width: 400px;\n}\n.content {\n  background-color: #f0f0f0;\n  height: 600px;\n  position: relative;\n}\n.dropdown {\n  background-color: orange;\n  position: absolute;\n  height: 300px;\n  width: 300px;\n  left: 300px;\n}</code>  <code><div class=\"scroll-container\">\n  <div class=\"content\">\n    <div class=\"dropdown\"></div>\n  </div>\n</div></code>    As you can see, with absolute positioning based on the relative position of <code>div.content</code> the orange <code>div.dropdown</code> creates a horizontal overflow, which is what you don't want. To fix this scenario, you need to remove <code>position: relative</code> from <code>div.content</code> and use <code>transform: translateX(300px);</code> instead of <code>left: 300px;</code> :    <code>.scroll-container {\n  border: 3px dashed #eee;\n  height: 400px;\n  padding: 10px;\n  overflow: auto;\n  width: 400px;\n}\n.content {\n  background-color: #f0f0f0;\n  height: 600px;\n}\n.dropdown {\n  background-color: orange;\n  position: absolute;\n  height: 300px;\n  width: 300px;\n  transform: translateX(300px);\n}</code>  <code><div class=\"scroll-container\">\n  <div class=\"content\">\n    <div class=\"dropdown\"></div>\n  </div>\n</div></code>   "
            }
        ]
    },
    {
        "title": "Automatically Resize Overflowing Text With CSS",
        "question_body": "I currently have the following code:    <code><p style=\"font-size: 20em; max-width: 100vw;\">Hellooo!</p></code>    As you can see, the font-size is too large for the screen. I want the text to stay at its set size until it overflows the screen (My attempt is the <code>max-width</code> , but that is not working). Is there a way to fix this with CSS and HTML only?  Since I want the text size to be <code>20em</code> unless it overflows the screen, I do not want to set the <code>width</code> to any value other than <code>20em</code> .  Thanks! ",
        "link": "https://stackoverflow.com/questions/71534662/automatically-resize-overflowing-text-with-css",
        "score": 7,
        "tags": [
            "html",
            "css",
            "font-size"
        ],
        "question_id": 71534662,
        "answer_count": 5,
        "view_count": 11138,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 1,
                "body": "If you know the length of text, you can use the CSS min() function with your em sizing and the maximum size dependent on the viewport. Otherwise you are going to need a polyfill.    <code><p style=\"font-size: min(20em, 12vw); max-width: 100vw;\">Hellooo!</p></code>   "
            },
            {
                "score": 1,
                "body": "You can use the CSS calc function and change the font size based on the vw value.  <code><p style=\"font-size:calc(25vw)\">Hellooo!</p>\n</code> "
            },
            {
                "score": 4,
                "body": "<code>min</code> should do it.  With a known font, you can also use a good fallback.    <code>p {\n  font-size: min(20em, 28vw);\n  /* Next rules are only be have a clearer preview */\n  line-height: 1;\n  text-align: center;\n  padding: 0;\n  margin: 0;\n}</code>  <code><p>Hellooo!</p></code>   "
            }
        ]
    },
    {
        "title": "Move text around a fixed overflowing element in another z-index layer",
        "question_body": "Situation: I have a fixed image in my template that overflows the content. Because it's fixed, sometimes the image overflows text. Is there a method that fixes this and makes the text go around the image, as if it is <code>float</code> -ing inside the content div.  See the html-example .  CSS answer is preferred, Javscript/jQuery answers are acceptable.  Some extra details:   The content is random. It can be long, short, contain images and have html.  The <code>#cloud</code> has to stay on the same position with any content.    The issue isn't visible on the live website anymore, because it's solved by putting #cloud in a lower z-index layer.  ",
        "link": "https://stackoverflow.com/questions/11941296/move-text-around-a-fixed-overflowing-element-in-another-z-index-layer",
        "score": 6,
        "tags": [
            "html",
            "css",
            "text",
            "overflow",
            "css-position"
        ],
        "question_id": 11941296,
        "answer_count": 5,
        "view_count": 919,
        "comment_count": 8,
        "comments": [
            {
                "body": "Is the image positioned absolutely? If you can just float the image to the right, then the text would wrap automatically."
            },
            {
                "body": "Then I misunderstood your question. Since the absolute element is part of the design, it cannot move around. Putting the image inside the content with a float attribute would make it's position variable. Because sometimes the content is long, sometimes it's short."
            },
            {
                "body": "Here's what I was talking about... the image can always stay in the same position as well. jsfiddle.net/abpYb/2"
            },
            {
                "body": "Awesome idea! It would work to put a dummy-div on the spot that the absolute image is overflowing (see jsfiddle.net/cLnz6/7 ). The only problem is that if my users insert an floating image in their content, that it will be cleared as well (see jsfiddle.net/cLnz6/8 )."
            }
        ],
        "answers": [
            {
                "score": 1,
                "body": "I believe that this is what you're looking for: http://jsfiddle.net/pG3AG/  The cloud div had to be relatively positioned, not absolute since absolute positioning causes the element to position according to the viewport instead of relative to other elements (like the content element in this case). Also, the right:20px positioning of the box needed to be decreased or removed so that last letters from 'unfinished' words in the line don't end up behind the cloud box.  Hope this works out for you! "
            },
            {
                "score": 1,
                "body": "Kind of managed to solve it for the JS Fiddle example with JQuery (sorry, couldn't come up with a CSS solution)  <code>var _top = $('#cloud').offset().top;\nvar _left = $('#cloud').offset().left;\nvar _height = $('#cloud').height();\nvar _contentTop = $('#content').offset().top;\nvar _contentLeft = $('#content').offset().left;\nvar _contentWidth = $('#content').width();\nvar _floatWidth = (_contentLeft+_contentWidth)-_left\n    var _floatTop = _top-_contentTop;\n$('#content').prepend('<div id=\"virtual\" style=\"float:right\"> </div>');\n$('#virtual').css('margin-top',_floatTop).css('width',_floatWidth).css('height',_height);\n</code>  Basically, I'm adding in a hidden div floated to the position of the cloud so it sits in the content, shoving the text around, where the cloud appears in the foreground.  Looking at the content on the website you linked to, you may need to shift the div into the surrounding container and play with the numbers a little, but it more or less works here http://jsfiddle.net/cLnz6/58/ "
            },
            {
                "score": 1,
                "body": "if i understand  ( http://jsfiddle.net/VG4Ef/1/ )  <code>body{\n    background-color: #8888FF;\n}\n#container{\n    float:left;\n    width: 400px;\n    background-color:#CFCFFF;\n    height: auto;\n    margin: 10px auto;\n    padding: 10px;\n    margin-right:10px;\n}\n#content{\n    background-color: #FFDFDF;\n    width: 340px;\n    padding: 5px;\n    position:relative;\n    float:left:\n}\n#cloud{\n    width: 130px;\n    height: 100px;\n    background-color:#FFF;\n    float:right;\n    top: 120px;\n    text-align: center;\n    line-height: 100px;\n    color: #999;\n    font-size: 12px;\n    float:right;\n    display:inline-block;\n    margin-top:-100px;\n    margin-right: -100px;\n    background: yellow;\n}\n​\n</code> "
            }
        ]
    },
    {
        "title": "Bootstrap fullscreen google maps with navbar",
        "question_body": "I have a full screen google map application with a navbar on the top.  So i have a setup like this:  <code><div class=\"navbar\">\n    <nav bar stuff......>\n</div>\n<div id=\"mapcanvas\"></div>\n</code>  with the mapcanvas element having height and width to be 100%.  However, the mapcanvas seems to overflow out the page and the the entire page could scroll down the page by the amount of the navbar.  How would i go about fixing that? ",
        "link": "https://stackoverflow.com/questions/14113586/bootstrap-fullscreen-google-maps-with-navbar",
        "score": 6,
        "tags": [
            "html",
            "css",
            "google-maps",
            "twitter-bootstrap"
        ],
        "question_id": 14113586,
        "answer_count": 1,
        "view_count": 9901,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 18,
                "body": "Maybe try adding <code>navbar-fixed-top</code> to your navbar class.  <code><div class=\"navbar navbar-fixed-top\">\n    <nav bar stuff......>\n</div>\n</code>  If you don't want the navbar to be over the map set the <code>#mapcanvas</code> as this (works till IE7 - haven't tried ie6)    <code>html,body {width:100%;height:100%;margin:0;padding:0;}\r\n#mapcanvas {\r\n    background:red;display: block;\r\n    position:absolute;\r\n    height:auto;\r\n    bottom:0;\r\n    top:0;\r\n    left:0;\r\n    right:0;\r\n    margin-top:50px; /* adjust top margin to your header height */\r\n}</code>  <code><div id=\"mapcanvas\">asdf</div></code>   "
            }
        ]
    },
    {
        "title": "Is it valid to use top, left, right, and bottom css all at the same time to size an element?",
        "question_body": "I have seen it before and have done it so I know it works pretty consistently, however, I want to know if that is valid and if there are caveats that I have not thought of.  example: http://jsfiddle.net/sfctB/67/ I offered this fix for someone with a FF overflow problem recently, which was caused by a box-sizing property. Adding the simple -moz- prefix fixed it as well but I opted for something that seemed more valid to me. I set the top and bottom on a content div so that it always stretches between a fixed header and fixed footer. Then set margins to avoid the overflow.  I would intuitively think that using top and bottom or right and left at the same time would cause problems, however, what it seems to do is make right act kind of like width when there is a left already stated and make bottom act kind of like height when there is already a top stated.  But is this valid and should I use it when considering long term support?  code  <code>html, body {\n    height:100%;\n    width:100%;\n    overflow:hidden;\n}\nbody {\n    padding: 60px 0px;\n    height: 100%;\n}\n.header {\n    height:60px;\n    background:#000;\n    color:#fff;\n    width: 100%;\n    position: fixed;\n    top:0;\n}\n.body {\n    overflow-y: scroll;\n    position:fixed;\n    bottom:0;\n    top:60px;\n    margin: 0 0 60px 0;\n}\n.footer {\n    height:60px;\n    background:#000;\n    position:fixed;\n    bottom:0px;\n    width:100%;\n    color:#fff;\n}\n<!DOCTYPE html>\n<html>\n    <head></head>\n    <body>\n        <div class=\"header\">This is header</div>\n        <div class=\"body\">[content here]</div>\n        <div\n        class=\"footer\">This is footer</div>\n    </body>\n</html>\n</code> ",
        "link": "https://stackoverflow.com/questions/14569936/is-it-valid-to-use-top-left-right-and-bottom-css-all-at-the-same-time-to-size",
        "score": 6,
        "tags": [
            "html",
            "css"
        ],
        "question_id": 14569936,
        "answer_count": 2,
        "view_count": 4202,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 12,
                "body": "Good question. I've wondered about this for a long time, so I went to the spec ( http://www.w3.org/TR/CSS2/visudet.html#abs-non-replaced-width and http://www.w3.org/TR/CSS2/visudet.html#abs-non-replaced-height ). It looks like it's a fully spelled out and the answer is what you'd expect it to be. For an absolutely positioned element if width is \"auto\" and left and right are defined then:  <code>5. 'width' is 'auto', 'left' and 'right' are not 'auto', then solve for 'width'\n</code>  Similarly for height:  <code>5. 'height' is 'auto', 'top' and 'bottom' are not 'auto', then 'auto' values for 'margin-top' and 'margin-bottom' are set to 0 and solve for 'height'\n</code>  I think tPlummer makes a good point, however. The spec and reality may be two different things; especially when it comes to older browsers. "
            }
        ]
    },
    {
        "title": "Twitter Bootstrap: How to layout multiple input-prepend&#39;s side-by-side on one row",
        "question_body": "After tirelessly going through the Bootstrap docs, I just can't seem to layout the below <code>input-prepend</code> addon inputs (underlined in yellow) the way I need on this form:  You will notice the layout for the 'Actual Door Size' row is incorrect and not laying out properly. I am working with the standard <code>row-fluid</code> and <code>span*</code> conventions and it is working great for the rest. I am really just wanting to make a neat Height/Width/Depth prepended input option set which are floated all next to each other (and does not overflow), however it is important I am taking full advantage of bootstrap to ensure the fields then drop underneath each other on mobile devices, as this form will be primarily accessed via iPad.  If anybody could suggest some alterations to the below HTML to provide a neat way of laying out these three input's that would be great (ignore the fact the addons are mismatching height, I will be fixing that).  I have also included the 'sealed top bottom / finish of door' row so you can see how I am doing my two-column approach which IS working great.  <code><!-- CULPRIT START -->\n<div class=\"row-fluid\">\n    <div class=\"span12\">\n        <div class=\"span4\">\n            <div class=\"control-group\">\n                <label for=\"ActualDoorSizeHeight\" class=\"control-label\">Actual Door Size:</label>\n                <div class=\"controls\">\n                    <div class=\"input-prepend\">\n                        <span class=\"add-on\">H</span><input id=\"ActualDoorSizeHeight\" class=\"input-block-level\" type=\"text\" data-bind=\"value: vm.ActualDoorSizeHeight\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"span4\">\n            <div class=\"control-group\">\n                <label for=\"ActualDoorSizeHeight\" class=\"control-label\"></label>\n                <div class=\"controls\">\n                    <div class=\"input-prepend\">\n                        <span class=\"add-on\">W</span><input id=\"Text5\" class=\"input-block-level\" type=\"text\" data-bind=\"value: vm.ActualDoorSizeWidth\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"span4\">\n            <div class=\"control-group\">\n                <label for=\"ActualDoorSizeHeight\" class=\"control-label\"></label>\n                <div class=\"controls\">\n                    <div class=\"input-prepend\">\n                        <span class=\"add-on\">D</span><input id=\"Text11\" class=\"input-block-level\" type=\"text\" data-bind=\"value: vm.ActualDoorSizeDepth\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- // CULPRIT END -->\n<div class=\"row-fluid\">\n    <div class=\"span12\">\n        <div class=\"span6\">\n            <div class=\"control-group\">\n                <label for=\"SealedTopBottom\" class=\"control-label\">Sealed Top Bottom:</label>\n                <div class=\"controls\">\n                    <input id=\"SealedTopBottom\" type=\"text\" class=\"input-block-level\" data-bind=\"value: vm.Inspection.SealedTopBottom\" />\n                </div>\n            </div>\n        </div>\n        <div class=\"span6\">\n            <div class=\"control-group\">\n                <label for=\"FinishOfDoor\" class=\"control-label\">Finish of Door:</label>\n                <div class=\"controls\">\n                    <input id=\"FinishOfDoor\" type=\"text\" class=\"input-block-level\" data-bind=\"value: vm.Inspection.FinishOfDoor\" />\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n</code> ",
        "link": "https://stackoverflow.com/questions/17916176/twitter-bootstrap-how-to-layout-multiple-input-prepends-side-by-side-on-one-ro",
        "score": 6,
        "tags": [
            "html",
            "css",
            "twitter-bootstrap"
        ],
        "question_id": 17916176,
        "answer_count": 1,
        "view_count": 6374,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 5,
                "body": "I think what you want is a combination of input prepend with form-inline, rather than using spans. http://twitter.github.io/bootstrap/2.3.2/base-css.html#forms  I've just had a quick go on JSFiddle. Give this a try and see if it works for you: http://jsfiddle.net/6jAhe/ ﻿  <code><!-- CULPRIT START -->\n<div class=\"row-fluid\">\n    <div class=\"span12\">\n        <div class=\"control-group form-inline\">\n            <label for=\"ActualDoorSizeHeight\" class=\"control-label\">Actual Door Size:</label>\n            <div class=\"input-prepend\">\n                <span class=\"add-on\">H</span><input id=\"ActualDoorSizeHeight\" class=\"\" type=\"text\" data-bind=\"value: vm.ActualDoorSizeHeight\" />\n            </div>\n            <div class=\"input-prepend\">\n                <span class=\"add-on\">W</span><input id=\"Text5\" class=\"\" type=\"text\" data-bind=\"value: vm.ActualDoorSizeWidth\" />\n            </div>\n            <div class=\"input-prepend\">\n                <span class=\"add-on\">D</span><input id=\"Text11\" class=\"\" type=\"text\" data-bind=\"value: vm.ActualDoorSizeDepth\" />\n            </div>\n        </div>\n    </div>\n</div>\n<!-- // CULPRIT END -->\n</code> "
            }
        ]
    },
    {
        "title": "CSS animation overflows the div",
        "question_body": "I have next code ( the borders should be shown, i don't know why they dissapeared in demo ), the screen is separated in 8 equal parts and on each part should be ripple effect. All works fine in Chrome, Mozzila, Opera, Safari, but ripple overflows the element in IE. How can i fix it?    <code>$(document).ready(function () {\r\n    $(\".button_line\").on('click', \".menu_button\", function (e) {\r\n        DoRipple($(this), e);\r\n    });\r\n});\r\nvar parent, ink, d, x, y;\r\nfunction DoRipple(parent, e) {\r\n    if (parent.find(\".ink\").length == 0) {\r\n        parent.prepend(\"<span class='ink'></span>\");\r\n    }\r\n    ink = parent.find(\".ink\");\r\n    ink.removeClass(\"animate\");\r\n    if (!ink.height() && !ink.width()) {\r\n        d = Math.max(parent.outerWidth(), parent.outerHeight());\r\n        ink.css({ height: d, width: d });\r\n    }\r\n    x = e.pageX - parent.offset().left - ink.width() / 2;\r\n    y = e.pageY - parent.offset().top - ink.height() / 2;\r\n    ink.css({ top: y + 'px', left: x + 'px' }).addClass(\"animate\");\r\n    function removeAnimationClass() {\r\n        ink.removeClass(\"animate\");\r\n    }\r\n    setTimeout(\r\n    function () {\r\n        ink.removeClass(\"animate\");\r\n    }, 650);\r\n}</code>  <code>html, body{\r\nheight:100%;\r\nwidth:100%;\r\nmargin:0;\r\npadding:0;\r\n}\r\n.equal, .equal > div[class*='col-'] {\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: -ms-flexbox;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    flex: 1 0 auto;\r\n}\r\n.button_line {\r\n    height: 25%;\r\n    width: 100%;\r\n}\r\na.menu_button {\r\n    width: 50%;\r\n    height: 100%;\r\n    float: left;\r\n    background-color: white;\r\n    display: table;\r\n    border-collapse: collapse;\r\n    text-decoration: none;\r\n    color: black;\r\n    position:relative;\r\n    overflow:hidden;\r\n    cursor:pointer;\r\n}\r\n    a.menu_button > .menu_button_content {\r\n        display: table-cell;\r\n        vertical-align: middle;\r\n    }\r\n    a.menu_button > .border_overlay {\r\n        height:100%;\r\n        width:100%;\r\n        position:absolute;\r\n            border-right: 1px solid #E6F0F0;\r\n    border-bottom: 1px solid #E6F0F0;\r\n    }\r\n        a.menu_button > .menu_button_content > h2 {\r\n            text-align: center;\r\n            font-size: 1.1em;\r\n            font-family: 'Roboto', sans-serif;\r\n            font-weight: 400;\r\n        }\r\n        a.menu_button > .menu_button_content > .menu_button_color_rectangle {\r\n            padding: 0;\r\n            width: 40px;\r\n            height: 3px;\r\n            top: 0;\r\n            bottom: 0;\r\n            left: 0;\r\n            right: 0;\r\n            margin: auto;\r\n        }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#residence {\r\n                background-color: #74dbce;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#citizenship {\r\n                background-color: #509194;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#forillegals {\r\n                background-color: #ff7662;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#soonillegals {\r\n                background-color: #ffd869;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#fastsearch {\r\n                background-color: #7b8dd8;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#cooperation {\r\n                background-color: #bb5b91;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#aboutapp {\r\n                background-color: #a29994;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#settings {\r\n                background-color: #f47b50;\r\n            }\r\n.ink {\r\n    display: block;\r\n    position: absolute;\r\n    background: #006064;\r\n    border-radius: 100%;\r\n    transform: scale(0);\r\n}\r\n    /*animation effect*/\r\n    .ink.animate {\r\n        animation: ripple 0.65s linear;\r\n    }\r\n@keyframes ripple {\r\n    /*scale the element to 250% to safely cover the entire link and fade it out*/\r\n    100% {\r\n        opacity: 0;\r\n        transform: scale(2.5);\r\n    }\r\n}</code>  <code><script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"></script>\r\n<div class=\"button_line\">\r\n                <a class=\"ol-md-6 menu_button\" id=\"Residence\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"ResidenceText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, Residence %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"residence\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"CitizenshipText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, Citizenship %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"citizenship\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"FastSearchText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, FastSearch %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"fastsearch\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"CooperationText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, Cooperation %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"cooperation\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"ForIllegalsText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, ForIllegals %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"forillegals\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"SoonIllegalsText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, SoonIllegals %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"soonillegals\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"AboutAppText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, AboutApp %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"aboutapp\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"Settings\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"SettingsText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, Settings %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"settings\"></div>\r\n                    </div>\r\n                </a>\r\n            </div></code>   ",
        "link": "https://stackoverflow.com/questions/33275000/css-animation-overflows-the-div",
        "score": 6,
        "tags": [
            "javascript",
            "jquery",
            "html",
            "css"
        ],
        "question_id": 33275000,
        "answer_count": 1,
        "view_count": 451,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 5,
                "body": "it is because your have a <code>display:table</code> on your <code>a.menu_buttom.</code> replace this by <code>display:block</code> . works fine for me with ie    <code>$(document).ready(function () {\r\n    $(\".button_line\").on('click', \".menu_button\", function (e) {\r\n        DoRipple($(this), e);\r\n    });\r\n});\r\nvar parent, ink, d, x, y;\r\nfunction DoRipple(parent, e) {\r\n    if (parent.find(\".ink\").length == 0) {\r\n        parent.prepend(\"<span class='ink'></span>\");\r\n    }\r\n    ink = parent.find(\".ink\");\r\n    ink.removeClass(\"animate\");\r\n    if (!ink.height() && !ink.width()) {\r\n        d = Math.max(parent.outerWidth(), parent.outerHeight());\r\n        ink.css({ height: d, width: d });\r\n    }\r\n    x = e.pageX - parent.offset().left - ink.width() / 2;\r\n    y = e.pageY - parent.offset().top - ink.height() / 2;\r\n    ink.css({ top: y + 'px', left: x + 'px' }).addClass(\"animate\");\r\n    function removeAnimationClass() {\r\n        ink.removeClass(\"animate\");\r\n    }\r\n    setTimeout(\r\n    function () {\r\n        ink.removeClass(\"animate\");\r\n    }, 650);\r\n}</code>  <code>html, body{\r\nheight:100%;\r\nwidth:100%;\r\nmargin:0;\r\npadding:0;\r\n}\r\n.equal, .equal > div[class*='col-'] {\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: -ms-flexbox;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    flex: 1 0 auto;\r\n}\r\n.button_line {\r\n    height: 25%;\r\n    width: 100%;\r\n}\r\na.menu_button {\r\n    width: 50%;\r\n    height: 100%;\r\n    float: left;\r\n    background-color: white;\r\n    display: block;\r\n    border-collapse: collapse;\r\n    text-decoration: none;\r\n    color: black;\r\n    position:relative;\r\n    overflow:hidden;\r\n    cursor:pointer;\r\n}\r\n    a.menu_button > .menu_button_content {\r\n        vertical-align: middle;\r\n    }\r\n    a.menu_button > .border_overlay {\r\n        height:100%;\r\n        width:100%;\r\n        position:absolute;\r\n            border-right: 1px solid #E6F0F0;\r\n    border-bottom: 1px solid #E6F0F0;\r\n    }\r\n        a.menu_button > .menu_button_content > h2 {\r\n            text-align: center;\r\n            font-size: 1.1em;\r\n            font-family: 'Roboto', sans-serif;\r\n            font-weight: 400;\r\n        }\r\n        a.menu_button > .menu_button_content > .menu_button_color_rectangle {\r\n            padding: 0;\r\n            width: 40px;\r\n            height: 3px;\r\n            top: 0;\r\n            bottom: 0;\r\n            left: 0;\r\n            right: 0;\r\n            margin: auto;\r\n        }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#residence {\r\n                background-color: #74dbce;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#citizenship {\r\n                background-color: #509194;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#forillegals {\r\n                background-color: #ff7662;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#soonillegals {\r\n                background-color: #ffd869;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#fastsearch {\r\n                background-color: #7b8dd8;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#cooperation {\r\n                background-color: #bb5b91;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#aboutapp {\r\n                background-color: #a29994;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#settings {\r\n                background-color: #f47b50;\r\n            }\r\n.ink {\r\n    display: block;\r\n    position: absolute;\r\n    background: #006064;\r\n    border-radius: 100%;\r\n    transform: scale(0);\r\n}\r\n    /*animation effect*/\r\n    .ink.animate {\r\n        animation: ripple 0.65s linear;\r\n    }\r\n@keyframes ripple {\r\n    /*scale the element to 250% to safely cover the entire link and fade it out*/\r\n    100% {\r\n        opacity: 0;\r\n        transform: scale(2.5);\r\n    }\r\n}</code>  <code><script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"></script>\r\n<div class=\"button_line\">\r\n                <a class=\"ol-md-6 menu_button\" id=\"Residence\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"ResidenceText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, Residence %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"residence\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"CitizenshipText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, Citizenship %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"citizenship\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"FastSearchText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, FastSearch %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"fastsearch\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"CooperationText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, Cooperation %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"cooperation\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"ForIllegalsText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, ForIllegals %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"forillegals\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"SoonIllegalsText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, SoonIllegals %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"soonillegals\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"AboutAppText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, AboutApp %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"aboutapp\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"Settings\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"SettingsText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, Settings %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"settings\"></div>\r\n                    </div>\r\n                </a>\r\n            </div></code>   "
            }
        ]
    },
    {
        "title": "CSS animation overflows the div",
        "question_body": "I have next code ( the borders should be shown, i don't know why they dissapeared in demo ), the screen is separated in 8 equal parts and on each part should be ripple effect. All works fine in Chrome, Mozzila, Opera, Safari, but ripple overflows the element in IE. How can i fix it?    <code>$(document).ready(function () {\r\n    $(\".button_line\").on('click', \".menu_button\", function (e) {\r\n        DoRipple($(this), e);\r\n    });\r\n});\r\nvar parent, ink, d, x, y;\r\nfunction DoRipple(parent, e) {\r\n    if (parent.find(\".ink\").length == 0) {\r\n        parent.prepend(\"<span class='ink'></span>\");\r\n    }\r\n    ink = parent.find(\".ink\");\r\n    ink.removeClass(\"animate\");\r\n    if (!ink.height() && !ink.width()) {\r\n        d = Math.max(parent.outerWidth(), parent.outerHeight());\r\n        ink.css({ height: d, width: d });\r\n    }\r\n    x = e.pageX - parent.offset().left - ink.width() / 2;\r\n    y = e.pageY - parent.offset().top - ink.height() / 2;\r\n    ink.css({ top: y + 'px', left: x + 'px' }).addClass(\"animate\");\r\n    function removeAnimationClass() {\r\n        ink.removeClass(\"animate\");\r\n    }\r\n    setTimeout(\r\n    function () {\r\n        ink.removeClass(\"animate\");\r\n    }, 650);\r\n}</code>  <code>html, body{\r\nheight:100%;\r\nwidth:100%;\r\nmargin:0;\r\npadding:0;\r\n}\r\n.equal, .equal > div[class*='col-'] {\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: -ms-flexbox;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    flex: 1 0 auto;\r\n}\r\n.button_line {\r\n    height: 25%;\r\n    width: 100%;\r\n}\r\na.menu_button {\r\n    width: 50%;\r\n    height: 100%;\r\n    float: left;\r\n    background-color: white;\r\n    display: table;\r\n    border-collapse: collapse;\r\n    text-decoration: none;\r\n    color: black;\r\n    position:relative;\r\n    overflow:hidden;\r\n    cursor:pointer;\r\n}\r\n    a.menu_button > .menu_button_content {\r\n        display: table-cell;\r\n        vertical-align: middle;\r\n    }\r\n    a.menu_button > .border_overlay {\r\n        height:100%;\r\n        width:100%;\r\n        position:absolute;\r\n            border-right: 1px solid #E6F0F0;\r\n    border-bottom: 1px solid #E6F0F0;\r\n    }\r\n        a.menu_button > .menu_button_content > h2 {\r\n            text-align: center;\r\n            font-size: 1.1em;\r\n            font-family: 'Roboto', sans-serif;\r\n            font-weight: 400;\r\n        }\r\n        a.menu_button > .menu_button_content > .menu_button_color_rectangle {\r\n            padding: 0;\r\n            width: 40px;\r\n            height: 3px;\r\n            top: 0;\r\n            bottom: 0;\r\n            left: 0;\r\n            right: 0;\r\n            margin: auto;\r\n        }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#residence {\r\n                background-color: #74dbce;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#citizenship {\r\n                background-color: #509194;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#forillegals {\r\n                background-color: #ff7662;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#soonillegals {\r\n                background-color: #ffd869;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#fastsearch {\r\n                background-color: #7b8dd8;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#cooperation {\r\n                background-color: #bb5b91;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#aboutapp {\r\n                background-color: #a29994;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#settings {\r\n                background-color: #f47b50;\r\n            }\r\n.ink {\r\n    display: block;\r\n    position: absolute;\r\n    background: #006064;\r\n    border-radius: 100%;\r\n    transform: scale(0);\r\n}\r\n    /*animation effect*/\r\n    .ink.animate {\r\n        animation: ripple 0.65s linear;\r\n    }\r\n@keyframes ripple {\r\n    /*scale the element to 250% to safely cover the entire link and fade it out*/\r\n    100% {\r\n        opacity: 0;\r\n        transform: scale(2.5);\r\n    }\r\n}</code>  <code><script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"></script>\r\n<div class=\"button_line\">\r\n                <a class=\"ol-md-6 menu_button\" id=\"Residence\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"ResidenceText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, Residence %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"residence\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"CitizenshipText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, Citizenship %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"citizenship\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"FastSearchText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, FastSearch %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"fastsearch\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"CooperationText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, Cooperation %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"cooperation\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"ForIllegalsText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, ForIllegals %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"forillegals\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"SoonIllegalsText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, SoonIllegals %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"soonillegals\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"AboutAppText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, AboutApp %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"aboutapp\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"Settings\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"SettingsText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, Settings %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"settings\"></div>\r\n                    </div>\r\n                </a>\r\n            </div></code>   ",
        "link": "https://stackoverflow.com/questions/33275000/css-animation-overflows-the-div",
        "score": 6,
        "tags": [
            "javascript",
            "jquery",
            "html",
            "css"
        ],
        "question_id": 33275000,
        "answer_count": 1,
        "view_count": 451,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 5,
                "body": "it is because your have a <code>display:table</code> on your <code>a.menu_buttom.</code> replace this by <code>display:block</code> . works fine for me with ie    <code>$(document).ready(function () {\r\n    $(\".button_line\").on('click', \".menu_button\", function (e) {\r\n        DoRipple($(this), e);\r\n    });\r\n});\r\nvar parent, ink, d, x, y;\r\nfunction DoRipple(parent, e) {\r\n    if (parent.find(\".ink\").length == 0) {\r\n        parent.prepend(\"<span class='ink'></span>\");\r\n    }\r\n    ink = parent.find(\".ink\");\r\n    ink.removeClass(\"animate\");\r\n    if (!ink.height() && !ink.width()) {\r\n        d = Math.max(parent.outerWidth(), parent.outerHeight());\r\n        ink.css({ height: d, width: d });\r\n    }\r\n    x = e.pageX - parent.offset().left - ink.width() / 2;\r\n    y = e.pageY - parent.offset().top - ink.height() / 2;\r\n    ink.css({ top: y + 'px', left: x + 'px' }).addClass(\"animate\");\r\n    function removeAnimationClass() {\r\n        ink.removeClass(\"animate\");\r\n    }\r\n    setTimeout(\r\n    function () {\r\n        ink.removeClass(\"animate\");\r\n    }, 650);\r\n}</code>  <code>html, body{\r\nheight:100%;\r\nwidth:100%;\r\nmargin:0;\r\npadding:0;\r\n}\r\n.equal, .equal > div[class*='col-'] {\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: -ms-flexbox;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    flex: 1 0 auto;\r\n}\r\n.button_line {\r\n    height: 25%;\r\n    width: 100%;\r\n}\r\na.menu_button {\r\n    width: 50%;\r\n    height: 100%;\r\n    float: left;\r\n    background-color: white;\r\n    display: block;\r\n    border-collapse: collapse;\r\n    text-decoration: none;\r\n    color: black;\r\n    position:relative;\r\n    overflow:hidden;\r\n    cursor:pointer;\r\n}\r\n    a.menu_button > .menu_button_content {\r\n        vertical-align: middle;\r\n    }\r\n    a.menu_button > .border_overlay {\r\n        height:100%;\r\n        width:100%;\r\n        position:absolute;\r\n            border-right: 1px solid #E6F0F0;\r\n    border-bottom: 1px solid #E6F0F0;\r\n    }\r\n        a.menu_button > .menu_button_content > h2 {\r\n            text-align: center;\r\n            font-size: 1.1em;\r\n            font-family: 'Roboto', sans-serif;\r\n            font-weight: 400;\r\n        }\r\n        a.menu_button > .menu_button_content > .menu_button_color_rectangle {\r\n            padding: 0;\r\n            width: 40px;\r\n            height: 3px;\r\n            top: 0;\r\n            bottom: 0;\r\n            left: 0;\r\n            right: 0;\r\n            margin: auto;\r\n        }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#residence {\r\n                background-color: #74dbce;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#citizenship {\r\n                background-color: #509194;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#forillegals {\r\n                background-color: #ff7662;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#soonillegals {\r\n                background-color: #ffd869;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#fastsearch {\r\n                background-color: #7b8dd8;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#cooperation {\r\n                background-color: #bb5b91;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#aboutapp {\r\n                background-color: #a29994;\r\n            }\r\n            a.menu_button > .menu_button_content > .menu_button_color_rectangle#settings {\r\n                background-color: #f47b50;\r\n            }\r\n.ink {\r\n    display: block;\r\n    position: absolute;\r\n    background: #006064;\r\n    border-radius: 100%;\r\n    transform: scale(0);\r\n}\r\n    /*animation effect*/\r\n    .ink.animate {\r\n        animation: ripple 0.65s linear;\r\n    }\r\n@keyframes ripple {\r\n    /*scale the element to 250% to safely cover the entire link and fade it out*/\r\n    100% {\r\n        opacity: 0;\r\n        transform: scale(2.5);\r\n    }\r\n}</code>  <code><script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"></script>\r\n<div class=\"button_line\">\r\n                <a class=\"ol-md-6 menu_button\" id=\"Residence\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"ResidenceText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, Residence %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"residence\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"CitizenshipText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, Citizenship %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"citizenship\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"FastSearchText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, FastSearch %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"fastsearch\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"CooperationText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, Cooperation %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"cooperation\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"ForIllegalsText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, ForIllegals %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"forillegals\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"SoonIllegalsText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, SoonIllegals %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"soonillegals\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"#\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"AboutAppText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, AboutApp %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"aboutapp\"></div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"ol-md-6 menu_button\" id=\"Settings\">\r\n                    <div class=\"border_overlay\"></div>\r\n                    <div class=\"menu_button_content\">\r\n                        <h2 id=\"SettingsText\">\r\n                            <asp:Literal runat=\"server\" Text=\"<%$ Resources: Strings, Settings %>\" />\r\n                        </h2>\r\n                        <div class=\"menu_button_color_rectangle\" id=\"settings\"></div>\r\n                    </div>\r\n                </a>\r\n            </div></code>   "
            }
        ]
    },
    {
        "title": "Inline SVG only scaling to parent container in Google Chrome",
        "question_body": " edit: applying <code>min-height: 0;</code> to <code>.svg-container</code> fixes the container sizes but in Edge the svg elements overflow their containers.    I am trying to make an inline SVG element scale to the height of its parent container. The parent container is sized using CSS grid (I have also tried flex box).  I have been able to get this working as desired when viewing in Google Chrome by setting the elements <code>max-height</code> property to <code>100%</code> . However when viewed in other browsers the SVG seems to ignore this rule.  These are the browsers I have tried:   Google Chrome: Version 80.0.3987.87 (Official Build) (64-bit) - this one works  Microsoft Edge: 44.18362.449.0  Firefox Developer Edition: 73.0b12 (64-bit)  Firefox: 72.0.2 (64-bit)   Here is what it looks like in Google Chrome (desired result):  Here is what it looks like in FFDE (also in regular FF & Edge):  The <code>body</code> and <code>html</code> elements both have a rule of <code>height: 100vh;</code> and all other child sizes are derived from <code>%</code> or <code>fr</code> .  I would very much appreciate any guidance as to how to ensure the elements do not exceed 100% of their parent containers when the containers when using css grid or flex as so far none of the solutions I have found in other threads have worked for me.  Here is a jsfiddle and below I will include the code. Thank you for your time.    <code>    * {\r\n      margin: 0;\r\n      padding: 0;\r\n      box-sizing: border-box;\r\n    }\r\n    html,\r\n    body {\r\n      width: 100vw;\r\n      height: 100vh;\r\n      font-family: Arial, Helvetica, sans-serif;\r\n      display: flex;\r\n      justify-content: center;\r\n    }\r\n    .container {\r\n      display: grid;\r\n      grid-template-rows: 1fr 2fr 3fr;\r\n      width: 100%;\r\n      max-height: 100%;\r\n      max-width: 540px;\r\n    }\r\n    .svg-container {\r\n      border: 1px solid black;\r\n    }\r\n    svg {\r\n      width: 100%;\r\n      height: 100%;\r\n      max-height: 100%;\r\n    }</code>  <code> <!DOCTYPE html>\r\n    <html lang=\"en\">\r\n    <head>\r\n      <meta charset=\"UTF-8\">\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n      <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n      <link rel=\"stylesheet\" href=\"style.css\">\r\n      <title>Document</title>\r\n    </head>\r\n    <body>\r\n      <div class=\"container\">\r\n        <div class=\"svg-container\">\r\n          <svg viewBox='0 0 3.904897 29.412678' xmlns='http://www.w3.org/2000/svg' preserveAspectRatio='none'>\r\n            <path\r\n              d='M 0,25.550255 V 3.8624222 H 2.01753 V 25.550255 H 0 m 2.850575,3.862422 H 2.551199 C 1.142257,29.412677 0,27.979719 0,26.211588 v -0.661333 h 2.01753 v 0.981485 c 0.0024,0.884983 0.574154,1.599169 1.2756,1.593463 h 0.611767 v 1.287474 z M 2.850575,0 H 2.5512 C 1.142257,0 0,1.4329586 0,3.2010897 V 3.8624222 H 2.01753 V 2.8809378 C 2.01993,1.9959549 2.591684,1.2817684 3.29313,1.2874741 H 3.904897 V 0 Z' />\r\n          </svg>\r\n        </div>\r\n        <div class=\"svg-container\">\r\n          <svg viewBox='0 0 3.904897 29.412678' xmlns='http://www.w3.org/2000/svg' preserveAspectRatio='none'>\r\n            <path\r\n              d='M 0,25.550255 V 3.8624222 H 2.01753 V 25.550255 H 0 m 2.850575,3.862422 H 2.551199 C 1.142257,29.412677 0,27.979719 0,26.211588 v -0.661333 h 2.01753 v 0.981485 c 0.0024,0.884983 0.574154,1.599169 1.2756,1.593463 h 0.611767 v 1.287474 z M 2.850575,0 H 2.5512 C 1.142257,0 0,1.4329586 0,3.2010897 V 3.8624222 H 2.01753 V 2.8809378 C 2.01993,1.9959549 2.591684,1.2817684 3.29313,1.2874741 H 3.904897 V 0 Z' />\r\n          </svg>\r\n        </div>\r\n        <div class=\"svg-container\">\r\n          <svg viewBox='0 0 3.904897 29.412678' xmlns='http://www.w3.org/2000/svg' preserveAspectRatio='none'>\r\n            <path\r\n              d='M 0,25.550255 V 3.8624222 H 2.01753 V 25.550255 H 0 m 2.850575,3.862422 H 2.551199 C 1.142257,29.412677 0,27.979719 0,26.211588 v -0.661333 h 2.01753 v 0.981485 c 0.0024,0.884983 0.574154,1.599169 1.2756,1.593463 h 0.611767 v 1.287474 z M 2.850575,0 H 2.5512 C 1.142257,0 0,1.4329586 0,3.2010897 V 3.8624222 H 2.01753 V 2.8809378 C 2.01993,1.9959549 2.591684,1.2817684 3.29313,1.2874741 H 3.904897 V 0 Z' />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </body>\r\n    </html></code>   ",
        "link": "https://stackoverflow.com/questions/60130193/inline-svg-only-scaling-to-parent-container-in-google-chrome",
        "score": 6,
        "tags": [
            "html",
            "css",
            "svg",
            "css-grid"
        ],
        "question_id": 60130193,
        "answer_count": 3,
        "view_count": 872,
        "comment_count": 2,
        "comments": [
            {
                "body": "you need <code>min-height: 0;</code> to the SVG container. This is a duplicate of: stackoverflow.com/q/43311943/8620333"
            }
        ],
        "answers": [
            {
                "score": 3,
                "body": "Add <code>min-height:0</code> to fix the issue in most of the browser (related: Prevent content from expanding grid items ) and for Edge you will need to add <code>height:0;min-height:100%</code> to the SVG. The last fix will remove the usage of percentage value with height which is creating an issue with Edge.    <code>* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\nhtml,\r\nbody {\r\n  width: 100vw;\r\n  height: 100vh;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n.container {\r\n  display: grid;\r\n  grid-template-rows: 1fr 2fr 3fr;\r\n  width: 100%;\r\n  max-height: 100%;\r\n  max-width: 540px;\r\n}\r\n.svg-container {\r\n  border: 1px solid black;\r\n  min-height: 0;\r\n}\r\nsvg {\r\n  width: 100%;\r\n  height: 0;\r\n  min-height: 100%;\r\n}</code>  <code><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n  <link rel=\"stylesheet\" href=\"style.css\">\r\n  <title>Document</title>\r\n</head>\r\n<body>\r\n  <div class=\"container\">\r\n    <div class=\"svg-container\">\r\n      <svg viewBox='0 0 3.904897 29.412678' xmlns='http://www.w3.org/2000/svg' preserveAspectRatio='none'>\r\n            <path\r\n              d='M 0,25.550255 V 3.8624222 H 2.01753 V 25.550255 H 0 m 2.850575,3.862422 H 2.551199 C 1.142257,29.412677 0,27.979719 0,26.211588 v -0.661333 h 2.01753 v 0.981485 c 0.0024,0.884983 0.574154,1.599169 1.2756,1.593463 h 0.611767 v 1.287474 z M 2.850575,0 H 2.5512 C 1.142257,0 0,1.4329586 0,3.2010897 V 3.8624222 H 2.01753 V 2.8809378 C 2.01993,1.9959549 2.591684,1.2817684 3.29313,1.2874741 H 3.904897 V 0 Z' />\r\n          </svg>\r\n    </div>\r\n    <div class=\"svg-container\">\r\n      <svg viewBox='0 0 3.904897 29.412678' xmlns='http://www.w3.org/2000/svg' preserveAspectRatio='none'>\r\n            <path\r\n              d='M 0,25.550255 V 3.8624222 H 2.01753 V 25.550255 H 0 m 2.850575,3.862422 H 2.551199 C 1.142257,29.412677 0,27.979719 0,26.211588 v -0.661333 h 2.01753 v 0.981485 c 0.0024,0.884983 0.574154,1.599169 1.2756,1.593463 h 0.611767 v 1.287474 z M 2.850575,0 H 2.5512 C 1.142257,0 0,1.4329586 0,3.2010897 V 3.8624222 H 2.01753 V 2.8809378 C 2.01993,1.9959549 2.591684,1.2817684 3.29313,1.2874741 H 3.904897 V 0 Z' />\r\n          </svg>\r\n    </div>\r\n    <div class=\"svg-container\">\r\n      <svg viewBox='0 0 3.904897 29.412678' xmlns='http://www.w3.org/2000/svg' preserveAspectRatio='none'>\r\n            <path\r\n              d='M 0,25.550255 V 3.8624222 H 2.01753 V 25.550255 H 0 m 2.850575,3.862422 H 2.551199 C 1.142257,29.412677 0,27.979719 0,26.211588 v -0.661333 h 2.01753 v 0.981485 c 0.0024,0.884983 0.574154,1.599169 1.2756,1.593463 h 0.611767 v 1.287474 z M 2.850575,0 H 2.5512 C 1.142257,0 0,1.4329586 0,3.2010897 V 3.8624222 H 2.01753 V 2.8809378 C 2.01993,1.9959549 2.591684,1.2817684 3.29313,1.2874741 H 3.904897 V 0 Z' />\r\n          </svg>\r\n    </div>\r\n  </div>\r\n</body>\r\n</html></code>   "
            }
        ]
    },
    {
        "title": "CSS: Maintain aspect ratio in responsive img with max-width and max-height",
        "question_body": "(Similar questions are already asked at stackoverflow, but this question has more constraints, such as both a specific max-width, max-height, a required specific height and width, and no layout shift.)  Problem:  I want to have a responsive image with the following constraints:   max-width: 100%, so that it doesn't overflow to the right, and that it is responsive when reducing the screen width.  max-height: 200px, so that large images are reduced in rendered dimensions.  height and width html attributes set, so that the browser can precalculate the required image dimensions, so that the layout doesn't shift/move elements beside/below the image, while the image is loading. (To reduce the cumulative layout shift .)  image aspect ratio should stay 1:1  no extra margins should be created around the image  the image should be rendered with a plain html img tag, not with css background-images  the image should not be rendered in a larger dimension than its original dimension   How can I achieve this with CSS?  (If CSS cannot achieve this, then maybe in JavaScript?)  What I tried  I tried several CSS features, such as object-fit and max-width: 100% etc, but I always get at least one of the contraints failing while trying to fix another constraint. For example, object-fit creates margins/paddings for the image when it's reduced in size when the screen size reduces, as if the image border isn't reduced. This is demonstrated in the following code:  https://codepen.io/Devabc/pen/mdVvyKq    <code>/* Should appear to the right of the Wombat */\n.beside {\n  float: left;\n  background-color: lightgreen;\n  border: 1px solid;\n  height: 200px;\n  width: 100px;\n}\n/* Should appear below the Wombat */\n.below {\n  background-color: red;\n  border: 1px solid;\n  width: 100px;\n  height: 300px;\n  clear: both;\n}\nimg {\n  display: block;\n  float: left;\n  max-width: 100%;\n  max-height: 200px;\n  border: 1px solid;\n  /* Without this, aspect ratio is not normal. \nBut with this, it creates an unwanted margin. */\n  object-fit: scale-down;\n  object-position: left;\n}</code>  <code><img \nheight=\"533\" \nwidth=\"799\" \nsrc=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Vombatus_ursinus_-Maria_Island_National_Park.jpg/800px-Vombatus_ursinus_-Maria_Island_National_Park.jpg\" \n/>\n<div class=\"beside\">This text should be directly to the right of the Wombat, without any margin between the Wombat and this text.</div>\n<div class=\"below\">This text should be directly below the Wombat, without any margin between this and the Wombat. \nThe dimensions of the original Wombat img are:\nwidth: 799px, height: 533px</div></code>    (The green text should be to the right of the Wombat, without margin. But object-fit causes a padding/margin to appear with the length of the original image.)  It's feels almost as if this isn't possible with CSS, even though these requirements shouldn't be too much to ask nowadays, with responsive design being important.  How can I fix this with HTML/CSS? ",
        "link": "https://stackoverflow.com/questions/63021964/css-maintain-aspect-ratio-in-responsive-img-with-max-width-and-max-height",
        "score": 6,
        "tags": [
            "html",
            "css",
            "layout",
            "responsive-design"
        ],
        "question_id": 63021964,
        "answer_count": 3,
        "view_count": 7261,
        "comment_count": 1,
        "comments": [],
        "answers": [
            {
                "score": 4,
                "body": "I've been struggling with this for years on end, but just today I figured a way to do it when you know the image's aspect ratio, hope it helps:  Start by defining a <code>--img-ratio</code>  CSS custom property in the <code>img</code> element corresponding to the image's <code>height / width</code> ratio.  <code><!-- example of a square image (height / width = 1) -->\n<img src=\"...\" style=\"--img-ratio: 1\" />\n</code>  Knowing that our desired max-height is 200px (or you could go with a generic <code>--max-height</code> ), we know 2 variables of the equation:  <code>ratio = height / width\nwidth = height * ratio\n</code>  Applying this:  <code>img {\n  --max-height: 200px;\n  /* Set a baseline width for your element */\n  width: 100%;\n  /* And limit it with our function above (pick 100% with min() if this size is bigger than parent's width to prevent overflowing) */\n  max-width: min(100%, calc(var(--max-height, 200px) * var(--img-ratio, 1)));\n}\n</code>  And there we go! This should work to limit the height without extra margins even in complicated flex layouts.  Let me know if this answer is unclear, hope it helps 🌻  PS: If you can't know the ratio of the image beforehand, than maybe JS is indeed your only option - I'm yet to find an alternative 😟 "
            }
        ]
    },
    {
        "title": "Calculating a matrix to invert a &quot;flattened&quot; 3D rendering context",
        "question_body": "Context:  In my web app I create several groups of elements all positioned relative to each other in 3d space. All elements have <code>transform-style: preserve-3d</code> . A parent element is used to rotate, scale, and move all these elements together in response to user navigation.  Some of these elements are \"portals,\" rectangular windows through which several other elements might be visible. It is important to note that the elements within these \"portals\" must exist within the same global 3d space (not just 2d) as elements outside their parent portal.  These \"portals\" have <code>overflow: hidden</code> in order to hide overflowing elements within them.   As per the w3 spec , <code>overflow</code> is one of several css property values that group objects together and creates a 2d “flattened” rendering context; effectively the same result as “transform-style: flat;”  Question:  I must find some way to inverse (cancel-out) the transformation matrix created by <code>transform-style: flat;</code> and create an identical 3D rendering context to one preserved using <code>transform-style: preserve-3d;</code>  All 3D css transforms are represented by a 3d matrix internally. In the case of <code>transform-style: flat</code> the user-agent is doing some mysterious \"flattening\" math on its own transformation matrix. Then this matrix gets applied to its children, creating the illusion that its children are all flattened in their parent's pane. It should be possible to bypass this effect with a little matrix math.  Unfortunately, the w3 spec makes no specification of what this \"flattening\" means mathematically; they are rather vague on the subject, simply calling it a \"flattened representation of their (the element's) content\" that \"has no depth.\"  I can't figure out what matrix math needs to be done to reproduce the \"flattening\" effect. If the algorithm could be reverse engineered, this \"flattening\" behavior could be easily negated with an inverted matrix. A secondary element inside each portal element could be used to apply this inverted matrix as a transform, thereby negating the \"flattened\" transform and correctly restoring 3d position/rotation/perspective.  Shown below is a demo demonstrating that is is absolutely possible to create the impression of depth within a flattened parent. In this case, I naively apply the inverse of the top-most parent's transform. Unfortunately, inverting a \"flattened\" matrix is not so simple:   Demo and Links:   JSFiddle demo unchanged for testing  JSFiddle demo with the naive algorithm demonstration  W3 spec  MDN on <code>transform-style</code>   Notes:   Solutions involving bypassing the problem using masks, clip-paths, other likely won't work since they are also grouping property values  In addition to the above, clip-paths have rendering issues on chrome and firefox  Algorithm should work for different parent positions, rotations, scales and perspective. I'm not looking for a magic transform value that will fix my example and my example only.  I've experimented solving this issue using several independent 3d contexts layered on top of each other. Clip paths were used to cut out portals. However, this resulted in issues when portals need to be obscured by other portals or elements within other layers.  I am open to other alternative suggestions given the context of my project.  A similar question has been asked before, however in a much different context where the OP is looking for a css-only solution: CSS: \"overflow: hidden\" alternative that doesn't break 3D transforms   Edit 1: Why not use three js?  My entire application/website will be built on a model of navigation that exists in 3d space, so why not just use webgl?   Webgl cannot be parsed by search engines or screen readers  Webgl cannot be statically generated and hydrated client-side  My application will include interactable html. This can't be done in webgl:   Technically, there are ways to do hybrid html/webgl websites but it requires css transforms and (for my use case) dynamically calculated clipping, which does not work on chrome and firefox . The only only other way to do clipping is to use <code>overflow: hidden</code> , which lead me to asking this question.   Building this in webgl would require a ton of extra work designing and building navigation and lifecycle systems that I can otherwise leverage from existing html frameworks... I'm a one person team.  Finally, portals in webgl are not a simple issue to solve, and my requirement of being able to fly \"through\" portals makes that goal even more lofty... I need to get this working the simplest way possible if my goal is just to create a mvp and get it out to my patiently waiting testers.   As far as my testing/research goes webgl isn't a feasible alternative for what I'm building, (at least for a one person team) however, figuring out a bit of math should be doable.  Edit 2: A partial solution  Thanks to @Markus' answer, I've found that the flattening effect can be achieved by dropping all the values in the column associated with transformations in the z-axis. This can be done by multiplying it's transform by the following matrix:  Take the identity matrix, and change the 3rd item in the 3rd column to a arbitrary small number.  <code>const flatten = identity()\nflatten[10] = 1/10000 // arbitrarily small. not zero, since that will invalidate the matrix.\n</code>  Here's a demo of this: https://jsfiddle.net/aywbe9p7/2/   This seems to suggest that internally, the browser is converting the 3d 4x4 matrix into a 2d 3x3 matrix by dropping the values in it's third column.  So, It would be reasonable to think that inverting this effect would be as simple as re-populating the third column:  <code>// normalize portal transform\nconst normalizedPortalTransform = normalize(portalTransform)\n// try to re-establish perspective in z axis\nconst final = identity()\nfinal[8] = normalizedPortalTransform[8]\nfinal[9] = normalizedPortalTransform[9]\nfinal[10] = normalizedPortalTransform[10]\nfinal[11] = normalizedPortalTransform[11]\n</code>  It appears to kind of work, but the perspective is still off:  Here's a demo of this: https://jsfiddle.net/aywbe9p7/3/   I've tried many different combinations of re-populating the matrix, like also including the third row (indexes 2, 6, 10 and 14) and even decomposing the <code>portalTransform</code> 's perspective components using the code below, and trying to re-incorporate these values into the <code>final</code> de-flattening matrix. But that doesn't work either.  <code>// Returns the transpose of a 4x4 matrix\nfunction transpose(matrix){\n  return Array.from({ length: 16 }, (_, i) => {\n    const y = i % 4\n    const x = Math.floor(i / 4)\n    return matrix[y * 4 + x]\n  })\n}\n// Decompose the perspective component of a 4x4 matrix.\n// https://www.w3.org/TR/css-transforms-2/#decomposing-a-3d-matrix\nfunction decompPerspective(matrix){\n  // There exists some perspective\n  if(matrix[15] != 0 && (matrix[3] != 0 || matrix[7] != 0 || matrix[11] != 0)){\n    // Normalize the matrix.\n    const m = normalize(matrix)\n    // Used to solve for perspective\n    const perspectiveMatrix = Array.from(m)\n    perspectiveMatrix[3] = 0\n    perspectiveMatrix[7] = 0\n    perspectiveMatrix[11] = 0\n    perspectiveMatrix[15] = 1\n    // The right hand side of the equation.\n    const r0 = m[3]\n    const r1 = m[7]\n    const r2 = m[11]\n    const r3 = m[15] // should be 1\n    // Solve the equation by inverting perspectiveMatrix and multiplying\n    // rightHandSide by the inverse.\n    const f = transpose(inverse(perspectiveMatrix))\n    return [\n      f[0] * r0 + f[4] * r1 + f[8] * r2 + f[12] * r3,\n      f[1] * r0 + f[5] * r1 + f[9] * r2 + f[13] * r3,\n      f[2] * r0 + f[6] * r1 + f[10] * r2 + f[14] * r3,\n      f[3] * r0 + f[7] * r1 + f[11] * r2 + f[15] * r3, // should be 1\n    ]\n  }\n  // No perspective\n  else{\n    return [0, 0, 0, 1]\n  }\n}\n</code>  Edit 2: Why the math needs to be perfect and not approximative  This might be a little difficult for me to explain without making an animation, but imagine you are looking down on a scene containing a portal. Inside this portal is another scene.  I would like to animate between looking at the top-level scene, and looking into the scene embedded within the portal.  In order to do this, the visual perspective is first animated to \"fly\" towards the portal element.  Next, when the viewport is filled completely by the portal, the scene containing the portal is deleted. It is replaced with the embedded scene, except that now the portal is gone, so the scene is not inside a portal anymore.  For this transition to work, the perspective of items in a portal must match the perspective of those same items outside a portal perfectly... otherwise this transition will not be smooth.  Let me know if that doesn't make sense. I might be able to make an illustration to demonstrate this better. ",
        "link": "https://stackoverflow.com/questions/72008951/calculating-a-matrix-to-invert-a-flattened-3d-rendering-context",
        "score": 6,
        "tags": [
            "javascript",
            "html",
            "css",
            "matrix",
            "3d"
        ],
        "question_id": 72008951,
        "answer_count": 1,
        "view_count": 380,
        "comment_count": 5,
        "comments": [],
        "answers": [
            {
                "score": 3,
                "body": "If you don't want to use some WebGL-lib like <code>three.js</code> but pure css-transform, the straight forward way to get the desired effect is to dynamically change the perspective-origin of your portal.  Please be aware that Firefox still has some issues with 3D-css. E.g. I recommend not to use any margins or paddings on your objects.  The normal flattening is done by the camera matrix that can be found in the documentation of the perspective parameter (see MDN ). It is a function of the perspective value. If the user's view is not orthogonal to the projection screen (which in your case is the portal plane) you can change the <code>perspective-origin</code> accordingly.  Like in your examples I have used <code>Rematrix</code> to adjust the perspective-origin of the portal window.  <code><!DOCTYPE HTML>\n<head>\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\n<script src=\"https://unpkg.com/rematrix\"></script>\n<style>\n.rect {\n  width:400px;\n  height:200px;\n  border: 2px solid red;\n}\n.scene {\n  perspective-origin: center;\n}\n.main {\n  position: relative;\n  transform-style: preserve-3d;\n  display:inline-block;\n  vertical-align:top;\n}\n.inner {\n  position: absolute;\n}\n.portal{\n  overflow:hidden;\n}\n</style>\n<body>\n</head>\n<div id=\"scene\" width=400px>\n <div id=\"scene1\" class=\"scene rect\">\n  <div id=\"obj1\" class=\"main rect\">\n    <div class=\"inner rect\" style=\"transform:translateZ(-60px)\"></div>\n    <div class=\"inner rect\" style=\"transform:translateZ(-120px)\"></div>\n    <div class=\"inner rect\" style=\"transform:translateZ(-180px);background-color:#eee\">preserve-3d</div>\n  </div>\n </div>\n <div id=\"scene2\" class=\"scene rect\"> \n  <div id=\"obj2\" class=\"main portal rect\">\n   <div class=\"inner rect\" style=\"transform:translateZ(-60px)\"></div>\n   <div class=\"inner rect\" style=\"transform:translateZ(-120px)\"></div>\n   <div class=\"inner rect\" style=\"transform:translateZ(-180px);background-color:#eee\">overflow hidden</div>\n  </div>\n </div>\n</div>\n<script>\nlet r = Rematrix;\nlet obj1 = $(\"#obj1\");\nlet obj2 = $(\"#obj2\");\nlet scene = $(\"#scene\");\nlet scene1 = $(\"#scene1\");\nlet scene2 = $(\"#scene2\");\n// locate objects behind center of scene\nlet tx = (scene1.width() - obj1.width()) / 2;\nlet ty = (scene1.height() - obj1.height()) / 2;\nlet tz = -1000;\n// set perspective\nlet p = 2000;\nscene1.css(\"perspective\", \"\" + p + \"px\");\nscene2.css(\"perspective\", \"\" + p + \"px\");\n// initial camera position\nlet camPos = [0, 0, p, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n// start rendering\nmove(0.6, 0.6);\nscene.mousemove(function(event){ move(event.clientX / scene.width(), event.clientY / scene.height()); });\nfunction move(x, y) {\n  // move objects\n  let dx = 120 * (x - 0.5);\n  let dy = -120 * (y - 0.5);\n  let t = r.toString([r.translate3d(tx, ty, tz), r.rotateX(dy), r.rotateY(dx)].reduce(r.multiply));\n  obj1.css(\"transform\", t);\n  obj2.css(\"transform\", t);\n  // adjust camera perspective of portal object\n  let c = [r.rotateY(-dx), r.rotateX(-dy), r.translateZ(-tz), camPos].reduce(r.multiply);\n  let px = c[0] + obj2.width() / 2;\n  let py = c[1] + obj2.height() / 2;\n  let pz = c[2];\n  obj2.css(\"perspective\", \"\" + pz + \"px\");\n  obj2.css(\"perspectiveOrigin\", \"\" + px + \"px \" + py + \"px\");\n}\n</script>\n</body>\n</code>  Here is a diagram to sketch the idea behind the calculation of the adjusted perspective-origin: "
            }
        ]
    },
    {
        "title": "NextJS Viewport is not full width on mobile devices",
        "question_body": "I'm working on a NextJS Website project, it's the first time I face this problem, I usually give the body a 100% or 100vw width and it's all fixed, but now I see that once it's on a mobile device I check the viewport size and I find it 0.85 when I turn it back to desktop it becomes 1.0.  I tried to fix it with a <code>position: fixed;</code> for the body but the content just overflows the screen size. Then I tried some Meta Viewports added to \"_document.tsx\" but the mobile screen still zooms in on the initial page load.  I know the problem is not in CSS styles but it's the viewport setting, but why it usually works on most websites but it's just scaling down on this one?  These are the current Head Meta tags:  <code>export default function Document() {\n// const [loading, setLoading] = React.useState(false);\n// Router.onRouteChangeStart = (url) => {\n//     setLoading(true);\n// };\n// Router.onRouteChangeComplete = (url) => {\n//     setLoading(false);\n// };\n// Router.onRouteChangeError = (err, url) => {\n//     setLoading(false);\n// };\nreturn (\n    <Html lang=\"en\">\n        <Head>\n            <meta charSet=\"utf-8\" />\n            <meta name=\"viewport\" content=\"width=device-width\"/>\n            <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/img/icon/favicon.ico\"/>\n            <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/img/icon/apple-touch-icon.png\"/>\n            <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/img/icon/favicon-32x32.png\"/>\n            <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/img/icon/favicon-16x16.png\"/>\n            {/* <link rel=\"manifest\" href=\"/img/icon/site.webmanifest\"/> */}\n        </Head>\n        <body>\n            {/* <Loading loading={loading} /> */}\n            <Main />\n            <NextScript />\n        </body>\n    </Html>\n   )\n}\n</code> ",
        "link": "https://stackoverflow.com/questions/74062563/nextjs-viewport-is-not-full-width-on-mobile-devices",
        "score": 6,
        "tags": [
            "javascript",
            "html",
            "css",
            "typescript",
            "next.js"
        ],
        "question_id": 74062563,
        "answer_count": 3,
        "view_count": 7192,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 1,
                "body": "You could try adding the initial-scale to content: <code>content=\"width=device-width, initial-scale=1\"</code> . Initial-scale is the initial zoom when visiting the page. 1.0 does not zoom. "
            }
        ]
    },
    {
        "title": "How to prevent a &lt;div&gt; floating on top of other divs in Firefox?",
        "question_body": "In the project that I'm doing, I have multiple divisions one below another and I load them one after other depending on the navbar choice. Now that works fine if I don't have any fancy elements in the <code><div></code> . But when I added a form to a div it started floating on the div above it. This happens when I select any element in form. Also, I can't seem to be able to select any item that's there in the <code>dropDown</code> list that's there in the <code><form></code> .  Here is sample code of the list of divisions  <code> <div class=\"container\">\n            <div class=\"st-container\">\n                    <input type=\"radio\" name=\"radio-set\" checked=\"checked\" id=\"st-control-1\"/>\n                    <a href=\"#st-panel-1\">Serendipity</a>\n                    <input type=\"radio\" name=\"radio-set\" id=\"st-control-2\"/>\n                    <a href=\"#st-panel-2\">Happiness</a>\n                    <input type=\"radio\" name=\"radio-set\" id=\"st-control-3\"/>\n                    <a href=\"#st-panel-3\">Tranquillity</a>\n                    <input type=\"radio\" name=\"radio-set\" id=\"st-control-4\"/>\n                    <a href=\"#st-panel-4\">Positivity</a>\n                    <input type=\"radio\" name=\"radio-set\" id=\"st-control-5\"/>\n                    <a href=\"#st-panel-5\">Passion</a>\n                    <div class=\"st-scroll\">\n                            <div class=\"st-panel\" id=\"st-panel-1\">\n                                <h2>Serendipity</h2>\n                                <p>Banksy adipisicing eiusmod banh mi sed. Squid stumptown est odd future nisi, commodo mlkshk pop-up adipisicing retro.</p>\n                            </div >\n                   <!--problematic div starts-->         \n               <div id=\"RepresentativeRegistrationPage\" class=\"st-panel st-color\">\n        <form action=\"#\" method=\"post\" id=\"registration-form\" novalidate=\"novalidate\">\n            College:\n            <select class=\"required\" id=\"college_id\" name=\"college_id\">\n            <option selected=\"selected\" value=\"\">Select College</option>\n            <option value=\"4\">St. Xaviers College</option>\n            <option value=\"5\">DMC College</option>\n            </select><span class=\"error_msg\"></span><br>\n            First Name: <input type=\"text\" value=\"\" class=\"required\" name=\"first_name\" id=\"first_name\"><span class=\"error_msg\"></span><br>\n            Last Name: <input type=\"text\" value=\"\" class=\"required\" name=\"last_name\" id=\"last_name\"><span class=\"error_msg\"></span><br>\n            Username: <input type=\"text\" class=\"required\" name=\"username\" id=\"username\"><span class=\"error_msg\"></span><br>\n            Password: <input type=\"password\" class=\"required\" name=\"password\" id=\"password\"><span class=\"error_msg\"></span><br>\n            Confirm Password: <input type=\"password\" class=\"required\" name=\"confirm_password\" id=\"confirm_password\"><span class=\"error_msg\"></span><br>\n            Mobile Number: <input type=\"text\" value=\"\" class=\"required\" name=\"mobile_number\" id=\"mobile_number\"><span class=\"error_msg\"></span><br>\n            Email address: <input type=\"text\" value=\"\" class=\"required\" name=\"email\" id=\"email\"><span class=\"error_msg\"></span><br>\n            <input type=\"submit\" value=\"Register\" name=\"submit\">\n        </form>\n        </div>\n                            <!--problematic div ends -->  \n             <div class=\"st-panel\" id=\"st-panel-3\">\n                      <h2>Tranquillity</h2>\n                      <p>Sint aute occaecat id vice. Post-ironic fap pork belly next level godard, id fanny pack williamsburg forage truffaut.</p>\n             </div>\n             <div class=\"st-panel st-color\" id=\"st-panel-4\">\n                       <h2>Positivity</h2>\n                       <p>Mixtape fap leggings art party, butcher authentic farm-to-table you probably haven't heard of them do labore cosby sweater.</p>\n             </div>\n             <div class=\"st-panel\" id=\"st-panel-5\">\n                        <h2>Passion</h2>\n                        <p>Fixie ad odd future polaroid dreamcatcher, nesciunt carles bicycle rights accusamus mcsweeney's mumblecore nulla irony.</p>\n             </div>\n      </div><!-- // st-scroll -->\n    </div><!-- // st-container -->\n</code>  And here is the CSS  <code>.st-container {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    font-family: 'Josefin Slab', 'Myriad Pro', Arial, sans-serif;\n}\n.st-container > input,\n.st-container > a {\n    position: fixed;\n    bottom: 0px;\n    width: 20%;\n    cursor: pointer;\n    font-size: 16px;\n    height: 34px;\n    line-height: 34px;\n}\n.st-container > input {\n    opacity: 0;\n    z-index: 1000;\n}\n.st-container > a {\n    z-index: 10;\n    font-weight: 700;\n    background: #e23a6e;\n    color: #fff;\n    text-align: center;\n    text-shadow: 1px 1px 1px rgba(151,24,64,0.2);\n}\n/* \"Fix\" for percentage rounding: add a background bar pseudo element with the same color like the labels */\n.st-container:before {\n    content: '';\n    position: fixed;\n    width: 100%;\n    height: 34px;\n    background: #e23a6e;\n    z-index: 9;\n    bottom: 0;\n}\n#st-control-1, #st-control-1 + a {\n    left: 0;\n}\n#st-control-2, #st-control-2 + a {\n    left: 20%;\n}\n#st-control-3, #st-control-3 + a {\n    left: 40%;\n}\n#st-control-4, #st-control-4 + a {\n    left: 60%;\n}\n#st-control-5, #st-control-5 + a {\n    left: 80%;\n}\n.st-container > input:checked + a,\n.st-container > input:checked:hover + a{\n    background: #821134;\n}\n.st-container > input:checked + a:after,\n.st-container > input:checked:hover + a:after{\n    bottom: 100%;\n    border: solid transparent;\n    content: '';\n    height: 0;\n    width: 0;\n    position: absolute;\n    pointer-events: none;\n    border-bottom-color: #821134;\n    border-width: 20px;\n    left: 50%;\n    margin-left: -20px;\n}\n.st-container > input:hover + a{\n    background: #AD244F;\n}\n.st-container > input:hover + a:after {\n    border-bottom-color: #AD244F;\n}\n.st-scroll,\n.st-panel {\n    position: relative;\n    width: 100%;\n    height: 100%;\n}\n.st-scroll {\n    top: 0;\n    left: 0;\n    -webkit-transition: all 0.6s ease-in-out;\n    -moz-transition: all 0.6s ease-in-out;\n    -o-transition: all 0.6s ease-in-out;\n    -ms-transition: all 0.6s ease-in-out;\n    transition: all 0.6s ease-in-out;\n    /* Let's enforce some hardware acceleration */\n    -webkit-transform: translate3d(0, 0, 0);\n    -webkit-backface-visibility: hidden;\n}\n.st-panel{\n    background: #fff;\n    overflow: hidden;\n}\n#st-control-1:checked ~ .st-scroll {\n    -webkit-transform: translateY(0%);\n    -moz-transform: translateY(0%);\n    -o-transform: translateY(0%);\n    -ms-transform: translateY(0%);\n    transform: translateY(0%);\n}\n#st-control-2:checked ~ .st-scroll {\n    -webkit-transform: translateY(-100%);\n    -moz-transform: translateY(-100%);\n    -o-transform: translateY(-100%);\n    -ms-transform: translateY(-100%);\n    transform: translateY(-100%);\n}\n#st-control-3:checked ~ .st-scroll {\n    -webkit-transform: translateY(-200%);\n    -moz-transform: translateY(-200%);\n    -o-transform: translateY(-200%);\n    -ms-transform: translateY(-200%);\n    transform: translateY(-200%);\n}\n#st-control-4:checked ~ .st-scroll {\n    -webkit-transform: translateY(-300%);\n    -moz-transform: translateY(-300%);\n    -o-transform: translateY(-300%);\n    -ms-transform: translateY(-300%);\n    transform: translateY(-300%);\n}\n#st-control-5:checked ~ .st-scroll {\n    -webkit-transform: translateY(-400%);\n    -moz-transform: translateY(-400%);\n    -o-transform: translateY(-400%);\n    -ms-transform: translateY(-400%);\n    transform: translateY(-400%);\n}\n/* Content elements */\n.st-deco{\n    width: 200px;\n    height: 200px;\n    position: absolute;\n    top: 0px;\n    left: 50%;\n    margin-left: -100px;\n    background: #fa96b5;\n    -webkit-transform: translateY(-50%) rotate(45deg);\n    -moz-transform: translateY(-50%) rotate(45deg);\n    -o-transform: translateY(-50%) rotate(45deg);\n    -ms-transform: translateY(-50%) rotate(45deg);\n    transform: translateY(-50%) rotate(45deg);\n}\n[data-icon]:after {\n    content: attr(data-icon);\n    font-family: 'RaphaelIcons';\n    color: #fff;\n    text-shadow: 1px 1px 1px rgba(151,24,64,0.2);\n    position: absolute;\n    width: 200px;\n    height: 200px;\n    line-height: 200px;\n    text-align: center;\n    font-size: 90px;\n    top: 50%;\n    left: 50%;\n    margin: -100px 0 0 -100px;\n    -webkit-transform: rotate(-45deg) translateY(25%);\n    -moz-transform: rotate(-45deg) translateY(25%);\n    -o-transform: rotate(-45deg) translateY(25%);\n    -ms-transform: rotate(-45deg) translateY(25%);\n    transform: rotate(-45deg) translateY(25%);\n}\n.st-panel h2 {\n    color: #e23a6e;\n    text-shadow: 1px 1px 1px rgba(151,24,64,0.2);\n    position: absolute;\n    font-size: 54px;\n    font-weight: 900;\n    width: 80%;\n    left: 10%;\n    text-align: center;\n    line-height: 50px;\n    margin: -70px 0 0 0;\n    padding: 0;\n    top: 50%;\n    -webkit-backface-visibility: hidden;\n}\n#st-control-1:checked ~ .st-scroll #st-panel-1 h2,\n#st-control-2:checked ~ .st-scroll #st-panel-2 h2,\n#st-control-3:checked ~ .st-scroll #st-panel-3 h2,\n#st-control-4:checked ~ .st-scroll #st-panel-4 h2,\n#st-control-5:checked ~ .st-scroll #st-panel-5 h2{\n    -webkit-animation: moveDown 0.6s ease-in-out 0.2s backwards;\n    -moz-animation: moveDown 0.6s ease-in-out 0.2s backwards;\n    -o-animation: moveDown 0.6s ease-in-out 0.2s backwards;\n    -ms-animation: moveDown 0.6s ease-in-out 0.2s backwards;\n    animation: moveDown 0.6s ease-in-out 0.2s backwards;\n}\n@-webkit-keyframes moveDown{\n    0% {\n        -webkit-transform: translateY(-40px);\n        opacity: 0;\n    }\n    100% {\n        -webkit-transform: translateY(0px);  \n        opacity: 1;\n    }\n}\n@-moz-keyframes moveDown{\n    0% {\n        -moz-transform: translateY(-40px);\n        opacity: 0;\n    }\n    100% {\n        -moz-transform: translateY(0px);  \n        opacity: 1;\n    }\n}\n@-o-keyframes moveDown{\n    0% {\n        -o-transform: translateY(-40px);\n        opacity: 0;\n    }\n    100% {\n        -o-transform: translateY(0px);  \n        opacity: 1;\n    }\n}\n@-ms-keyframes moveDown{\n    0% {\n        -ms-transform: translateY(-40px);\n        opacity: 0;\n    }\n    100% {\n        -ms-transform: translateY(0px);  \n        opacity: 1;\n    }\n}\n@keyframes moveDown{\n    0% {\n        transform: translateY(-40px);\n        opacity: 0;\n    }\n    100% {\n        transform: translateY(0px);  \n        opacity: 1;\n    }\n}\n.st-panel p {\n    position: absolute;\n    text-align: center;\n    font-size: 16px;\n    line-height: 22px;\n    color: #8b8b8b;\n    z-index: 2;\n    padding: 0;\n    width: 50%;\n    left: 25%;\n    top: 50%;\n    margin: 10px 0 0 0;\n    -webkit-backface-visibility: hidden;\n}\n#st-control-1:checked ~ .st-scroll #st-panel-1 p,\n#st-control-2:checked ~ .st-scroll #st-panel-2 p,\n#st-control-3:checked ~ .st-scroll #st-panel-3 p,\n#st-control-4:checked ~ .st-scroll #st-panel-4 p,\n#st-control-5:checked ~ .st-scroll #st-panel-5 p{\n    -webkit-animation: moveUp 0.6s ease-in-out 0.2s backwards;\n    -moz-animation: moveUp 0.6s ease-in-out 0.2s backwards;\n    -o-animation: moveUp 0.6s ease-in-out 0.2s backwards;\n    -ms-animation: moveUp 0.6s ease-in-out 0.2s backwards;\n    animation: moveUp 0.6s ease-in-out 0.2s backwards;\n}\n@-webkit-keyframes moveUp{\n    0% {\n        -webkit-transform: translateY(40px);\n        opacity: 0;\n    }\n    100% {\n        -webkit-transform: translateY(0px);  \n        opacity: 1;\n    }\n}\n@-moz-keyframes moveUp{\n    0% {\n        -moz-transform: translateY(40px);\n        opacity: 0;\n    }\n    100% {\n        -moz-transform: translateY(0px);  \n        opacity: 1;\n    }\n}\n@-o-keyframes moveUp{\n    0% {\n        -o-transform: translateY(40px);\n        opacity: 0;\n    }\n    100% {\n        -o-transform: translateY(0px);  \n        opacity: 1;\n    }\n}\n@-ms-keyframes moveUp{\n    0% {\n        -ms-transform: translateY(40px);\n        opacity: 0;\n    }\n    100% {\n        -ms-transform: translateY(0px);  \n        opacity: 1;\n    }\n}\n@keyframes moveUp{\n    0% {\n        transform: translateY(40px);\n        opacity: 0;\n    }\n    100% {\n        transform: translateY(0px);  \n        opacity: 1;\n    }\n}\n/* Colored sections */\n.st-color,\n.st-deco{\n    background: #fa96b5;\n}\n.st-color [data-icon]:after {\n    color: #fa96b5;\n}\n.st-color .st-deco {\n    background: #fff;\n}\n.st-color h2 {\n    color: #fff;\n    text-shadow: 1px 1px 1px rgba(0,0,0,0.1);\n}\n.st-color p {\n    color: #fff;\n    color: rgba(255,255,255,0.8);\n}\n@media screen and (max-width: 520px) {\n    .st-panel h2 {\n        font-size: 42px;\n    }\n    .st-panel p {\n        width: 90%;\n        left: 5%;\n        margin-top: 0;\n    }\n    .st-container > a {\n        font-size: 13px;\n    }\n}\n@media screen and (max-width: 360px) {\n    .st-container > a {\n        font-size: 10px;\n    }\n    .st-deco{\n        width: 120px;\n        height: 120px;\n        margin-left: -60px;\n    }\n}\nbody{\n    font-family: Georgia, serif;\n    background: #ddd;\n    font-weight: 400;\n    font-size: 15px;\n    color: #333;\n    overflow: hidden;\n    -webkit-font-smoothing: antialiased;\n}\na{\n    color: #555;\n    text-decoration: none;\n}\n.clr{\n    clear: both;\n    padding: 0;\n    height: 0;\n    margin: 0;\n</code>  This problem only happens in Firefox ( I'm using Firefox 16.0). Here is a JSFiddle of the problem. Click on the \"Happiness\" option in navbar to get to the problematic section. Can someone please help me sort out the issue? ",
        "link": "https://stackoverflow.com/questions/12995425/how-to-prevent-a-div-floating-on-top-of-other-divs-in-firefox",
        "score": 5,
        "tags": [
            "html",
            "firefox",
            "css"
        ],
        "question_id": 12995425,
        "answer_count": 4,
        "view_count": 3855,
        "comment_count": 6,
        "comments": [],
        "answers": [
            {
                "score": 1,
                "body": "Are you trying to put that form on center? Check this out:  Add this to your css (jsFiddle here: http://jsfiddle.net/DGFat/8/ )  <code>form {\n    height:200px;\n    position: absolute;\n    left: 50%;\n    width:300px;\n    top: 50%;\n    margin: -100px 0 0 -150px;\n    background: gray; /*just so you could see it better */\n} \n</code> "
            },
            {
                "score": 1,
                "body": "I think the problem is your use of input for \"everything\".  Adding: <code>[type=\"checkbox\"]</code> to your CSS at this declaration:  <code>.st-container > input, .st-container > a { ... }</code> becoming <code>.st-container > input[type=\"checkbox\"], .st-container > a { ... }</code>  Stops the tabbing issue in FF, but it breaks the positioning a little, and throws off the navigation. Sounds worse than it is.  All browsers have built-in properties for <code>input</code> elements. I think your CSS implementation just doesn't do a good enough job at isolating your functionality from presentation. "
            }
        ]
    },
    {
        "title": "Fixed positions messes up the width",
        "question_body": "I have a HTML5 audio player in a div. I have set its width to 100%. I wanted to fix the player at the top when scrolled so I fixed it's position. The problem is when I do that, the player width overflows the container.  Below is my code.  HTML  <code><div id=\"container\">\n    <audio src=\"#\" controls></audio>\n</div>\n</code>  CSS  <code>#container {\n    width : 350px;\n    height: 300px;\n    background: #BADA55;\n}\naudio {\n    width: 100%;\n    /*position: fixed;*/\n}\n</code>  I created a fiddle to demonstrate the issue. Its currently in the state which I want it to look like. Un-comment the <code>position: fixed;</code> to see the problem.  Can anyone please tell me what I should do to make it stay fixed with the correct width?  Thanks ",
        "link": "https://stackoverflow.com/questions/19583383/fixed-positions-messes-up-the-width",
        "score": 5,
        "tags": [
            "css",
            "html",
            "css-position"
        ],
        "question_id": 19583383,
        "answer_count": 4,
        "view_count": 4485,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 5,
                "body": "You can try with  <code>width:inherit;\n</code>  http://jsfiddle.net/vfQ5K/2/ "
            }
        ]
    },
    {
        "title": "Can I expand a div so the overflow-y:auto scrollbar doesn&#39;t clip the div content?",
        "question_body": " Similar question, without a great answer:  How can I include the width of \"overflow: auto;\" scrollbars in a dynamically sized absolute div?   I have a <code><div></code> of fixed height that acts as a menu of buttons of uniform width. Users can add/remove buttons from the menu. When there are more buttons than can fit vertically in the <code><div></code> , I want it to become scrollable - so I'm using <code>overflow-y:auto</code> , which indeed adds a scrollbar when the content is too large in <code>y</code> . Unfortunately, when the scrollbar shows up it overlaps the menu buttons, and adds a horizontal scroll bar as a result - the big problem is it just looks horrible.  Is there a \"right\" way to fix this? I'd love to learn some style trick to make it work right (i.e. the scrollbar sits outside the div rather than inside, or the div automatically expands to accommodate the scroll bar when necessary). If javascript is necessary, that's fine - I'm already using <code>jQuery</code> - in that case, what are the right events are to detect the scrollbar being added/removed, and how do I make sure to use the correct width in a cross-browser/cross-style way?  JSFiddle: http://jsfiddle.net/vAsdJ/  <code>HTML:\n<button type=\"button\" id=\"add\">Add a button!</button>\n<div id=\"menu\">\n</div>\nCSS:\n#menu{\n    background:grey;\n    height:150px;\n    overflow-y:auto;\n    float:left;\n}\nScript:\n$('#add').button().click(function(){\n    var d = $('<div/>');\n    var b = $('<button type=\"button\">Test</button>');\n    d.appendTo($('#menu'));\n    b.button().appendTo(d);\n});\n</code> ",
        "link": "https://stackoverflow.com/questions/21539979/can-i-expand-a-div-so-the-overflow-yauto-scrollbar-doesnt-clip-the-div-content",
        "score": 5,
        "tags": [
            "javascript",
            "jquery",
            "html",
            "css"
        ],
        "question_id": 21539979,
        "answer_count": 2,
        "view_count": 8097,
        "comment_count": 2,
        "comments": [
            {
                "body": "I would trash the idea of having a scroll bar at all. And if you WANT a scrollbar, Make your own in javascript. The reason I say this is because all browser/OS combinations of scroll bars are different sizes. You would have to write a separate script for each combination to make the scrollbar height the right size. If you make your own scroll bar, it's always the same. Alternatively, you can make hover areas on the edges (or click arrows) of your navigation which will control the left and right animation of the large nav."
            }
        ],
        "answers": [
            {
                "score": 1,
                "body": "First: To remove the horizontal scrollbar set <code>overflow-x: hidden;</code> as Trent Stewart has already mentioned in another answer.  CSS Approach:  One thing I have done in the past is to add a wider wrapping div around the content div to make room for the scrollbar. This, however, only works if your container width is fixed... and may need to be adjusted (by serving different styles) in various browsers due to variable rendering of scrollbars.  Here a jsfiddle for your case. Note the new wrapper <code><div id=\"menu-wrap\"></code> and its fixed width <code>width: 95px;</code> . In this case the wrapper div is doing the scrolling.  You could probably also solve this by giving the wrapper some padding on the right, and thereby avoid the fixed width problem.   jQuery Approach:  Another option is to detect the overflow using jquery as described here , and then increasing the width or padding of the div to make space. You may still have to make browser-specific adjustments though.  Here a jsfiddle with a simplified version for your example. This uses your click function to check the div height after every click, and then adds some padding to make room for the scrollbar; a basic comparison between innerHeight and scrollHeight :  <code>if($('#menu').innerHeight() < $('#menu')[0].scrollHeight){\n    $('#menu').css( \"padding\", \"0 15px 0 0\" );\n}\n</code>  To make this more cross-browser friendly you could check for the scrollbar width (as outlined here ) and then add the returned value instead of the fixed padding. Here another jsfiddle to demonstrate.   There are probably many other methods, but this is how I would go about it. "
            }
        ]
    },
    {
        "title": "HTML Object tag remove scrollbar overflow",
        "question_body": "I am trying to apply the <code>overflow</code> property to an <code><object/></code> element. Is this possible?  An example of the issue is here: JSFiddle . In Chrome, it seems the overflow is ignored. How can I fix this?  HTML  <code><body>\n    <object id=\"my-object\" data=\"http://www.rfc-editor.org/rfc/rfc1.txt\"></object>\n</body>\n</code>  CSS  <code>#my-object {\n    height : 500px;\n    width : 300px;\n    overflow : hidden;\n}\n</code> ",
        "link": "https://stackoverflow.com/questions/23787371/html-object-tag-remove-scrollbar-overflow",
        "score": 5,
        "tags": [
            "html",
            "css",
            "overflow"
        ],
        "question_id": 23787371,
        "answer_count": 3,
        "view_count": 13684,
        "comment_count": 4,
        "comments": [
            {
                "body": "@ZachSaucier I am using iframe now. Setting it a fixed height and scroll no. I cant do anything much more."
            }
        ],
        "answers": [
            {
                "score": 1,
                "body": "Data objects like <code><object></code> do not have an overflow property. You can check this yourself by going into your browser's inspector, going to the <code>obj#my-object</code> properties and looking for <code>overflow</code> (it's not there)  As a result, hide the scrollbar by putting it in a container and making the parent a little smaller than the child by about 20px. You can then use use another element who has the same width and height of the text element and overlay it to prevent the scroll. All in all, it looks like this  <code><body scroll=\"no\">\n    <div class='container'>\n        <object id=\"my-object\" data=\"http://www.rfc-editor.org/rfc/rfc1.txt\">\n        </object>\n        <div class='preventScroll'></div>\n    </div>\n</body>\n.container { \n    width:300px; height:500px; \n    overflow:hidden; \n    position:relative; \n}\n.preventScroll { \n    width:100%; height:100%; \n    position:absolute; top:0; left:0; \n}\n#my-object {\n    height: 100%;\n    width: 320px;\n    position:relative;\n}\n</code>  With that being said, I would recommend using the more modern <code><iframe></code> instead "
            }
        ]
    },
    {
        "title": "CSS - How to stack divs by columns of 2",
        "question_body": "I have a variable number of divs, which should be displayed on two lines, as follows  <code>[1]  [3]  [5]  [7]\n[2]  [4]  [6]  ...\n</code>  I looked at the <code>column-count</code> property, however it's not exactly what I need, as it fixes the number of columns, whereas in my case it should be dynamic. (what I need would be a similar line-count property, which doesn't seeem to exist).  Is there a pure CSS solution, or should I make container divs for every groups of 2 vertical divs?  Thanks,  Edit : Here is a simplified code of my case. Actually, As I set the <code>height</code> property on my container div, shouldn't the article divs be stacked by at most 2 ? Now they're overflowing the container.  <code><html>\n<head>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"test.css\">\n</head>\n<body>\n<div class=\"container\">\n<div class=\"article\">A</div>\n<div class=\"article\">B</div>\n<div class=\"article\">C</div>\n<div class=\"article\">D</div>\n<div class=\"article\">E</div>\n</div>\n</body>\n</html>\n</code>  and the CSS  <code>.article {\nwidth:50px;\nheight:50px;\nborder:1px gray dashed;\nmargin:1px;\n}\n.container {\nheight:110px;\nmax-height:110px;\n}\n</code>  However with this code all the article divs are in one column. ",
        "link": "https://stackoverflow.com/questions/31070431/css-how-to-stack-divs-by-columns-of-2",
        "score": 5,
        "tags": [
            "html",
            "css"
        ],
        "question_id": 31070431,
        "answer_count": 5,
        "view_count": 3570,
        "comment_count": 2,
        "comments": [
            {
                "body": "the height of your div is fixed?"
            }
        ],
        "answers": [
            {
                "score": 1,
                "body": "When I have to do something like this i use float property with a code like this to be applied to each div you want to display:  <code>.divclass{\n    float: left;\n    margin: 10px;\n    width: 300px;\n}\n</code>  don't forget to clear float after the list of divs:  <code><br stytle=\"clear: both;\">\n</code>  With this structure I get to put as many divs as they can fit on the screen width and to put the others on a new line. Obviously the number of divs on each row will be dependent on the screen width or container div width. Can help you a bit more if you provide more code of yours. "
            },
            {
                "score": 1,
                "body": "For <code>Column-count</code> With a simple list mark up  <code><ul>\n    <li>A</li>\n    <li>B</li>\n    <li>C</li>\n    <li>D</li>\n<ul>\n</code>  Use this CSS:  <code>ul {\n    -moz-column-count: 2;\n    -moz-column-gap: 20px;\n    -webkit-column-count: 2;\n    -webkit-column-gap: 20px;\n    column-count: 2;\n    column-gap: 20px;\n}\n</code>  Another option is CSS3 as below: CSS3 solution would look like this:  HTML  <code><div id=\"wrap\">\n    <div class=\"list_item\">A</div>\n    <div class=\"list_item\">B</div>\n    <div class=\"list_item\">C</div>\n    <div class=\"list_item\">D</div>\n    <div class=\"list_item\">E</div>\n    <div class=\"list_item\">F</div>\n    <div class=\"list_item\">G</div>\n    <div class=\"list_item\">H</div>\n</div>\n</code>  CSS:  <code>.list_item {\n    float: left;\n    margin: 5px;\n    padding: 5px;\n    width: 200px;\n    border: 1px solid gray;\n}\n#wrap {\n    width:460px;\n    column-count:2;\n    column-gap:20px;\n    -moz-column-count:2;\n    -moz-column-gap:20px;\n    -webkit-column-count:2;\n    -webkit-column-gap:20px;\n}\n</code>  you can see more details at here "
            },
            {
                "score": 2,
                "body": "You can do this using flexbox and <code>flex-direction: column;</code> Doing so will allow you to have new columns once the bottom of parent element is reached.  Here is an example:    <code>*\r\n{\r\n  box-sizing: border-box\r\n}\r\n.flex-parent\r\n{\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n  /* this indicates, when a new \"column\" will be started */\r\n  height: 200px;\r\n  align-content: flex-start;\r\n}\r\n.flex-parent .col\r\n{\r\n  flex: 0 0 auto;\r\n  width: 100px;\r\n  height: 50px;\r\n  background-color: silver;\r\n  margin: 4px;\r\n}</code>  <code><div class=\"flex-parent\">\r\n  <div class=\"col\">1</div>\r\n  <div class=\"col\">2</div>\r\n  <div class=\"col\">3</div>\r\n  <div class=\"col\">4</div>\r\n  <div class=\"col\">5</div>\r\n  <div class=\"col\">6</div>\r\n  <div class=\"col\">7</div>\r\n  <div class=\"col\">8</div>\r\n  <div class=\"col\">10</div>\r\n  <div class=\"col\">11</div>\r\n  <div class=\"col\">12</div>\r\n</div></code>   "
            },
            {
                "score": 4,
                "body": "You can use the <code>columns</code> css property on a container:    <code>#columns-holder {\r\n  -moz-columns: 100px;\r\n  -webkit-columns: 100px;\r\n  columns: 100px;\r\n  -moz-column-gap: 15px;\r\n  -webkit-column-gap: 15px;\r\n  column-gap: 15px;\r\n}\r\n.box {\r\n  width: 100px;\r\n  height: 100px;\r\n  margin-bottom: 15px;\r\n  background: grey;\r\n  -webkit-column-break-inside: avoid;\r\n  page-break-inside: avoid;\r\n  break-inside: avoid;\r\n}</code>  <code><div id=\"columns-holder\">\r\n  <div class=\"box\">1</div>\r\n  <div class=\"box\">2</div>\r\n  <div class=\"box\">3</div>\r\n  <div class=\"box\">4</div>\r\n  <div class=\"box\">5</div>\r\n  <div class=\"box\">6</div>\r\n  <div class=\"box\">7</div>\r\n  <div class=\"box\">8</div>\r\n  <div class=\"box\">9</div>\r\n  <div class=\"box\">10</div>\r\n</div></code>   "
            }
        ]
    },
    {
        "title": "Position fixed within container element instead of the browser / viewport",
        "question_body": "I need to position a header to be fixed within the containing parent so that it follows when scrolling. The problem is that  <code>position:fixed\n</code>  fixes the position to the browser, not the parent. What this is resulting in is that when I have a container that has a horizontal scroll for overflow in the width (the content is wider than the container), my fixed header does not have the overflow-scroll as the content of the table does.  See this fiddle demo  So the goal here is to fix the position of the header, but fixed relative to it's parent container. In this fiddle, you can see that I've commented out a block of css:  <code>.container{\n     /*-webkit-transform: translateZ(0);\n     -moz-transform: translateZ(0);\n     -ms-transform: translateZ(0);\n     transform: translateZ(0);*/\n     -webkit-transform: none;\n     -moz-transform: none;\n     -ms-transform: none;\n     transform: none;   \n}\n</code>  If you replace the current css block (with transform set to none) with the one with translateZ, the header will get positioned within it's parent container, but is no longer fixed.  Anyone know how to solve this? Preferred solution would be CSS/HTML only and avoid JS but if nothing else, then JS is of course what I need to go with! ",
        "link": "https://stackoverflow.com/questions/31536068/position-fixed-within-container-element-instead-of-the-browser-viewport",
        "score": 5,
        "tags": [
            "javascript",
            "html",
            "css"
        ],
        "question_id": 31536068,
        "answer_count": 3,
        "view_count": 6352,
        "comment_count": 1,
        "comments": [
            {
                "body": "to fix something relative to ists parent, you'd need <code>position:relative</code> on the parent and <code>position:absolute</code> on the child"
            }
        ],
        "answers": [
            {
                "score": 2,
                "body": "CSS can't do this by itself.  <code>Position: fixed</code> works in relation to the viewport, not it's containing element.  I've seen an attempt to solve this problem using the CSS3 <code>transform</code> property, but (as you noted in your comment to my first answer) it doesn't seem to work.  I understand you can't use any client-side library but that's the only solution available to my knowledge. For you and others who may one day need this, here's a solution that works. It employs a bit of jQuery:  Positioning an element inside another element with the positioned element fixed along the x and y axes (i.e. position fixed horizontally and vertically).  http://jsfiddle.net/8086p69z/8/  HTML  <code><div class=\"moving-article\">\n    <div class=\"container\">\n    <header class=\"fixed-header\">FIXED HEADER</header>\n        <ul>\n        <li>SCROLL</li>\n        <li>SCROLL</li>\n        <li>SCROLL</li>\n        </ul>    \n    </div>\n</div>\n</code>  CSS (relevant section)  <code>.moving-article {\n    height: 150px;\n    width: 75%;\n    overflow-x: scroll;     \n}\n.fixed-header {\n    background: rgba(0,0,0,0.5);\n    width: 50%;\n    text-align: center;\n    line-height: 40px;\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n.container{\n    width: 1000px;\n}\n</code>  jQuery  <code>var leftOffset = parseInt($(\".fixed-header\").css('left'));\n$(window).scroll(function(){\n    $('.fixed-header').css({\n        'left': $(this).scrollLeft() + leftOffset\n    });\n});\n</code> "
            }
        ]
    },
    {
        "title": "How do I work around a Safari bug that allows a filter to escape bounds even with overflow hidden?",
        "question_body": "I'm trying to use a CSS filter to blur an image. In all browsers, the blur filter results in the blur going outside the bounds of the image for whatever value you set the blur to (expected). But I want the edges to be defined (and the image to have a box shadow), so I wrap the image with another div with <code>overflow</code> set to <code>hidden</code> . This works in all browsers.  However, due to some app-specific constraints, I need to update the size of the wrapper with JavaScript on load and resize. This works in all browsers except Safari. Changing the size of the wrapper element randomly triggers a painting bug where the filter begins to escape the bounds of the wrapper. It doesn't always, but it seems to increase in likelihood on MobileSafari and/or based on the size of the DOM.  Here's a fiddle with a small demo. Using Safari, resize the window repeatedly and you'll trigger the bug. Sometimes it will repaint and fix itself, sometimes it will not. (Use Chrome or Firefox and it will work fine.)  ( Screenshot of the blur escaping the wrapper .)  It should be noted that unlike this fiddle, in the application I am only setting the new width and height when they change, and Safari still fluctuates between the blur escaping and not escaping even when the width and height are NOT being set during the resize event.  Things I've tried (that haven't worked):   Delaying the calculation and setting of the wrapper width until the resize event is complete using <code>clearTimeout</code> / <code>setTimeout</code>  Unsetting and resetting <code>overflow: hidden</code> on both the wrapper and the image with JavaScript after changing the size  Calling <code>window.getComputedStyle(wrapper)</code> (and on the image, and on the parent element)  All sorts of shenanigans to promote the wrapper to a composite element (e.g. <code>translateZ(0)</code> transforms), which does stop some of the blur overflow, but not enough. ( Screenshot .) Setting a timer to disable the transform simply returns the page to full blur escape.  Setting <code>white-space: nowrap</code> on the wrapper  Setting the width and height via <code>document.styleSheets[x].cssRules[x].style.setProperty()</code> rather than <code>object.style.width</code> / <code>height</code>  Rounding the pixel values to multiples of 2 / 5 / 10 (yes, I'm desperate)   I'm pretty stuck at the moment, and would greatly appreciate any help you can provide. Thank you! ",
        "link": "https://stackoverflow.com/questions/35756148/how-do-i-work-around-a-safari-bug-that-allows-a-filter-to-escape-bounds-even-wit",
        "score": 5,
        "tags": [
            "javascript",
            "html",
            "css",
            "safari",
            "webkit"
        ],
        "question_id": 35756148,
        "answer_count": 4,
        "view_count": 2573,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 1,
                "body": "A fluid container that keeps its width/height ratio is possible without JavaScript. You can see it here in this Fiddle .  What I've basically done is add a container called <code>#padding_ratio</code> , which has a padding-bottom of 62.5% (100 / 1.6, like your JavaScript did). A padding-bottom can't have a percentage value that is actually relative to the height of it's parent element, because of the fact that webpages were originally not supposed to be 'designed' vertically (hence the reason it is so hard to vertically align elements). So when you do use a percentage, it will be relative to the width of its container.  Anyway... So this container is now a solid box of padding, so if you put an img inside of it, it's gonna be outside it. So I've added <code>position: absolute</code> , as well as <code>top: 0</code> and <code>left: 0</code> .  Hope this helps "
            },
            {
                "score": 2,
                "body": "Interestingly if I let the edges of the image outside the parent's bound by just 1px, the bug stopped occuring: https://jsfiddle.net/1edf4k9t/7/  <code>#image {\n  margin: -1px 0 0 -1px;\n  -webkit-filter: blur(50px);\n  filter: blur(50px);\n  width: calc(100% + 2px);\n}\n</code>  Would that be acceptable to you? "
            },
            {
                "score": 3,
                "body": "you can give a fluid <code>width</code> to your wrapper in CSS which will have the same effect as your JS code right now, and that might fix your bug, you can also change your <code>width</code> of <code>img</code> to <code>max-width</code>    <code>#image_wrapper {\r\n  overflow: hidden;\r\n  margin: 30px auto;\r\n  box-shadow: rgba(0, 0, 0, 0.5) 0 5px 14px;\r\n  width:95% /* whatever fits you better here */\r\n}\r\n#image {\r\n  -webkit-filter: blur(50px);\r\n  filter: blur(50px);\r\n  max-width: 100%;\r\n}</code>  <code>  <div id=\"image_wrapper\">\r\n    <img id=\"image\" src=\"https://scratch.brockbatsell.com/black-wallpaper-13.jpg\">\r\n  </div></code>   "
            },
            {
                "score": 4,
                "body": "The bug seems to be averted if you add a <code>-webkit-mask-image</code> to the image:  <code>#image {\n  -webkit-filter: blur(50px);\n  filter: blur(50px);\n  width: 100%;\n  -webkit-mask-image: linear-gradient(to right, #fff, #fff);\n}\n</code>  https://jsfiddle.net/pqjh2471/  <code>-webkit-mask-image</code> is not particularly well supported, but it is supported in Safari from 4.0 on. "
            }
        ]
    },
    {
        "title": "Elements overlapping other in react",
        "question_body": "In my react project, my footer is overlapping my elements near the bottom of the page.  see live project here: https://surpay-app.herokuapp.com/#/?_k=wo17rb  I have looked at many other questions about this topic as this is a common issue, but I think mine has to do with different react components acting strangely with one another.  I've tried to play with the margins, of the body, as well as the content. I've played with overflow as well as different display styles for the footer. None of this fix the issue. I'd like the footer to stick to the bottom (so i have a position: fixed) but I dont want it overlapping my content. Adding bottom margin to body doesnt help either.  It seems like this shouldn't be an issue anyway, given that the footer is a component that is rendered after the rest of the content. Here is the JSX:  <code>render() {\n        return (\n          <div>\n            <Navigation />\n            {this.props.children}\n            <Footer />\n          </div>\n        );\n}\n</code> ",
        "link": "https://stackoverflow.com/questions/43727023/elements-overlapping-other-in-react",
        "score": 5,
        "tags": [
            "html",
            "css",
            "reactjs"
        ],
        "question_id": 43727023,
        "answer_count": 4,
        "view_count": 30311,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 1,
                "body": "You need to add a margin to the bottom of body to account for the space taken up by the fixed footer:  <code>body {\n  margin-bottom: 80px; // footer height plus 10px\n}\n</code> "
            }
        ]
    },
    {
        "title": "Allow one column to scroll till end of content, and then remain fixed",
        "question_body": "I have two columns in my html content. The first column is a sidebar and is expected to be limited in content, while the second column is the actual content which can be several pages length.  What I'm trying to achieve is this: As I scroll the page, I want the first column to scroll till the point that the end of the first column content is visible, at which point the it should not scroll further as I scroll down. The second column should scroll all the way through, as the first column fixes at the point above. Note: When they do scroll, I need both columns to scroll together and not independently.  I tried using position:fixed with overflow-y: auto, but that doesn't seem to work. Please refer the jsFiddle here: http://jsfiddle.net/a1qn17gw/1/  <code>.fixed-content {\n  position: fixed;\n  overflow-y: auto;\n}\n</code>  To illustrate, I'm trying to achieve the below as I scroll down the page:  ",
        "link": "https://stackoverflow.com/questions/45626470/allow-one-column-to-scroll-till-end-of-content-and-then-remain-fixed",
        "score": 5,
        "tags": [
            "html",
            "css"
        ],
        "question_id": 45626470,
        "answer_count": 4,
        "view_count": 3249,
        "comment_count": 1,
        "comments": [],
        "answers": [
            {
                "score": 1,
                "body": "I read your requirements and came up with the below code, I changed the positioning and added some jquery for watching the window scroll event.    <code>$(window).bind('scroll', function () {\r\n\t\tvar windowScrollHeight = $(window).scrollTop()\r\n\t\tvar scrollPlusWindowHeight = $(window).scrollTop() + $(window).height();\r\n    var fixedContentHeight = $(\".fixed-content\").height();\r\n    if(scrollPlusWindowHeight > fixedContentHeight){\r\n     \t$(\".fixed-content\").addClass(\"fixed\");\r\n     }else{\r\n     \t$(\".fixed-content\").removeClass(\"fixed\");\r\n     }\r\n});</code>  <code>.fixed-content {\r\n  position: absolute;\r\n  width: 250px;\r\n  color: red;\r\n}\r\n.fixed {\r\n    position:fixed;\r\n    bottom:0;\r\n}\r\nbody{\r\n  margin:0px;\r\n  height:100%;\r\n  width:100%;\r\n}\r\n.scrollable-content {\r\n  position: absolute;\r\n  margin-left: 300px;\r\n  color: blue;\r\n}</code>  <code><script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"></script>\r\n<div class=\"clearfix\">\r\n<div class=\"fixed-content\">\r\nAfghanistan<br>\r\nAlbania<br>\r\nAlgeria<br>\r\nAndorra<br>\r\nAngola<br>\r\nAntigua & Deps<br>\r\nArgentina<br>\r\nArmenia<br>\r\nAustralia<br>\r\nAustria<br>\r\nAzerbaijan<br>\r\nBahamas<br>\r\nBahrain<br>\r\nBangladesh<br>\r\nAfghanistan<br>\r\nAlbania<br>\r\nAlgeria<br>br>\r\nArmenia<br>\r\nAustralia<br>\r\nAustria<br>\r\nAzerbaijan<br>\r\nBahamas<br>\r\nBahrain<br>\r\nBangladesh<br>\r\nAfghanistan<br>\r\nAlbania<br>\r\nAlgeria<br>\r\nAndorra<br>\r\nAngola<br>\r\nAntigua & Deps<br>\r\nArgentina<br>\r\nArmenia<br>\r\nAustralia<br>\r\nAustria<br>\r\nAzerbaijan<br>\r\nBahamas<br>\r\nBahrain<br>\r\nBangladesh<br>\r\nBarbados<br>\r\nBelarus<br>\r\nBelgium<br>\r\nBelize<br>\r\nBenin<br>\r\nBhutan<br>\r\nBolivia<br>\r\nBosnia Herzegovina<br>\r\nBotswana<br>\r\nBrazil<br>\r\nBrunei<br>\r\n</div>\r\n<div class=\"scrollable-content\">\r\nAfghanistan<br>\r\nAlbania<br>\r\nAlgeria<br>\r\nAndorra<br>\r\nAngola<br>\r\nAntigua & Deps<br>\r\nArgentina<br>\r\nArmenia<br>\r\nAustralia<br>\r\nAustria<br>\r\nAzerbaijan<br>\r\nBahamas<br>\r\nBahrain<br>\r\nBangladesh<br>\r\nBarbados<br>\r\nBelarus<br>\r\nBelgium<br>\r\nBelize<br>\r\nBenin<br>\r\nBhutan<br>\r\nBolivia<br>\r\nBosnia Herzegovina<br>\r\nBotswana<br>\r\nBrazil<br>\r\nBrunei<br>\r\nBulgaria<br>\r\nBurkina<br>\r\nBurundi<br>\r\nCambodia<br>\r\nCameroon<br>\r\nCanada<br>\r\nCape Verde<br>\r\nCentral African Rep<br>\r\nChad<br>\r\nChile<br>\r\nChina<br>\r\nColombia<br>\r\nComoros<br>\r\nCongo<br>\r\nCongo {Democratic Rep}<br>\r\nCosta Rica<br>\r\nCroatia<br>\r\nCuba<br>\r\nCyprus<br>\r\nCzech Republic<br>\r\nDenmark<br>\r\nDjibouti<br>\r\nDominica<br>\r\nDominican Republic<br>\r\nEast Timor<br>\r\nEcuador<br>\r\nEgypt<br>\r\nEl Salvador<br>\r\nEquatorial Guinea<br>\r\nEritrea<br>\r\nEstonia<br>\r\nEthiopia<br>\r\nFiji<br>\r\nFinland<br>\r\nFrance<br>\r\nGabon<br>\r\nGambia<br>\r\nGeorgia<br>\r\nGermany<br>\r\nGhana<br>\r\nGreece<br>\r\nGrenada<br>\r\nGuatemala<br>\r\nGuinea<br>\r\nGuinea-Bissau<br>\r\nGuyana<br>\r\nHaiti<br>\r\nHonduras<br>\r\nHungary<br>\r\nIceland<br>\r\nIndia<br>\r\nIndonesia<br>\r\nIran<br>\r\nIraq<br>\r\nIreland {Republic}<br>\r\nIsrael<br>\r\nItaly<br>\r\nIvory Coast<br>\r\nJamaica<br>\r\nJapan<br>\r\nJordan<br>\r\nKazakhstan<br>\r\nKenya<br>\r\nKiribati<br>\r\nKorea North<br>\r\nKorea South<br>\r\nKosovo<br>\r\nKuwait<br>\r\nKyrgyzstan<br>\r\nLaos<br>\r\nLatvia<br>\r\nLebanon<br>\r\nLesotho<br>\r\nLiberia<br>\r\nLibya<br>\r\nLiechtenstein<br>\r\nLithuania<br>\r\nLuxembourg<br>\r\nMacedonia<br>\r\nMadagascar<br>\r\nMalawi<br>\r\nMalaysia<br>\r\nMaldives<br>\r\nMali<br>\r\nMalta<br>\r\nMarshall Islands<br>\r\nMauritania<br>\r\nMauritius<br>\r\nMexico<br>\r\nMicronesia<br>\r\nMoldova<br>\r\nMonaco<br>\r\nMongolia<br>\r\nMontenegro<br>\r\nMorocco<br>\r\nMozambique<br>\r\nMyanmar, {Burma}<br>\r\nNamibia<br>\r\nNauru<br>\r\nNepal<br>\r\nNetherlands<br>\r\nNew Zealand<br>\r\nNicaragua<br>\r\nNiger<br>\r\nNigeria<br>\r\nNorway<br>\r\nOman<br>\r\nPakistan<br>\r\nPalau<br>\r\nPanama<br>\r\nPapua New Guinea<br>\r\nParaguay<br>\r\nPeru<br>\r\nPhilippines<br>\r\nPoland<br>\r\nPortugal<br>\r\nQatar<br>\r\nRomania<br>\r\nRussian Federation<br>\r\nRwanda<br>\r\nSt Kitts & Nevis<br>\r\nSt Lucia<br>\r\nSaint Vincent & the Grenadines<br>\r\nSamoa<br>\r\nSan Marino<br>\r\nSao Tome & Principe<br>\r\nSaudi Arabia<br>\r\nSenegal<br>\r\nSerbia<br>\r\nSeychelles<br>\r\nSierra Leone<br>\r\nSingapore<br>\r\nSlovakia<br>\r\nSlovenia<br>\r\nSolomon Islands<br>\r\nSomalia<br>\r\nSouth Africa<br>\r\nSouth Sudan<br>\r\nSpain<br>\r\nSri Lanka<br>\r\nSudan<br>\r\nSuriname<br>\r\nSwaziland<br>\r\nSweden<br>\r\nSwitzerland<br>\r\nSyria<br>\r\nTaiwan<br>\r\nTajikistan<br>\r\nTanzania<br>\r\nThailand<br>\r\nTogo<br>\r\nTonga<br>\r\nTrinidad & Tobago<br>\r\nTunisia<br>\r\nTurkey<br>\r\nTurkmenistan<br>\r\nTuvalu<br>\r\nUganda<br>\r\nUkraine<br>\r\nUnited Arab Emirates<br>\r\nUnited Kingdom<br>\r\nUnited States<br>\r\nUruguay<br>\r\nUzbekistan<br>\r\nVanuatu<br>\r\nVatican City<br>\r\nVenezuela<br>\r\nVietnam<br>\r\nYemen<br>\r\nZambia<br>\r\nZimbabwe<br>\r\n</div>\r\n</div></code>   "
            }
        ]
    },
    {
        "title": "Getting flex-box column to fill available space",
        "question_body": "I've been trying to get css flex box to work correctly for filling out items in column flex box.  Basically I want this code to evenly space the two flex pieces to each take up 50% of the available height. If I manually set the height to 50% it works, but that seems like the incorrect solution, as I thought that is what setting flex:1 was supposed to do.  I read the guide here: https://css-tricks.com/snippets/css/a-guide-to-flexbox/ and tried the various align-self, flex-grow, align-content to see if those would fix it, but so far I've had no luck. I'm sure I'm missing something simple, but I've just haven't been able to figure it out, and reading the other questions on stack overflow didn't seem to help me in figuring out what I'm doing incorrectly.    <code>.flex {\r\n  display: flex;\r\n}\r\n.flex1 {\r\n  flex: 1;\r\n}\r\n.col-flex {\r\n  flex-flow: column nowrap;\r\n  justify-content: space-evenly;\r\n}</code>  <code><div class=\"flex\" style=\"height:200px\">\r\n  <div class=\"flex1\">\r\n    <div class=\"col-flex\" style=\"height:100%;background-color:grey\">\r\n      <div class=\"flex1\" style=\"background-color:blue;flex-grow:1\">I should be top half, you shouldn't see grey</div>\r\n      <div class=\"flex1\" style=\"background-color:green;flex-grow:1\">I should be bottom half, you shouldn't see grey</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"flex1\" style=\"background-color: red;\">\r\n    The flex on the row based flex works correctly;\r\n  </div>\r\n</div></code>    Full code here: https://codepen.io/anon/pen/EwbLMM ",
        "link": "https://stackoverflow.com/questions/46569420/getting-flex-box-column-to-fill-available-space",
        "score": 5,
        "tags": [
            "html",
            "css",
            "flexbox",
            "alignment"
        ],
        "question_id": 46569420,
        "answer_count": 1,
        "view_count": 4476,
        "comment_count": 1,
        "comments": [
            {
                "body": "The container needs to be set to <code>display: flex </code>"
            }
        ],
        "answers": [
            {
                "score": 4,
                "body": "Make the container a flexbox too. Add <code>display: flex</code> to <code>col-flex</code> - see demo below:    <code>.flex{\r\n  display:flex;\r\n}\r\n.flex1{\r\n  flex:1;\r\n}\r\n.col-flex{\r\n  display: flex; /* ADDED */\r\n  flex-flow: column nowrap;\r\n  justify-content: space-evenly;\r\n}</code>  <code><div class=\"flex\" style=\"height:200px\">\r\n  <div class=\"flex1\">\r\n    <div class=\"col-flex\" style=\"height:100%;background-color:grey\"> \r\n      <div class=\"flex1\" style=\"background-color:blue;flex-grow:1\">I should be top half, you shouldn't see grey</div>\r\n      <div class=\"flex1\" style=\"background-color:green;flex-grow:1\">I should be bottom half, you shouldn't see grey</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"flex1\" style=\"background-color: red;\">\r\n    The flex on the row based flex works correctly;\r\n  </div>\r\n</div>\r\n  </code>   "
            }
        ]
    },
    {
        "title": "Getting my &quot;beer&quot; vertical progress bar to work",
        "question_body": "I'm trying to make a progress bar that looks like emptying glass of beer. Unfortunately I'm not very artistic person but I'm doing my best.  My concept goes like this:   There is a <code><div></code> with \"beer\" background, 100% high vertically. It hides any overflow  Inside there's another <code><div></code> , positioned relatively to the parent. It contains:  White background <code><div></code> to obscure \"beer\" pattern when it's gone  The image of beer foam cap    Here's the concept on picture:   I almost succeeded in my goal, as you can see in this snippet:  Note: the animation requires ES6 async/await    <code>Promise.timeout = function (delay) {\r\n            return new Promise((resolve) => {\r\n                setTimeout(resolve, delay);\r\n            });\r\n        };\r\n        Promise.animationFrame = function () {\r\n            return new Promise((resolve) => {\r\n                requestAnimationFrame(resolve);\r\n            });\r\n        };\r\n        (async function () {\r\n            const progress = document.querySelector(\"div.top\");\r\n            for (let i = 0, l = 1000; i < l; ++i) {\r\n                progress.style.bottom = (100 - i / 10) + \"%\";\r\n                await Promise.animationFrame();\r\n            }\r\n        })();</code>  <code>html, body, div {\r\n    margin: 0px;\r\n    padding: 0px;\r\n}\r\nbody {\r\n    width: 100vw;\r\n    height: 100vh;\r\n    overflow: hidden;\r\n}\r\ndiv.progress {\r\n    max-width:300px;\r\n    width: 100vw;\r\n    float: left;\r\n    position: relative;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    background-image: url(\"https://i.imgur.com/SKfSqEv.jpg\");\r\n    background-size: 500px;\r\n    border-right: 1px solid black;\r\n}\r\ndiv.progress div.top {\r\n    height: 100vh;\r\n    position: relative;\r\n    bottom: 100%;\r\n}\r\ndiv.progress div.top div.white{\r\n    background-color: white;\r\n    width:100%;\r\n    height:100%;\r\n}\r\ndiv.progress div.top div.beer-top {\r\n    /*background-image is at the bottom since it is bse64 */\r\n    background-repeat: repeat-x;\r\n    background-position-y: bottom;\r\n    background-position-x: left;\r\n    background-size: 302px, 100px;\r\n    height: 100px;\r\n}\r\n/*div.progress div.top {\r\n    background-position: bottom;\r\n    height: 100%;\r\n    background-image: url(\"img/beer-top.png\");\r\n}*/\r\ndiv.main {\r\n    float: left;\r\n}\r\ndiv.progress div.top div.beer-top {\r\n    background-image:  url('https://preview.ibb.co/k2x2V6/beer_top.png');\r\n}</code>  <code><div class=\"progress\">\r\n        <div class=\"top\">\r\n            <div class=\"white\"></div>\r\n        <div class=\"beer-top\"></div>\r\n        </div>\r\n        <!--<div class=\"progress-area\">\r\n        </div>-->\r\n    </div>\r\n    <div class=\"main\">\r\n    </div></code>    But there are two big issues:   This ugly orange line:   Because I set <code>div.white</code> height to <code>100%</code> , the foam is pushed down and is visible even at \"100%\" state. It also disappears completely at the end. The desired state is this:    How to fix those two issues?  I'm looking for CSS only solution, so that the bar can be displayed statically as well (eg. at 40% when the page loads without javascript).  Also note: setting the foam as background for the \"white div\" is not an option, because the bottom of the foam image is transparent. ",
        "link": "https://stackoverflow.com/questions/47424527/getting-my-beer-vertical-progress-bar-to-work",
        "score": 5,
        "tags": [
            "javascript",
            "html",
            "css",
            "progress-bar"
        ],
        "question_id": 47424527,
        "answer_count": 2,
        "view_count": 443,
        "comment_count": 5,
        "comments": [
            {
                "body": "@MattThurston exactly, as I said in the comment above. I fixed it by adding <code>margin-top: -2</code> ."
            }
        ],
        "answers": [
            {
                "score": 1,
                "body": "Because there was a need for a CSS only solution. You could add the foam to your 'white' div as a background and a white gradient (ofcourse some tweeking is needed with the image to show up perfectly).  See JSfiddle:    <code>            Promise.timeout = function (delay) {\r\n            return new Promise((resolve) => {\r\n                setTimeout(resolve, delay);\r\n            });\r\n        };\r\n        Promise.animationFrame = function () {\r\n            return new Promise((resolve) => {\r\n                requestAnimationFrame(resolve);\r\n            });\r\n        };\r\n        (async function () {\r\n            const progress = document.querySelector(\"div.top\");\r\n            for (let i = 0, l = 1000; i < l; ++i) {\r\n                progress.style.bottom = (100 - i / 10) + \"%\";\r\n                await Promise.animationFrame();\r\n            }\r\n        })();</code>  <code>html, body, div {\r\n    margin: 0px;\r\n    padding: 0px;\r\n}\r\nbody {\r\n    width: 100vw;\r\n    height: 100vh;\r\n    overflow: hidden;\r\n}\r\ndiv.progress {\r\n    max-width:300px;\r\n    width: 100vw;\r\n    float: left;\r\n    position: relative;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    background-image: url(\"https://i.imgur.com/SKfSqEv.jpg\");\r\n    background-size: 500px;\r\n    border-right: 1px solid black;\r\n}\r\ndiv.progress div.top {\r\n    height: 100vh;\r\n    position: relative;\r\n    bottom: 100%;\r\n}\r\ndiv.progress div.top div.white{\r\n    background-color: white;\r\n    width:100%;\r\n    height:100%;\r\n}\r\ndiv.progress div.top div.beer-top {\r\n    /*background-image is at the bottom since it is bse64 */\r\n    background-repeat: repeat-x;\r\n    background-position-y: bottom;\r\n    background-position-x: left;\r\n    background-size: 302px, 100px;\r\n    height: 100px;\r\n}\r\n/*div.progress div.top {\r\n    background-position: bottom;\r\n    height: 100%;\r\n    background-image: url(\"img/beer-top.png\");\r\n}*/\r\ndiv.main {\r\n    float: left;\r\n}\r\ndiv.progress div.top div.beer-top {\r\n    background-image:  url('https://preview.ibb.co/k2x2V6/beer_top.png');\r\n}\r\n.top {\r\n    background: no-repeat;\r\n    background-position: bottom;\r\n    background-image:  url('https://preview.ibb.co/k2x2V6/beer_top.png'),linear-gradient(to top, rgba(0,0,0,0) 1%, rgba(255,255,255,1) 5%);\r\n}</code>  <code><div class=\"progress\">\r\n        <div class=\"top\">\r\n        </div>\r\n        <!--<div class=\"progress-area\">\r\n        </div>-->\r\n    </div>\r\n    <div class=\"main\">\r\n    </div></code>   "
            }
        ]
    },
    {
        "title": "How to make overflow-y scroll without changing overflow-x to auto?",
        "question_body": "I know this is a duplicated question.  And below link is the answer the most nearest with my question that I've found.  CSS overflow-x: visible; and overflow-y: hidden; causing scrollbar issue  In this link, the W3C spec says:   The computed values of ‘overflow-x’ and ‘overflow-y’ are the same as their specified values, except that some combinations with ‘visible’ are not possible: if one is specified as ‘visible’ and the other is ‘scroll’ or ‘auto’, then ‘visible’ is set to ‘auto’. The computed value of ‘overflow’ is equal to the computed value of ‘overflow-x’ if ‘overflow-y’ is the same; otherwise it is the pair of computed values of ‘overflow-x’ and ‘overflow-y’.   What I want to know is, are there any new solution of this.  The problem of mine is in this fiddle.  I made 'sidebar' class of 'BootStrap' simple in a fiddle of mine.  <code>overflow-x: visible;\n//overflow-y: scroll;\n</code>  You can see that I commented out 'overflow-y: scroll' of class '.panel' in css part.  In this case, 'hover' will work but 'scroll' won't.  When if I clear that comment out, 'hover' won't work but 'scroll' will.  What I wanna see is, 'hover' and 'scroll' working together.  Does anyone have any ways or ideas to fix this?  Or are there still no way to solve this problem? ",
        "link": "https://stackoverflow.com/questions/47628512/how-to-make-overflow-y-scroll-without-changing-overflow-x-to-auto",
        "score": 5,
        "tags": [
            "javascript",
            "jquery",
            "html",
            "css"
        ],
        "question_id": 47628512,
        "answer_count": 4,
        "view_count": 4921,
        "comment_count": 0,
        "comments": [],
        "answers": [
            {
                "score": 1,
                "body": "Your code is working you just can't see hover because of the width you set to that block is 50px also if you set position:absolute in hover you can see that hover effect but it overlap the child item. so one thing i want to know you want same width or you just set for a demo purpose. "
            },
            {
                "score": 1,
                "body": "I liked this question.  So, I have created a fiddle here: https://jsfiddle.net/n4tvvora/4/  Its comes pretty close to what you need (I think). Let me know if it does NOT suit your requirement. We can make it better.  Code highlights:  <code>.panel:hover ul.list:first-child {\n    position: absolute;\n    display: inline-block;\n    height: 100%;\n    width: auto;\n    overflow-y: auto;\n    overflow-x: hidden;\n}\n.panel ul.list:first-child {\n    display: block;\n}\n</code> "
            }
        ]
    },
    {
        "title": "Flex container vertical overflowing parent div",
        "question_body": "I´m currently trying to create yome kind of layout with fixed header and footer and an dynamic content area, which should use the remaining vertical space. The content-wrapper has a content container which can contain a lot of data, so a scrollbar can appear.  But now to the problem: as you can see, the main wrapper which simulates the page height, should stop at 200px height, but is being stretched by the content container.  I don´t want to use a max-height at the content-wrapper and also can´t use flex-shrink on the content-wrapper because this would screw up the layout by moving the footer inside the content area and let them overlap.  So with this in mind, how can I create a layout with a dynamic content area, which is not spreading vertical to infinity but takes the remaining space of the page and is displaying the provided content inside the content wrapper?    <code>div.main-wrapper {\r\n  height: 200px;\r\n  max-height: 200px;\r\n  min-height: 200px;\r\n  width: 100%;\r\n  min-width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: grey;\r\n}\r\ndiv.content-wrapper {\r\n  flex: 1 0 auto;\r\n}\r\ndiv.content {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-flow: column;\r\n}\r\ndiv.header,\r\ndiv.footer {\r\n  height: 50px;\r\n  max-height: 50px;\r\n  min-height: 50px;\r\n  background-color: green;\r\n  min-width: 100%;\r\n  width: 100%;\r\n}</code>  <code><div class=\"main-wrapper\">\r\n  <div class=\"header\">FIXED HEADER</div>\r\n  <div class=\"content-wrapper\">\r\n    <div class=\"content\">\r\n      DYNAMIC CONTENT\r\n      <br/>DYNAMIC CONTENT\r\n      <br/>DYNAMIC CONTENT\r\n      <br/>DYNAMIC CONTENT\r\n      <br/>DYNAMIC CONTENT\r\n      <br/>DYNAMIC CONTENT\r\n      <br/>DYNAMIC CONTENT\r\n      <br/>DYNAMIC CONTENT\r\n    </div>\r\n  </div>\r\n  <div class=\"footer\">FIXED FOOTER</div>\r\n</div></code>     EDIT: I edited my snippet in order to get more close to my real problem, which I´m trying go simplyfy: As you can see inside the content wrapper, there is another component, let´s treat it as a black box since this layout should work with every div inside the content-wrapper, that takes up 100% height and width. There should not just be added an overflow inside content or content wrapper. The goal is to have the content wrapper container, which takes up the remaining space and limits the containing content-div, which should take up 100% height of the content wrapper and not pushing the height of the main-wrapper. As you can see at the updated snippet the main-wrapper is clearly larger than 200px due to the content area stretching the content-wrapper. So how to fix the problem with the given parameters of not using an overflow property inside content-wrapper and a content blackbox div.  ",
        "link": "https://stackoverflow.com/questions/51728855/flex-container-vertical-overflowing-parent-div",
        "score": 5,
        "tags": [
            "html",
            "css",
            "flexbox"
        ],
        "question_id": 51728855,
        "answer_count": 2,
        "view_count": 5535,
        "comment_count": 3,
        "comments": [],
        "answers": [
            {
                "score": 2,
                "body": "If you are going to incorporate further columning within your content. I strongly reccomend you use css grid for this. It will allow for much more control and flexibility.  As per the specification.   CSS Grid defines a two-dimensional grid-based layout system.  Unlike Flexible Box Layout , which is single-axis–oriented, Grid Layout is optimized for 2-dimensional layouts: those in which alignment of content is desired in both dimensions.   Example  <code>grid-template-rows: 50px 100px 50px;</code>  You can use the <code>fr</code> unit to a fraction of the available space. This is similar to auto.  You can even use <code>minmax(100px, 1fr);</code> to set the upper and lower limits of the height.    <code>div.main-wrapper {\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-rows: 50px 100px 50px;\r\n  background: grey;\r\n}\r\n.content {\r\n  padding: 10px;\r\n  background-color: red;\r\n  overflow-y: auto;\r\n}\r\n.header,\r\n.footer {\r\n  background-color: green;\r\n}</code>  <code><div class=\"main-wrapper\">\r\n  <div class=\"header\">FIXED HEADER</div>\r\n  <div class=\"content\">\r\n    DYNAMIC CONTENT\r\n    <br/>DYNAMIC CONTENT\r\n    <br/>DYNAMIC CONTENT\r\n    <br/>DYNAMIC CONTENT\r\n    <br/>DYNAMIC CONTENT\r\n    <br/>DYNAMIC CONTENT\r\n    <br/>DYNAMIC CONTENT\r\n    <br/>DYNAMIC CONTENT\r\n  </div>\r\n  <div class=\"footer\">FIXED FOOTER</div>\r\n</div></code>   "
            },
            {
                "score": 5,
                "body": "Just apply:  <code>div.content-wrapper {\n  flex: 1;\n  overflow: auto;\n}\n</code>  Explanation:   <code>flex: 1</code> it takes up all remaining space available.  <code>overflow: auto;</code> it triggers the scrollbar when needed.   There is no needs to apply anything on <code>div.content</code> for creating such layout, it can be removed too. See the simplified as follows:    <code>div.main-wrapper {\r\n  height: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\ndiv.content-wrapper {\r\n  flex: 1;\r\n  overflow: auto;\r\n  background: lightblue;\r\n}\r\ndiv.header,\r\ndiv.footer {\r\n  height: 50px;\r\n  background: lightgreen;\r\n}</code>  <code><div class=\"main-wrapper\">\r\n  <div class=\"header\">FIXED HEADER</div>\r\n  <div class=\"content-wrapper\">\r\n      DYNAMIC CONTENT\r\n      <br/>DYNAMIC CONTENT\r\n      <br/>DYNAMIC CONTENT\r\n      <br/>DYNAMIC CONTENT\r\n      <br/>DYNAMIC CONTENT\r\n      <br/>DYNAMIC CONTENT\r\n      <br/>DYNAMIC CONTENT\r\n      <br/>DYNAMIC CONTENT\r\n      <br/>DYNAMIC CONTENT\r\n      <br/>DYNAMIC CONTENT\r\n      <br/>DYNAMIC CONTENT\r\n  </div>\r\n  <div class=\"footer\">FIXED FOOTER</div>\r\n</div></code>   "
            }
        ]
    },
    {
        "title": "Angular Material - mat-select : Custom padding overflows parent element",
        "question_body": "I am using Angular Material components, and I am trying to customise a combo-box (select). When I change the padding of the component, it overflows the wrapper div element. I was expecting it to grow along.  Look and feel before adding padding   Look and feel after adding padding   As we can see the mat-select div did not grew as the the mat-select element increase its width by adding padding  html code  <code><div style=\"border: 1px solid black; min-width: 100px; margin: 0px 5px; float: left\">\n    <mat-form-field class=\"my-select template-select\">\n        <mat-select [(value)]=\"templateSelected\">\n            <mat-select-trigger>\n                <div fxLayoutAlign=\"start center\">\n                    <i fxFlex=\"none\" class=\"material-icons md-dark\">visibility</i>\n                    <span fxFlex>{{templateSelected}}</span>\n                </div>\n            </mat-select-trigger>\n            <mat-option value=\"Full data\">\n                <div fxLayoutAlign=\"start center\" class=\"template-option\">\n                    <i fxFlex=\"none\" class=\"material-icons md-dark\">done</i>\n                    <span fxFlex>Full data</span>\n                </div>\n            </mat-option>\n            <mat-option value=\"My quarterly report\">\n                <div fxLayoutAlign=\"start center\" class=\"templateOption\">\n                    <i fxFlex=\"24px\" class=\"material-icons md-dark\"></i>\n                    <span fxFlex>My quarterly report</span>\n                </div>\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n<div style=\"border: 1px solid black; min-width: 100px; margin-right: 5px; float: left\">\n    <button class=\"toolbar-button\" mat-stroked-button>FILTER</button>\n</div>\n</code>  I am changing the padding on the mat-select element as you can see below. (perhaps is not the place to change it)  css code  <code>.my-select mat-select {\n    background-color: rgba(58, 40, 8, 0.12);\n    /*padding: 6px 0px 6px 0px;*/ /* NO Left and right padding*/\n    padding: 6px 10px 6px 10px;   /* 10px left and right padding*/\n    border-radius: 5px;\n}\n.my-select .mat-select-value {\n    font-family: Roboto-Regular;\n    font-size: 16px;\n    color: rgba(58, 40, 8, 0.87);\n}\n.my-select .mat-form-field-underline {\n    display: none;\n}\n.my-select mat-select-trigger div>i {\n    margin-right: 8px;\n}\n</code>  Does anyone understand why this behaviour? How can I fix it?  Live code available: https://stackblitz.com/edit/angular-mat-select-overflow  Thank you very much for your help.  Regards ",
        "link": "https://stackoverflow.com/questions/55018297/angular-material-mat-select-custom-padding-overflows-parent-element",
        "score": 5,
        "tags": [
            "html",
            "css",
            "angular",
            "angular-material"
        ],
        "question_id": 55018297,
        "answer_count": 1,
        "view_count": 8376,
        "comment_count": 3,
        "comments": [],
        "answers": [
            {
                "score": 8,
                "body": "I think here you need to use <code>box-sizing: border-box;</code> With the CSS <code>box-sizing</code> Property. The box-sizing property allows us to include the padding and border in an element's total width and height.  style.css  <code>/* Add application styles & imports to this file! */\n.my-select mat-select {\n    background-color: rgba(58, 40, 8, 0.12);\n    /*padding: 6px 0px 6px 0px;*/ /* NO Left and right padding*/\n    padding: 6px 10px 6px 10px;   /* 10px left and right padding*/\n    box-sizing: border-box;\n    border-radius: 5px;\n}\n</code>  Forked solution on stackblitz "
            }
        ]
    }
]